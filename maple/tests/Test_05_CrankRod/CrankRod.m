% +--------------------------------------------------------------------------+
% | 'Indigo' module version 1.0 - BSD 3-Clause License - Copyright (c) 2023  |
% | Current version authors:                                                 |
% |   Davide Stocco and Enrico Bertolazzi.                                   |
% +--------------------------------------------------------------------------+

% Matlab generated code for implicit system: CrankRod
% This file has been automatically generated by Indigo.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef CrankRod < Indigo.Systems.Implicit
  %
  % No class description provided.
  %
  properties (SetAccess = protected, Hidden = true)
    % User data
    m_m__1 = 1.0;
    m_m__2 = 1.0;
    m_J__1 = 1.0;
    m_J__2 = 1.0;
    m_g = 9.81;
    m_ell__1 = 1.0;
    m_ell__2 = 1.0;
  end
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = CrankRod( varargin )
      % Class constructor.

      % Superclass constructor
      num_eqns = 15;
      num_veil = 0;
      num_invs = 9;
      this = this@Indigo.Systems.Implicit('CrankRod', num_eqns, num_veil, num_invs);

      % User data
      if (nargin == 0)
        % Keep default values
      elseif (nargin == 1 && isstruct(varargin{1}))
        this.m_m__1 = varargin{1}.m__1;
        this.m_m__2 = varargin{1}.m__2;
        this.m_J__1 = varargin{1}.J__1;
        this.m_J__2 = varargin{1}.J__2;
        this.m_g = varargin{1}.g;
        this.m_ell__1 = varargin{1}.ell__1;
        this.m_ell__2 = varargin{1}.ell__2;
      elseif (nargin == 7)
        this.m_m__1 = varargin{1};
        this.m_m__2 = varargin{2};
        this.m_J__1 = varargin{3};
        this.m_J__2 = varargin{4};
        this.m_g = varargin{5};
        this.m_ell__1 = varargin{6};
        this.m_ell__2 = varargin{7};
      else
        error('wrong number of input arguments.');
      end
    end % CrankRod
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_F = F( this, in_1, in_2, in_3, t )
      % Evaluate the function F.

      % Extract properties
      m__1 = this.m_m__1;
      m__2 = this.m_m__2;
      J__1 = this.m_J__1;
      J__2 = this.m_J__2;
      g = this.m_g;
      ell__1 = this.m_ell__1;
      ell__2 = this.m_ell__2;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      theta__1 = in_1(3);
      x__2 = in_1(4);
      y__2 = in_1(5);
      theta__2 = in_1(6);
      u__1 = in_1(7);
      v__1 = in_1(8);
      omega__1 = in_1(9);
      u__2 = in_1(10);
      v__2 = in_1(11);
      omega__2 = in_1(12);
      lambda__1 = in_1(13);
      lambda__2 = in_1(14);
      lambda__3 = in_1(15);
      x__1_dot = in_2(1);
      y__1_dot = in_2(2);
      theta__1_dot = in_2(3);
      x__2_dot = in_2(4);
      y__2_dot = in_2(5);
      theta__2_dot = in_2(6);
      u__1_dot = in_2(7);
      v__1_dot = in_2(8);
      omega__1_dot = in_2(9);
      u__2_dot = in_2(10);
      v__2_dot = in_2(11);
      omega__2_dot = in_2(12);
      lambda__1_dot = in_2(13);
      lambda__2_dot = in_2(14);
      lambda__3_dot = in_2(15);

      % Evaluate function
      out_1 = -u__1 + x__1_dot;
      out_2 = -y__1_dot + v__1;
      out_3 = -u__2 + x__2_dot;
      out_4 = -y__2_dot + v__2;
      out_5 = -theta__2_dot + omega__2;
      out_6 = -theta__1_dot + omega__1;
      t1 = cos(theta__2);
      t2 = t1 ^ 2;
      t3 = ell__2 ^ 2;
      t4 = t3 * t2;
      t5 = m__2 * t4;
      t6 = sin(theta__2);
      t7 = t6 ^ 2;
      t8 = t7 * t3;
      t10 = m__2 * t3;
      t12 = m__2 * t8 - 4 * J__2 - t10 + t5;
      t14 = lambda__1 * t6;
      t20 = t1 * lambda__2;
      out_7 = 2 * t1 * ell__2 * lambda__3 - 2 * ell__2 * t14 + 2 * ell__2 * t20 + omega__2_dot * t12;
      t23 = -t12;
      t27 = t1 * t7;
      t28 = omega__2 ^ 2;
      t29 = t3 * ell__2;
      t30 = t29 * t28;
      t31 = m__2 ^ 2;
      t32 = t31 * t30;
      t34 = t2 * t1;
      t35 = t28 * t34;
      t36 = t31 * t29;
      t38 = t28 * t1;
      t39 = t36 * t38;
      t40 = t1 * J__2;
      t41 = ell__2 * t28;
      t42 = m__2 * t41;
      t45 = lambda__3 * t6;
      t46 = t3 * t1;
      t47 = m__2 * t46;
      t50 = t1 * t6;
      t51 = t3 * lambda__2;
      t52 = m__2 * t51;
      t55 = t2 * lambda__1;
      t58 = t3 * lambda__1;
      t59 = m__2 * t58;
      t61 = J__2 * lambda__1;
      out_8 = -2 * u__2_dot * m__2 * t23 + 2 * t10 * t55 - t32 * t27 - t36 * t35 + 4 * t42 * t40 + 2 * t47 * t45 + 2 * t52 * t50 + t39 - 2 * t59 - 8 * t61;
      t64 = t7 * t6;
      t65 = t28 * t64;
      t66 = m__2 * t29;
      t68 = t2 * t6;
      t71 = t28 * t6;
      t73 = t6 * J__2;
      t78 = t2 * lambda__3;
      t81 = lambda__2 * t2;
      out_9 = m__2 * t30 * t68 - 2 * t46 * t14 + v__2_dot * t23 + 2 * t3 * t78 + 2 * t3 * t81 - 4 * t41 * t73 + t66 * t65 - t66 * t71;
      t84 = m__1 * ell__1;
      t85 = omega__1 ^ 2;
      t86 = sin(theta__1);
      t87 = t86 * t85;
      t89 = cos(theta__1);
      t94 = m__1 * g;
      out_10 = t89 * omega__1_dot * t84 + 2 * m__1 * v__1_dot - t87 * t84 + 2 * t94 - 2 * lambda__2;
      t97 = ell__1 ^ 2;
      t98 = t89 ^ 2;
      t99 = t98 * t97;
      t101 = t86 ^ 2;
      t102 = t101 * t97;
      t103 = m__1 * t102;
      t104 = m__1 * t97;
      t106 = m__1 * t99 - 4 * J__1 + t103 - t104;
      out_11 = -2 * t86 * ell__1 * lambda__1 + 2 * t89 * ell__1 * lambda__2 + omega__1_dot * t106;
      t118 = t101 * t85;
      t119 = t97 * ell__1;
      t120 = t119 * t89;
      t121 = m__1 ^ 2;
      t124 = t98 * t89;
      t125 = t124 * t85;
      t126 = t121 * t119;
      t128 = t89 * t85;
      t130 = t85 * J__1;
      t131 = ell__1 * t89;
      t135 = t101 * lambda__1;
      t138 = t98 * lambda__1;
      t141 = t86 * lambda__2;
      t142 = t97 * t89;
      t143 = m__1 * t142;
      t146 = t97 * lambda__1;
      t149 = J__1 * lambda__1;
      out_12 = 2 * u__1_dot * m__1 * t106 + 4 * m__1 * t131 * t130 - t121 * t120 * t118 + 2 * m__1 * t146 - 4 * t104 * t135 - 2 * t104 * t138 - t126 * t125 + t126 * t128 + 2 * t143 * t141 + 8 * t149;
      t153 = t31 * t3;
      t154 = t153 * t142;
      t157 = t101 * lambda__2;
      t159 = t3 * t97;
      t160 = m__2 * t121;
      t161 = t160 * t159;
      t180 = t85 * t7;
      t181 = t89 * t101;
      t183 = t3 * t119;
      t184 = t31 * t121;
      t185 = t184 * t183;
      t187 = t85 * t2;
      t190 = m__1 * J__1;
      t192 = t153 * t131;
      t198 = t98 * t28;
      t200 = ell__2 * t97;
      t201 = t160 * t200;
      t204 = t101 * t28;
      t206 = t29 * t97;
      t207 = t184 * t206;
      t214 = t121 * t3;
      t215 = m__2 * t214;
      t220 = m__1 * t3;
      t221 = t31 * t220;
      t224 = -2 * t154 * t141 * t2 * m__1 - 2 * t154 * t141 * t7 * m__1 - 2 * t161 * t101 * t1 * t45 - 2 * t161 * t98 * t1 * t45 - 2 * t161 * t98 * lambda__2 * t50 - 2 * t161 * t157 * t50 + t185 * t181 * t180 - 4 * t192 * t180 * t190 + t185 * t181 * t187 - 4 * t192 * t187 * t190 - 4 * t201 * t198 * t40 + t207 * t198 * t27 - 4 * t201 * t204 * t40 + t207 * t204 * t27 - 2 * t215 * t146 - 2 * t221 * t146 - 8 * t59 * t190;
      t225 = m__2 * t104;
      t235 = J__1 * J__2;
      t245 = t89 * t86;
      t263 = t85 * J__2;
      t271 = J__2 * t190;
      t280 = -8 * t225 * t61 - 8 * t121 * t97 * t61 - 32 * t61 * t190 - 8 * t153 * t149 - 32 * lambda__1 * m__2 * t235 + 2 * t154 * t86 * lambda__2 * m__1 + 8 * m__2 * t97 * t245 * m__1 * J__2 * lambda__2 + 2 * t161 * t1 * t45 - t185 * t89 * t180 - t185 * t89 * t187 + t185 * t124 * t180 + t185 * t124 * t187 - t185 * t89 * t118 - 4 * t160 * t120 * t101 * t263 + 4 * t192 * t85 * t190 + 16 * ell__1 * m__2 * t128 * t271 + 16 * ell__2 * m__2 * t38 * t271;
      t293 = t98 * t55;
      t296 = lambda__1 * t7;
      t299 = t31 * m__1 * t159;
      t307 = t6 * t190;
      t324 = t31 * t214;
      t327 = m__2 * t126;
      t331 = t121 * t29;
      t332 = t31 * t331;
      t334 = -t207 * t101 * t38 - t207 * t98 * t38 + t207 * t101 * t35 + t207 * t98 * t35 - 2 * t161 * t101 * t55 - 2 * t161 * t293 - 2 * t299 * t98 * t296 - 2 * t299 * t293 + 2 * t161 * lambda__2 * t50 + 8 * t10 * t20 * t307 + 8 * t10 * t1 * lambda__3 * t307 - t207 * t28 * t27 - 4 * t39 * t7 * t190 + 4 * t201 * t28 * t40 + t324 * t119 * t128 + 4 * t327 * t89 * t263 - t332 * t97 * t35;
      t346 = t97 * t138;
      t354 = t97 * t55;
      t376 = t7 * J__1;
      t383 = -4 * t32 * t34 * t190 + t332 * t97 * t38 + 4 * t32 * t1 * t190 + 2 * t215 * t97 * t135 + 2 * t215 * t346 + 2 * t221 * t346 + 8 * t225 * t98 * t61 + 2 * t215 * t354 + 8 * t5 * lambda__1 * t190 + 2 * t221 * t97 * t296 + 2 * t221 * t354 - t324 * t119 * t125 - 4 * t327 * t124 * t263 + 8 * t121 * t102 * t61 + 8 * t121 * t99 * t61 + 8 * t31 * t58 * t376 + 8 * t31 * t4 * t149;
      out_13 = t224 + t280 + t334 + t383;
      t386 = m__1 * m__2;
      t387 = t386 * t159;
      t393 = t98 * t86;
      t395 = t160 * t183;
      t401 = t386 * t3 * ell__1;
      t404 = t2 * J__1;
      t409 = t160 * t206;
      t418 = t121 * g;
      t426 = J__2 * lambda__2;
      t431 = g * t3;
      t432 = t160 * t431;
      t447 = t101 * t86;
      t452 = -2 * t387 * t245 * t296 - 2 * t387 * t245 * t55 + t395 * t393 * t180 + t395 * t393 * t187 - 4 * t401 * t87 * t376 - 4 * t401 * t87 * t404 + 2 * t409 * t204 * t68 + 2 * t409 * t198 * t68 - 32 * lambda__2 * t235 + 8 * t418 * t97 * J__2 + 32 * t94 * t235 - 8 * t10 * J__1 * lambda__2 - 8 * t104 * t426 + 2 * t432 * t97 * t101 * t7 + 2 * t432 * t97 * t98 * t7 + 2 * t432 * t97 * t101 * t2 + 2 * t432 * t97 * t98 * t2 + t395 * t447 * t180 + t395 * t447 * t187;
      t462 = t28 * t73;
      t463 = t121 * ell__2;
      t467 = t1 * t14;
      t478 = t101 * t81;
      t481 = lambda__2 * t7;
      t500 = t6 * J__1;
      t509 = m__2 * t331;
      t514 = m__2 * m__1 * t29;
      t517 = -t395 * t86 * t180 - t395 * t86 * t187 + 4 * t401 * t86 * t130 - t395 * t98 * t87 - 8 * t463 * t99 * t462 - 4 * t214 * t102 * t467 - 4 * t214 * t99 * t467 + 2 * t387 * t89 * t86 * lambda__1 - 2 * t387 * t478 - 2 * t387 * t101 * t481 + 2 * t409 * t101 * t65 + 2 * t409 * t98 * t65 - 2 * t409 * t101 * t71 - 2 * t409 * t98 * t71 - 2 * t409 * t28 * t68 - 8 * t386 * t30 * t2 * t500 - 8 * t463 * t102 * t462 + 2 * t509 * t97 * t71 + 8 * t514 * t28 * t500;
      t534 = m__2 * t418;
      t540 = t121 * t159;
      t551 = m__2 * t220;
      t580 = m__2 * t94;
      t583 = 8 * t121 * t200 * t462 + 32 * m__1 * t41 * t6 * t235 - 2 * t509 * t97 * t65 - 8 * t514 * t28 * t64 * J__1 - 2 * t534 * t3 * t102 - 2 * t534 * t3 * t99 + 4 * t540 * t467 + 16 * m__1 * t46 * lambda__1 * t500 + 8 * t143 * t86 * t61 + 2 * t551 * t97 * t481 + 2 * t551 * t97 * t81 + 4 * t540 * t478 + 4 * t540 * t98 * t81 + 2 * t551 * t97 * t157 + 4 * t540 * t101 * t78 + 4 * t540 * t98 * t78 - 2 * t534 * t3 * t97 * t7 - 2 * t534 * t3 * t97 * t2 - 8 * t580 * t3 * t376;
      t637 = t121 * g * t97;
      t643 = -8 * t580 * t3 * t404 - t215 * t119 * t447 * t85 - 4 * t121 * t119 * t98 * t86 * t263 + t215 * t119 * t87 + 16 * m__1 * ell__1 * t86 * t85 * t235 + 2 * t534 * t159 + 8 * t580 * t3 * J__1 - 4 * t121 * t119 * t447 * t263 + 4 * t121 * t119 * t86 * t263 - 2 * t551 * t97 * lambda__2 + 8 * t103 * t426 - 4 * t540 * t81 + 8 * t52 * t376 - 16 * m__1 * t51 * t404 + 8 * t52 * t404 - 4 * t540 * t78 - 16 * m__1 * t4 * J__1 * lambda__3 - 8 * t637 * t101 * J__2 - 8 * t637 * t98 * J__2;
      out_14 = t452 + t517 + t583 + t643;
      t648 = t31 * g;
      out_15 = 8 * J__2 * g * m__2 - 2 * m__2 * t3 * lambda__3 + 2 * t10 * lambda__3 * t7 - 8 * J__2 * lambda__3 - 2 * t10 * t481 - 4 * t10 * t81 + 2 * t47 * t14 + 2 * t31 * t431 - t32 * t68 - t36 * t65 + t36 * t71 - 2 * t648 * t4 + 4 * t42 * t73 - 2 * t648 * t8 + 8 * t426 + 2 * t52;

      % Store outputs
      out_F = zeros(15, 1);
      out_F(1) = out_1;
      out_F(2) = out_2;
      out_F(3) = out_3;
      out_F(4) = out_4;
      out_F(5) = out_5;
      out_F(6) = out_6;
      out_F(7) = out_7;
      out_F(8) = out_8;
      out_F(9) = out_9;
      out_F(10) = out_10;
      out_F(11) = out_11;
      out_F(12) = out_12;
      out_F(13) = out_13;
      out_F(14) = out_14;
      out_F(15) = out_15;
    end % F
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_x = JF_x( this, in_1, in_2, in_3, t )
      % Evaluate the Jacobian of F with respect to x.

      % Extract properties
      m__1 = this.m_m__1;
      m__2 = this.m_m__2;
      J__1 = this.m_J__1;
      J__2 = this.m_J__2;
      g = this.m_g;
      ell__1 = this.m_ell__1;
      ell__2 = this.m_ell__2;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      theta__1 = in_1(3);
      x__2 = in_1(4);
      y__2 = in_1(5);
      theta__2 = in_1(6);
      u__1 = in_1(7);
      v__1 = in_1(8);
      omega__1 = in_1(9);
      u__2 = in_1(10);
      v__2 = in_1(11);
      omega__2 = in_1(12);
      lambda__1 = in_1(13);
      lambda__2 = in_1(14);
      lambda__3 = in_1(15);
      x__1_dot = in_2(1);
      y__1_dot = in_2(2);
      theta__1_dot = in_2(3);
      x__2_dot = in_2(4);
      y__2_dot = in_2(5);
      theta__2_dot = in_2(6);
      u__1_dot = in_2(7);
      v__1_dot = in_2(8);
      omega__1_dot = in_2(9);
      u__2_dot = in_2(10);
      v__2_dot = in_2(11);
      omega__2_dot = in_2(12);
      lambda__1_dot = in_2(13);
      lambda__2_dot = in_2(14);
      lambda__3_dot = in_2(15);

      % Evaluate function
      t1 = m__1 * ell__1;
      t2 = omega__1 ^ 2;
      t3 = cos(theta__1);
      t4 = t3 * t2;
      t6 = sin(theta__1);
      out_10_3 = -t6 * omega__1_dot * t1 - t4 * t1;
      out_11_3 = -2 * t3 * ell__1 * lambda__1 - 2 * t6 * ell__1 * lambda__2;
      t14 = t2 * t6;
      t15 = t3 ^ 2;
      t16 = ell__1 ^ 2;
      t17 = t16 * ell__1;
      t18 = t17 * t15;
      t19 = m__1 ^ 2;
      t20 = t19 * t18;
      t22 = t6 ^ 2;
      t23 = t22 * t6;
      t24 = t23 * t2;
      t25 = t19 * t17;
      t28 = t2 * J__1;
      t29 = ell__1 * t6;
      t30 = m__1 * t29;
      t34 = m__1 * t16;
      t35 = t3 * t34;
      out_12_3 = 2 * t34 * t15 * lambda__2 - 2 * t34 * t22 * lambda__2 - 4 * t35 * t6 * lambda__1 + t20 * t14 - t25 * t14 + t25 * t24 - 4 * t30 * t28;
      t44 = lambda__2 * m__1;
      t46 = ell__2 ^ 2;
      t47 = t46 * t16;
      t48 = m__2 ^ 2;
      t49 = t48 * t47;
      t52 = J__2 * m__1;
      t53 = lambda__2 * t52;
      t54 = t16 * t15;
      t61 = t16 * t22;
      t66 = t19 * t46;
      t67 = t48 * t66;
      t69 = t2 * J__2;
      t70 = t6 * t69;
      t71 = m__2 * t25;
      t79 = cos(theta__2);
      t80 = t79 ^ 2;
      t81 = t80 * lambda__1;
      t82 = t16 * t3;
      t84 = m__1 * t46;
      t86 = t6 * t48 * t84;
      t89 = t2 * t80;
      t90 = t15 * t6;
      t92 = t46 * t17;
      t93 = t48 * t19;
      t94 = t93 * t92;
      t96 = sin(theta__2);
      t97 = t96 ^ 2;
      t98 = t2 * t97;
      t101 = m__1 * J__1;
      t103 = t48 * t46;
      t104 = t103 * t29;
      t110 = t97 * lambda__1;
      t114 = 8 * m__2 * t54 * t53 - 8 * m__2 * t61 * t53 + 4 * t104 * t89 * t101 + 4 * t104 * t98 * t101 + 4 * t86 * t82 * t110 - t67 * t17 * t14 + 2 * t49 * t15 * t44 + t67 * t17 * t24 - 2 * t49 * t22 * t44 + 4 * t71 * t23 * t69 + 4 * t86 * t82 * t81 - t94 * t90 * t89 - t94 * t90 * t98 - 4 * t71 * t70;
      t115 = J__2 * lambda__1;
      t125 = m__1 * t97;
      t126 = lambda__2 * t125;
      t127 = t103 * t61;
      t130 = t80 * m__1;
      t131 = lambda__2 * t130;
      t132 = t103 * t54;
      t149 = m__2 * t19;
      t156 = J__2 * t101;
      t157 = ell__1 * m__2;
      t161 = -16 * t6 * m__2 * t34 * t3 * t115 - 4 * t86 * t16 * t3 * lambda__1 - 4 * t104 * t2 * t101 + t94 * t15 * t14 - 16 * t157 * t14 * t156 + 4 * t149 * t18 * t70 - t94 * t23 * t89 - t94 * t23 * t98 + t94 * t6 * t89 + t94 * t6 * t98 + 2 * t127 * t126 - 2 * t132 * t126 + 2 * t127 * t131 - 2 * t132 * t131;
      out_13_3 = t114 + t161;
      t164 = m__2 * t84;
      t175 = t15 * t3;
      t178 = m__2 * t66;
      t181 = t3 * t25;
      t186 = J__1 * J__2;
      t188 = ell__1 * t3;
      t189 = m__1 * t188;
      t192 = lambda__2 * t80;
      t193 = t16 * t6;
      t196 = t3 * m__2 * t84;
      t199 = lambda__2 * t97;
      t203 = t3 * t22;
      t205 = t149 * t92;
      t207 = t97 * J__1;
      t210 = m__1 * m__2;
      t211 = t210 * t46 * ell__1;
      t214 = t80 * J__1;
      t220 = t15 * t110;
      t221 = t210 * t47;
      t224 = -2 * t164 * t16 * t22 * lambda__1 + 2 * t164 * t16 * t15 * lambda__1 + 16 * t35 * t6 * lambda__2 * J__2 - t178 * t17 * t175 * t2 - 4 * t181 * t22 * t69 + t178 * t17 * t4 + 16 * t189 * t2 * t186 - 4 * t196 * t193 * t192 - 4 * t196 * t193 * t199 + t205 * t203 * t89 - 4 * t211 * t4 * t207 - 4 * t211 * t4 * t214 + t205 * t203 * t98 - 2 * t221 * t220;
      t225 = m__1 * t54;
      t228 = m__1 * t61;
      t237 = t15 * t81;
      t240 = t22 * t110;
      t243 = t22 * t81;
      t264 = 4 * t196 * t16 * t6 * lambda__2 - 4 * t19 * t17 * t175 * t69 - t205 * t3 * t22 * t2 + t205 * t175 * t89 + t205 * t175 * t98 - t205 * t3 * t89 - t205 * t3 * t98 + 4 * t211 * t3 * t28 + 8 * t225 * t115 - 8 * t228 * t115 + 4 * t181 * t69 - 2 * t221 * t237 + 2 * t221 * t240 + 2 * t221 * t243;
      out_14_3 = t224 + t264;
      t265 = lambda__1 * t79;
      out_7_6 = -2 * ell__2 * t96 * lambda__2 - 2 * t96 * ell__2 * lambda__3 - 2 * ell__2 * t265;
      t272 = t80 * t96;
      t273 = omega__2 ^ 2;
      t274 = t46 * ell__2;
      t276 = t48 * t274 * t273;
      t278 = t97 * t96;
      t279 = t273 * t278;
      t280 = t48 * t274;
      t282 = t273 * t96;
      t284 = t96 * J__2;
      t285 = ell__2 * t273;
      t286 = m__2 * t285;
      t289 = lambda__3 * t80;
      t290 = m__2 * t46;
      t293 = lambda__3 * t97;
      t301 = t46 * t79;
      t302 = m__2 * t301;
      out_8_6 = -4 * t302 * lambda__1 * t96 + 2 * t290 * t192 - 2 * t290 * t199 + t276 * t272 + t280 * t279 - t280 * t282 - 4 * t286 * t284 + 2 * t290 * t289 - 2 * t290 * t293;
      t305 = t273 * t97;
      t306 = m__2 * t274;
      t309 = t80 * t79;
      t310 = t273 * t309;
      t312 = t273 * t79;
      t314 = t79 * J__2;
      t321 = t79 * lambda__3;
      t322 = t96 * t46;
      t325 = lambda__2 * t79;
      out_9_6 = t79 * t306 * t305 + 2 * t46 * t110 - 4 * t285 * t314 + t306 * t310 - t306 * t312 - 4 * t322 * t321 - 4 * t322 * t325 - 2 * t46 * t81;
      t328 = t101 * t97;
      t330 = m__2 * t46 * lambda__3;
      t337 = t19 * t274;
      t338 = t48 * t337;
      t345 = t96 * t101;
      t352 = m__2 * t46 * lambda__2;
      t355 = t80 * t101;
      t366 = t15 * t273;
      t368 = ell__2 * t16;
      t369 = t149 * t368;
      t372 = t22 * t273;
      t374 = t274 * t16;
      t375 = t93 * t374;
      t384 = t96 * m__2 * t66;
      t390 = 4 * t276 * t278 * t101 + 2 * t178 * t16 * t192 - 2 * t178 * t16 * t199 + 2 * t178 * t16 * t289 - 2 * t178 * t16 * t293 + t338 * t16 * t279 - t338 * t16 * t282 + 4 * t384 * t54 * t265 + 4 * t384 * t61 * t265 - t375 * t366 * t272 - t375 * t372 * t272 + 4 * t369 * t366 * t284 + 4 * t369 * t372 * t284 - 4 * t276 * t345 - 8 * t330 * t328 - 8 * t352 * t328 + 8 * t330 * t355 + 8 * t352 * t355;
      t392 = t149 * t47;
      t412 = ell__2 * m__2;
      t420 = t79 * t96;
      t421 = t290 * t420;
      t445 = 4 * t280 * t273 * t80 * t345 - 16 * t421 * lambda__1 * t101 - 2 * t392 * t15 * t192 + 2 * t392 * t15 * t199 - t375 * t15 * t279 + t375 * t15 * t282 - 2 * t392 * t15 * t289 + 2 * t392 * t15 * t293 - 16 * t412 * t282 * t156 - 4 * t384 * t16 * t265 - 2 * t392 * t22 * t192 + 2 * t392 * t22 * t199 - t375 * t22 * t279 + t375 * t22 * t282 - 2 * t392 * t22 * t289 + 2 * t392 * t22 * t293 + t375 * t273 * t272 - 4 * t369 * t273 * t284;
      out_13_6 = t390 + t445;
      t446 = t79 * J__1;
      t448 = m__1 * t274;
      t449 = m__2 * t448;
      t452 = t273 * t314;
      t453 = t19 * t368;
      t457 = m__2 * t337;
      t471 = t19 * t47;
      t481 = t96 * t66;
      t485 = t96 * t84;
      t496 = m__1 * t46 * lambda__1;
      t501 = -8 * t449 * t273 * t309 * J__1 + 32 * t485 * t79 * lambda__3 * J__1 + 32 * m__1 * t285 * t79 * t186 - 2 * t457 * t16 * t310 + 2 * t457 * t16 * t312 + 8 * t481 * t16 * t321 + 8 * t481 * t16 * t325 + 8 * t449 * t273 * t446 + 32 * t485 * lambda__2 * t446 + 16 * t496 * t214 + 4 * t471 * t220 - 4 * t471 * t237 + 4 * t471 * t240 - 4 * t471 * t243 + 8 * t453 * t452 + 4 * t471 * t81;
      t506 = t79 * t97;
      t508 = t149 * t374;
      t526 = t19 * ell__2;
      t527 = t526 * t61;
      t530 = t526 * t54;
      t535 = t96 * t19 * t47;
      t548 = t79 * m__2;
      t556 = -2 * t548 * t337 * t16 * t305 - 8 * t548 * t448 * t273 * t207 + 2 * t508 * t15 * t310 - 2 * t508 * t15 * t312 - 8 * t535 * t15 * t321 - 8 * t535 * t15 * t325 + 2 * t508 * t22 * t310 - 2 * t508 * t22 * t312 - 8 * t535 * t22 * t321 - 8 * t535 * t22 * t325 + 2 * t508 * t366 * t506 + 2 * t508 * t372 * t506 - 4 * t471 * t110 - 16 * t496 * t207 - 8 * t527 * t452 - 8 * t530 * t452;
      out_14_6 = t501 + t556;
      out_15_6 = 4 * t302 * lambda__3 * t96 - 2 * t290 * t110 - t276 * t506 - t280 * t310 + t280 * t312 + 4 * t286 * t314 + 2 * t290 * t81 + 4 * t352 * t420;
      out_1_7 = -1;
      out_2_8 = 1;
      out_6_9 = 1;
      t571 = t6 * omega__1;
      out_10_9 = -2 * t571 * t1;
      t574 = t22 * omega__1;
      t577 = t175 * omega__1;
      t580 = t3 * omega__1;
      t583 = J__1 * omega__1;
      out_12_9 = -2 * t181 * t574 + 8 * t189 * t583 - 2 * t25 * t577 + 2 * t25 * t580;
      t586 = omega__1 * t97;
      t590 = omega__1 * t80;
      t595 = t103 * t188;
      t610 = omega__1 * J__2;
      out_13_9 = -8 * t149 * t17 * t3 * t22 * t610 - 8 * t595 * t586 * t101 - 8 * t595 * t590 * t101 + 8 * t595 * omega__1 * t101 + 32 * t157 * t580 * t156 - 2 * t67 * t17 * t577 + 2 * t67 * t17 * t580 + 2 * t94 * t175 * t586 + 2 * t94 * t175 * t590 - 8 * t71 * t175 * t610 + 2 * t94 * t203 * t586 + 2 * t94 * t203 * t590 - 2 * t94 * t3 * t574 - 2 * t94 * t3 * t586 - 2 * t94 * t3 * t590 + 8 * t71 * t3 * t610;
      out_14_9 = -2 * t178 * t17 * t23 * omega__1 - 8 * t19 * t17 * t23 * t610 + 8 * t19 * t17 * t6 * t610 - 2 * t205 * t15 * t571 + 2 * t178 * t17 * t571 + 32 * t30 * omega__1 * t186 - 8 * t20 * t6 * t610 + 2 * t205 * t23 * t586 + 2 * t205 * t23 * t590 - 2 * t205 * t6 * t586 + 2 * t205 * t90 * t586 - 2 * t205 * t6 * t590 + 2 * t205 * t90 * t590 - 8 * t211 * t571 * t207 - 8 * t211 * t571 * t214 + 8 * t211 * t6 * t583;
      out_3_10 = -1;
      out_4_11 = 1;
      out_5_12 = 1;
      t691 = t274 * omega__2;
      t692 = t48 * t691;
      t695 = omega__2 * t309;
      t698 = omega__2 * t79;
      t699 = t280 * t698;
      t701 = ell__2 * omega__2;
      t702 = m__2 * t701;
      out_8_12 = -2 * t280 * t695 + 8 * t702 * t314 - 2 * t692 * t506 + 2 * t699;
      t705 = omega__2 * t278;
      t711 = omega__2 * t96;
      out_9_12 = 2 * m__2 * t691 * t272 - 8 * t701 * t284 + 2 * t306 * t705 - 2 * t306 * t711;
      t716 = t22 * omega__2;
      t720 = t15 * omega__2;
      out_13_12 = -8 * t692 * t309 * t101 + 8 * t692 * t79 * t101 + 2 * t375 * t15 * t695 - 2 * t375 * t15 * t698 + 32 * t412 * t698 * t156 - 2 * t338 * t16 * t695 + 2 * t338 * t16 * t698 + 2 * t375 * t22 * t695 - 2 * t375 * t22 * t698 - 8 * t369 * t716 * t314 - 8 * t369 * t720 * t314 + 8 * t369 * omega__2 * t314 + 2 * t375 * t716 * t506 + 2 * t375 * t720 * t506 - 2 * t375 * omega__2 * t506 - 8 * t699 * t328;
      t775 = t96 * J__1;
      t779 = omega__2 * t284;
      out_14_12 = -16 * t449 * omega__2 * t278 * J__1 + 64 * m__1 * t701 * t96 * t186 - 16 * t210 * t691 * t80 * t775 + 4 * t508 * t15 * t705 - 4 * t508 * t15 * t711 - 4 * t457 * t16 * t705 + 4 * t457 * t16 * t711 + 4 * t508 * t22 * t705 - 4 * t508 * t22 * t711 + 4 * t508 * t716 * t272 + 4 * t508 * t720 * t272 - 4 * t508 * omega__2 * t272 + 16 * t449 * omega__2 * t775 + 16 * t453 * t779 - 16 * t527 * t779 - 16 * t530 * t779;
      out_15_12 = -2 * t692 * t272 - 2 * t280 * t705 + 2 * t280 * t711 + 8 * t702 * t284;
      out_7_13 = -2 * t96 * ell__2;
      t825 = t46 * t80;
      t826 = m__2 * t825;
      t828 = 2 * t290;
      t829 = 8 * J__2;
      out_8_13 = 2 * t826 - t828 - t829;
      out_9_13 = -2 * t46 * t420;
      out_11_13 = -2 * t29;
      out_12_13 = -4 * t228 - 2 * t225 + 2 * t34 + 8 * J__1;
      t837 = t22 * t80;
      t838 = t16 * t837;
      t841 = t15 * t80;
      t842 = t16 * t841;
      t847 = t48 * t84;
      t857 = t16 * J__2;
      t860 = t22 * J__2;
      t861 = t19 * t16;
      t864 = t15 * J__2;
      t872 = -2 * t847 * t16 * t15 * t97 - 2 * t48 * m__1 * t47 - 8 * t290 * t101 + 8 * t103 * t207 + 8 * t103 * t214 - 2 * t178 * t838 - 2 * t178 * t842 - 8 * t210 * t857 - 2 * t847 * t842 + 8 * t861 * t860 + 8 * t861 * t864 - 2 * t392;
      t876 = t46 * J__1;
      t886 = t16 * t80;
      t895 = t16 * t97;
      t900 = 8 * m__2 * t34 * t864 - 32 * m__2 * t186 + 8 * t826 * t101 + 2 * t178 * t54 + 2 * t178 * t61 + 2 * t178 * t886 - 8 * t19 * t857 - 8 * t48 * t876 + 2 * t847 * t54 + 2 * t847 * t886 + 2 * t847 * t895 - 32 * t156;
      out_13_13 = t872 + t900;
      t905 = t22 * t420;
      t908 = t15 * t420;
      t917 = t3 * t6;
      out_14_13 = -2 * t221 * t3 * t6 * t80 - 2 * t221 * t3 * t6 * t97 + 8 * t35 * t6 * J__2 + 16 * m__1 * t301 * t775 + 2 * t164 * t16 * t917 + 4 * t471 * t420 - 4 * t471 * t905 - 4 * t471 * t908;
      out_15_13 = 2 * t421;
      out_7_14 = 2 * ell__2 * t79;
      out_8_14 = out_15_13;
      out_9_14 = 2 * t825;
      out_10_14 = -2;
      out_11_14 = 2 * t188;
      out_12_14 = 2 * t34 * t917;
      t930 = t103 * t82;
      t934 = 2 * t392 * t905;
      t936 = 2 * t392 * t908;
      t942 = 2 * t178 * t16 * t420;
      t948 = 8 * t302 * t345;
      out_13_14 = 2 * t49 * t3 * t6 * m__1 + 8 * m__2 * t82 * t6 * t52 - 2 * t930 * t6 * t125 - 2 * t930 * t6 * t130 - t934 - t936 + t942 + t948;
      t958 = 4 * t471 * t837;
      t962 = 4 * t471 * t841;
      t966 = 4 * t66 * t886;
      t974 = 16 * t84 * t214;
      out_14_14 = -2 * t164 * t16 * t22 * t97 - 8 * m__1 * t857 - 8 * m__2 * t876 + 2 * t164 * t61 - 2 * t164 * t838 + 2 * t164 * t886 + 2 * t164 * t895 + 8 * t290 * t207 + 8 * t290 * t214 + 8 * t34 * t860 - 32 * t186 - 2 * t221 + t958 + t962 - t966 - t974;
      t987 = 2 * m__2 * t97 * t46;
      out_15_14 = -t987 - 4 * t826 + t828 + t829;
      out_7_15 = out_7_14;
      out_8_15 = out_8_14;
      out_9_15 = out_9_14;
      out_13_15 = -t934 - t936 + t942 + t948;
      out_14_15 = t958 + t962 - t966 - t974;
      out_15_15 = t987 - t828 - t829;

      % Store outputs
      out_JF_x = zeros(15, 15);
      out_JF_x(10, 3) = out_10_3;
      out_JF_x(11, 3) = out_11_3;
      out_JF_x(12, 3) = out_12_3;
      out_JF_x(13, 3) = out_13_3;
      out_JF_x(14, 3) = out_14_3;
      out_JF_x(7, 6) = out_7_6;
      out_JF_x(8, 6) = out_8_6;
      out_JF_x(9, 6) = out_9_6;
      out_JF_x(13, 6) = out_13_6;
      out_JF_x(14, 6) = out_14_6;
      out_JF_x(15, 6) = out_15_6;
      out_JF_x(1, 7) = out_1_7;
      out_JF_x(2, 8) = out_2_8;
      out_JF_x(6, 9) = out_6_9;
      out_JF_x(10, 9) = out_10_9;
      out_JF_x(12, 9) = out_12_9;
      out_JF_x(13, 9) = out_13_9;
      out_JF_x(14, 9) = out_14_9;
      out_JF_x(3, 10) = out_3_10;
      out_JF_x(4, 11) = out_4_11;
      out_JF_x(5, 12) = out_5_12;
      out_JF_x(8, 12) = out_8_12;
      out_JF_x(9, 12) = out_9_12;
      out_JF_x(13, 12) = out_13_12;
      out_JF_x(14, 12) = out_14_12;
      out_JF_x(15, 12) = out_15_12;
      out_JF_x(7, 13) = out_7_13;
      out_JF_x(8, 13) = out_8_13;
      out_JF_x(9, 13) = out_9_13;
      out_JF_x(11, 13) = out_11_13;
      out_JF_x(12, 13) = out_12_13;
      out_JF_x(13, 13) = out_13_13;
      out_JF_x(14, 13) = out_14_13;
      out_JF_x(15, 13) = out_15_13;
      out_JF_x(7, 14) = out_7_14;
      out_JF_x(8, 14) = out_8_14;
      out_JF_x(9, 14) = out_9_14;
      out_JF_x(10, 14) = out_10_14;
      out_JF_x(11, 14) = out_11_14;
      out_JF_x(12, 14) = out_12_14;
      out_JF_x(13, 14) = out_13_14;
      out_JF_x(14, 14) = out_14_14;
      out_JF_x(15, 14) = out_15_14;
      out_JF_x(7, 15) = out_7_15;
      out_JF_x(8, 15) = out_8_15;
      out_JF_x(9, 15) = out_9_15;
      out_JF_x(13, 15) = out_13_15;
      out_JF_x(14, 15) = out_14_15;
      out_JF_x(15, 15) = out_15_15;
    end % JF_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_x_dot = JF_x_dot( this, in_1, in_2, in_3, t )
      % Evaluate the Jacobian of F with respect to x_dot.

      % Extract properties
      m__1 = this.m_m__1;
      m__2 = this.m_m__2;
      J__1 = this.m_J__1;
      J__2 = this.m_J__2;
      g = this.m_g;
      ell__1 = this.m_ell__1;
      ell__2 = this.m_ell__2;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      theta__1 = in_1(3);
      x__2 = in_1(4);
      y__2 = in_1(5);
      theta__2 = in_1(6);
      u__1 = in_1(7);
      v__1 = in_1(8);
      omega__1 = in_1(9);
      u__2 = in_1(10);
      v__2 = in_1(11);
      omega__2 = in_1(12);
      lambda__1 = in_1(13);
      lambda__2 = in_1(14);
      lambda__3 = in_1(15);
      x__1_dot = in_2(1);
      y__1_dot = in_2(2);
      theta__1_dot = in_2(3);
      x__2_dot = in_2(4);
      y__2_dot = in_2(5);
      theta__2_dot = in_2(6);
      u__1_dot = in_2(7);
      v__1_dot = in_2(8);
      omega__1_dot = in_2(9);
      u__2_dot = in_2(10);
      v__2_dot = in_2(11);
      omega__2_dot = in_2(12);
      lambda__1_dot = in_2(13);
      lambda__2_dot = in_2(14);
      lambda__3_dot = in_2(15);

      % Evaluate function
      out_1_1 = 1;
      out_2_2 = -1;
      out_6_3 = -1;
      out_3_4 = 1;
      out_4_5 = -1;
      out_5_6 = -1;
      t1 = ell__1 ^ 2;
      t2 = cos(theta__1);
      t3 = t2 ^ 2;
      t6 = sin(theta__1);
      t7 = t6 ^ 2;
      t12 = -m__1 * t3 * t1 - m__1 * t7 * t1 + m__1 * t1 + 4 * J__1;
      out_12_7 = -2 * m__1 * t12;
      out_10_8 = 2 * m__1;
      out_10_9 = m__1 * ell__1 * t2;
      out_11_9 = -t12;
      t16 = cos(theta__2);
      t17 = t16 ^ 2;
      t18 = ell__2 ^ 2;
      t21 = sin(theta__2);
      t22 = t21 ^ 2;
      t27 = -m__2 * t18 * t17 - m__2 * t22 * t18 + m__2 * t18 + 4 * J__2;
      out_8_10 = -2 * m__2 * t27;
      out_9_11 = t27;
      out_7_12 = -out_9_11;

      % Store outputs
      out_JF_x_dot = zeros(15, 15);
      out_JF_x_dot(1, 1) = out_1_1;
      out_JF_x_dot(2, 2) = out_2_2;
      out_JF_x_dot(6, 3) = out_6_3;
      out_JF_x_dot(3, 4) = out_3_4;
      out_JF_x_dot(4, 5) = out_4_5;
      out_JF_x_dot(5, 6) = out_5_6;
      out_JF_x_dot(12, 7) = out_12_7;
      out_JF_x_dot(10, 8) = out_10_8;
      out_JF_x_dot(10, 9) = out_10_9;
      out_JF_x_dot(11, 9) = out_11_9;
      out_JF_x_dot(8, 10) = out_8_10;
      out_JF_x_dot(9, 11) = out_9_11;
      out_JF_x_dot(7, 12) = out_7_12;
    end % JF_x_dot
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_v = JF_v( this, in_1, in_2, in_3, t )
      % Evaluate the Jacobian of F with respect to v.

      % Extract properties
      m__1 = this.m_m__1;
      m__2 = this.m_m__2;
      J__1 = this.m_J__1;
      J__2 = this.m_J__2;
      g = this.m_g;
      ell__1 = this.m_ell__1;
      ell__2 = this.m_ell__2;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      theta__1 = in_1(3);
      x__2 = in_1(4);
      y__2 = in_1(5);
      theta__2 = in_1(6);
      u__1 = in_1(7);
      v__1 = in_1(8);
      omega__1 = in_1(9);
      u__2 = in_1(10);
      v__2 = in_1(11);
      omega__2 = in_1(12);
      lambda__1 = in_1(13);
      lambda__2 = in_1(14);
      lambda__3 = in_1(15);
      x__1_dot = in_2(1);
      y__1_dot = in_2(2);
      theta__1_dot = in_2(3);
      x__2_dot = in_2(4);
      y__2_dot = in_2(5);
      theta__2_dot = in_2(6);
      u__1_dot = in_2(7);
      v__1_dot = in_2(8);
      omega__1_dot = in_2(9);
      u__2_dot = in_2(10);
      v__2_dot = in_2(11);
      omega__2_dot = in_2(12);
      lambda__1_dot = in_2(13);
      lambda__2_dot = in_2(14);
      lambda__3_dot = in_2(15);

      % Evaluate function
      % No body

      % Store outputs
      out_JF_v = zeros(15, 0);
    end % JF_v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_v = v( this, in_1, t )
      % Evaluate the the veils v.

      % Extract properties
      m__1 = this.m_m__1;
      m__2 = this.m_m__2;
      J__1 = this.m_J__1;
      J__2 = this.m_J__2;
      g = this.m_g;
      ell__1 = this.m_ell__1;
      ell__2 = this.m_ell__2;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      theta__1 = in_1(3);
      x__2 = in_1(4);
      y__2 = in_1(5);
      theta__2 = in_1(6);
      u__1 = in_1(7);
      v__1 = in_1(8);
      omega__1 = in_1(9);
      u__2 = in_1(10);
      v__2 = in_1(11);
      omega__2 = in_1(12);
      lambda__1 = in_1(13);
      lambda__2 = in_1(14);
      lambda__3 = in_1(15);

      % Evaluate function
      % No body

      % Store outputs
      out_v = zeros(0, 1);
    end % v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jv_x = Jv_x( this, in_1, in_2, t )
      % Evaluate the Jacobian of v with respect to x.

      % Extract properties
      m__1 = this.m_m__1;
      m__2 = this.m_m__2;
      J__1 = this.m_J__1;
      J__2 = this.m_J__2;
      g = this.m_g;
      ell__1 = this.m_ell__1;
      ell__2 = this.m_ell__2;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      theta__1 = in_1(3);
      x__2 = in_1(4);
      y__2 = in_1(5);
      theta__2 = in_1(6);
      u__1 = in_1(7);
      v__1 = in_1(8);
      omega__1 = in_1(9);
      u__2 = in_1(10);
      v__2 = in_1(11);
      omega__2 = in_1(12);
      lambda__1 = in_1(13);
      lambda__2 = in_1(14);
      lambda__3 = in_1(15);

      % Evaluate function
      % No body

      % Store outputs
      out_Jv_x = zeros(0, 15);
    end % Jv_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_h = h( this, in_1, in_2, t )
      % Calculate the residual of the invariants h.

      % Extract properties
      m__1 = this.m_m__1;
      m__2 = this.m_m__2;
      J__1 = this.m_J__1;
      J__2 = this.m_J__2;
      g = this.m_g;
      ell__1 = this.m_ell__1;
      ell__2 = this.m_ell__2;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      theta__1 = in_1(3);
      x__2 = in_1(4);
      y__2 = in_1(5);
      theta__2 = in_1(6);
      u__1 = in_1(7);
      v__1 = in_1(8);
      omega__1 = in_1(9);
      u__2 = in_1(10);
      v__2 = in_1(11);
      omega__2 = in_1(12);
      lambda__1 = in_1(13);
      lambda__2 = in_1(14);
      lambda__3 = in_1(15);

      % Evaluate function
      t1 = cos(theta__1);
      t2 = t1 * ell__1;
      out_1 = -t2 - x__1 + x__2;
      t3 = sin(theta__1);
      t4 = t3 * ell__1;
      out_2 = -t4 - y__1 + y__2;
      t5 = sin(theta__2);
      out_3 = -t5 * ell__2 - y__2;
      t7 = ell__1 * omega__1;
      out_4 = -t3 * t7 + u__1 - u__2;
      out_5 = t1 * t7 + v__1 - v__2;
      t10 = cos(theta__2);
      out_6 = ell__2 * t10 * omega__2 + v__2;
      t13 = t5 ^ 2;
      t15 = t3 * lambda__2;
      t17 = ell__1 ^ 2;
      t18 = t17 * t1;
      t19 = ell__2 ^ 2;
      t20 = m__2 ^ 2;
      t21 = t20 * t19;
      t22 = t21 * t18;
      t25 = t10 * t5;
      t26 = t3 ^ 2;
      t27 = t26 * lambda__2;
      t29 = t19 * t17;
      t30 = m__1 ^ 2;
      t31 = m__2 * t30;
      t32 = t31 * t29;
      t35 = t1 ^ 2;
      t40 = t10 ^ 2;
      t45 = lambda__3 * t5;
      t54 = omega__1 ^ 2;
      t55 = t54 * t13;
      t56 = t1 * t26;
      t58 = t17 * ell__1;
      t59 = t19 * t58;
      t60 = t20 * t30;
      t61 = t60 * t59;
      t63 = t54 * t40;
      t66 = m__1 * J__1;
      t68 = t21 * t2;
      t74 = t10 * J__2;
      t75 = omega__2 ^ 2;
      t76 = t35 * t75;
      t78 = ell__2 * t17;
      t79 = t31 * t78;
      t82 = t10 * t13;
      t83 = t26 * t75;
      t85 = t19 * ell__2;
      t86 = t85 * t17;
      t87 = t60 * t86;
      t94 = J__2 * lambda__1;
      t100 = J__1 * lambda__1;
      t103 = -2 * t22 * t15 * t13 * m__1 - 2 * t22 * t15 * t40 * m__1 - 2 * t32 * t26 * t10 * t45 - 2 * t32 * t35 * t10 * t45 - 2 * t32 * t35 * lambda__2 * t25 - 8 * t30 * t17 * t94 - 2 * t32 * t27 * t25 + t61 * t56 * t55 - 4 * t68 * t55 * t66 + t61 * t56 * t63 - 4 * t68 * t63 * t66 - 4 * t79 * t76 * t74 - 4 * t79 * t83 * t74 + t87 * t76 * t82 + t87 * t83 * t82 - 8 * t21 * t100 - 32 * t94 * t66;
      t104 = J__1 * J__2;
      t108 = t5 * t66;
      t110 = m__2 * t19;
      t117 = t75 * t10;
      t118 = t20 * t85;
      t125 = J__2 * t66;
      t134 = t40 * t10;
      t135 = t75 * t134;
      t140 = t40 * lambda__1;
      t144 = t35 * t140;
      t147 = lambda__1 * t13;
      t150 = t20 * m__1 * t29;
      t166 = -32 * lambda__1 * m__2 * t104 + 8 * t110 * t10 * lambda__3 * t108 - t87 * t75 * t82 - 4 * t118 * t117 * t13 * t66 + 4 * t79 * t75 * t74 + 16 * ell__2 * m__2 * t117 * t125 - t87 * t26 * t117 - t87 * t35 * t117 + t87 * t26 * t135 + t87 * t35 * t135 - 2 * t32 * t26 * t140 - 2 * t32 * t144 - 2 * t150 * t35 * t147 - 2 * t150 * t144 + 2 * t32 * lambda__2 * t25 + 8 * t110 * lambda__2 * t10 * t108 + 2 * t22 * t3 * lambda__2 * m__1;
      t170 = t1 * t3;
      t182 = t35 * t1;
      t190 = t54 * J__2;
      t199 = t1 * t54;
      t205 = t19 * t40;
      t210 = m__1 * t19;
      t211 = t20 * t210;
      t214 = t17 * t140;
      t219 = t30 * t19;
      t220 = t20 * t219;
      t224 = m__2 * t30 * t58;
      t232 = 8 * m__2 * t17 * t170 * m__1 * J__2 * lambda__2 + 2 * t32 * t10 * t45 - t61 * t1 * t55 - t61 * t1 * t63 + t61 * t182 * t55 + t61 * t182 * t63 - t61 * t1 * t26 * t54 - 4 * t31 * t58 * t1 * t26 * t190 + 4 * t68 * t54 * t66 + 16 * ell__1 * m__2 * t199 * t125 + 8 * m__2 * t205 * lambda__1 * t66 + 2 * t211 * t17 * t147 + 2 * t211 * t214 - t220 * t58 * t182 * t54 - 4 * t224 * t182 * t190 + t220 * t58 * t199 + 4 * t224 * t1 * t190;
      t234 = t30 * t85;
      t235 = t20 * t234;
      t238 = t85 * t75;
      t239 = t20 * t238;
      t249 = m__2 * t219;
      t253 = t17 * t35 * lambda__1;
      t259 = m__1 * t17;
      t260 = m__2 * t259;
      t265 = t17 * lambda__1;
      t268 = t19 * lambda__1;
      t276 = t17 * t26;
      t280 = t17 * t35;
      t284 = t13 * J__1;
      t291 = 2 * t249 * t17 * t26 * lambda__1 - 8 * m__2 * t268 * t66 + 4 * t239 * t10 * t66 + 8 * t20 * t205 * t100 + t235 * t17 * t117 - 4 * t239 * t134 * t66 - t235 * t17 * t135 + 8 * t20 * t268 * t284 + 8 * t260 * t35 * t94 + 8 * t30 * t276 * t94 + 8 * t30 * t280 * t94 + 2 * t211 * t253 - 2 * t211 * t265 + 2 * t249 * t214 + 2 * t249 * t253 - 2 * t249 * t265 - 8 * t260 * t94;
      out_7 = t103 + t166 + t232 + t291;
      t294 = m__1 * m__2;
      t295 = t294 * t29;
      t301 = t35 * t3;
      t303 = t31 * t59;
      t307 = t3 * t54;
      t310 = t294 * t19 * ell__1;
      t313 = t40 * J__1;
      t317 = t40 * t5;
      t319 = t31 * t86;
      t328 = t30 * g;
      t331 = m__1 * g;
      t337 = J__2 * lambda__2;
      t340 = t13 * t5;
      t341 = t75 * t340;
      t348 = t75 * t5;
      t358 = t5 * J__1;
      t363 = -2 * t295 * t170 * t147 - 2 * t295 * t170 * t140 + t303 * t301 * t55 + t303 * t301 * t63 - 4 * t310 * t307 * t284 - 4 * t310 * t307 * t313 + 2 * t319 * t83 * t317 + 2 * t319 * t76 * t317 - 32 * lambda__2 * t104 + 8 * t328 * t17 * J__2 + 32 * t331 * t104 - 8 * t110 * J__1 * lambda__2 - 8 * t259 * t337 + 2 * t319 * t26 * t341 + 2 * t319 * t35 * t341 - 2 * t319 * t26 * t348 - 2 * t319 * t35 * t348 - 2 * t319 * t75 * t317 - 8 * t294 * t238 * t40 * t358;
      t364 = t5 * J__2;
      t365 = t75 * t364;
      t366 = t30 * ell__2;
      t373 = lambda__1 * t5;
      t374 = t10 * t373;
      t385 = lambda__2 * t40;
      t386 = t26 * t385;
      t389 = lambda__2 * t13;
      t395 = g * t19;
      t396 = t31 * t395;
      t411 = t26 * t3;
      t426 = t30 * t29;
      t430 = t19 * t10;
      t434 = 4 * t310 * t3 * t54 * J__1 + 16 * m__1 * t430 * lambda__1 * t358 + 2 * t295 * t1 * t3 * lambda__1 + 2 * t396 * t17 * t26 * t13 + 2 * t396 * t17 * t35 * t13 + 2 * t396 * t17 * t26 * t40 + 2 * t396 * t17 * t35 * t40 - 4 * t219 * t276 * t374 - 4 * t219 * t280 * t374 - 2 * t295 * t26 * t389 - 8 * t366 * t276 * t365 - 8 * t366 * t280 * t365 - t303 * t3 * t55 - t303 * t3 * t63 - t303 * t35 * t307 + t303 * t411 * t55 + t303 * t411 * t63 - 2 * t295 * t386 + 4 * t426 * t374;
      t441 = m__2 * t210;
      t455 = t40 * lambda__3;
      t464 = m__2 * t328;
      t472 = m__2 * t331;
      t493 = m__2 * t234;
      t498 = m__2 * m__1 * t85;
      t504 = 8 * m__1 * t18 * t3 * t94 + 2 * t441 * t17 * t389 + 2 * t441 * t17 * t385 + 4 * t426 * t386 + 4 * t426 * t35 * t385 + 2 * t441 * t17 * t27 + 4 * t426 * t26 * t455 + 4 * t426 * t35 * t455 - 2 * t464 * t19 * t17 * t13 - 2 * t464 * t19 * t17 * t40 - 8 * t472 * t19 * t284 - 8 * t472 * t19 * t313 - t249 * t58 * t411 * t54 - 4 * t30 * t58 * t35 * t3 * t190 + t249 * t58 * t307 + 16 * m__1 * t4 * t54 * t104 + 2 * t493 * t17 * t348 + 8 * t498 * t75 * t358 + 8 * t30 * t78 * t365;
      t506 = ell__2 * t75;
      t544 = t19 * lambda__2;
      t545 = m__2 * t544;
      t561 = t30 * g * t17;
      t567 = 32 * m__1 * t506 * t5 * t104 - 2 * t493 * t17 * t341 - 8 * t498 * t75 * t340 * J__1 - 2 * t464 * t19 * t276 - 2 * t464 * t19 * t280 + 2 * t464 * t29 + 8 * t472 * t19 * J__1 - 4 * t30 * t58 * t411 * t190 + 4 * t30 * t58 * t3 * t190 - 2 * t441 * t17 * lambda__2 + 8 * m__1 * t276 * t337 - 4 * t426 * t385 + 8 * t545 * t284 - 16 * m__1 * t544 * t313 + 8 * t545 * t313 - 4 * t426 * t455 - 16 * m__1 * t205 * J__1 * lambda__3 - 8 * t561 * t26 * J__2 - 8 * t561 * t35 * J__2;
      out_8 = t363 + t434 + t504 + t567;
      t573 = t20 * g;
      out_9 = 8 * J__2 * g * m__2 - 2 * m__2 * t19 * lambda__3 + 4 * m__2 * t506 * t364 + 2 * m__2 * t430 * t373 + 2 * t110 * lambda__3 * t13 - 2 * t573 * t19 * t13 - 8 * J__2 * lambda__3 - 4 * t110 * t385 - 2 * t110 * t389 - t118 * t341 + t118 * t348 + 2 * t20 * t395 - 2 * t573 * t205 - t239 * t317 + 8 * t337 + 2 * t545;

      % Store outputs
      out_h = zeros(9, 1);
      out_h(1) = out_1;
      out_h(2) = out_2;
      out_h(3) = out_3;
      out_h(4) = out_4;
      out_h(5) = out_5;
      out_h(6) = out_6;
      out_h(7) = out_7;
      out_h(8) = out_8;
      out_h(9) = out_9;
    end % h
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jh_x = Jh_x( this, in_1, in_2, t )
      % Calculate the Jacobian of h with respect to x.

      % Extract properties
      m__1 = this.m_m__1;
      m__2 = this.m_m__2;
      J__1 = this.m_J__1;
      J__2 = this.m_J__2;
      g = this.m_g;
      ell__1 = this.m_ell__1;
      ell__2 = this.m_ell__2;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      theta__1 = in_1(3);
      x__2 = in_1(4);
      y__2 = in_1(5);
      theta__2 = in_1(6);
      u__1 = in_1(7);
      v__1 = in_1(8);
      omega__1 = in_1(9);
      u__2 = in_1(10);
      v__2 = in_1(11);
      omega__2 = in_1(12);
      lambda__1 = in_1(13);
      lambda__2 = in_1(14);
      lambda__3 = in_1(15);

      % Evaluate function
      out_1_1 = -1;
      out_2_2 = -1;
      t1 = sin(theta__1);
      out_1_3 = t1 * ell__1;
      t2 = cos(theta__1);
      t3 = t2 * ell__1;
      out_2_3 = -t3;
      t4 = ell__1 * omega__1;
      out_4_3 = -t2 * t4;
      out_5_3 = -t1 * t4;
      t7 = J__2 * lambda__1;
      t9 = ell__1 ^ 2;
      t10 = m__1 * t9;
      t17 = ell__2 ^ 2;
      t18 = m__1 * t17;
      t19 = m__2 ^ 2;
      t21 = t1 * t19 * t18;
      t24 = sin(theta__2);
      t25 = t24 ^ 2;
      t26 = t25 * m__1;
      t27 = t26 * lambda__2;
      t28 = t1 ^ 2;
      t29 = t9 * t28;
      t30 = t19 * t17;
      t31 = t30 * t29;
      t34 = cos(theta__2);
      t35 = t34 ^ 2;
      t36 = t35 * m__1;
      t37 = lambda__2 * t36;
      t38 = t2 ^ 2;
      t39 = t9 * t38;
      t40 = t30 * t39;
      t47 = omega__1 ^ 2;
      t48 = t47 * t25;
      t50 = t9 * ell__1;
      t51 = t17 * t50;
      t52 = m__1 ^ 2;
      t53 = t19 * t52;
      t54 = t53 * t51;
      t56 = t47 * t35;
      t59 = t28 * t1;
      t64 = t1 * t47;
      t67 = t47 * J__2;
      t68 = t1 * t67;
      t69 = t50 * t38;
      t70 = m__2 * t52;
      t74 = m__1 * J__1;
      t76 = t30 * out_1_3;
      t79 = J__2 * t74;
      t80 = ell__1 * m__2;
      t84 = -16 * t1 * m__2 * t10 * t2 * t7 - 4 * t21 * t9 * t2 * lambda__1 + t54 * t1 * t48 + t54 * t1 * t56 + t54 * t38 * t64 - 4 * t76 * t47 * t74 - t54 * t59 * t48 - t54 * t59 * t56 - 16 * t80 * t64 * t79 + 4 * t70 * t69 * t68 + 2 * t31 * t27 - 2 * t40 * t27 + 2 * t31 * t37 - 2 * t40 * t37;
      t85 = lambda__2 * m__1;
      t87 = t17 * t9;
      t88 = t19 * t87;
      t91 = J__2 * m__1;
      t92 = lambda__2 * t91;
      t103 = t52 * t17;
      t104 = t19 * t103;
      t107 = m__2 * t52 * t50;
      t116 = lambda__1 * t25;
      t117 = t9 * t2;
      t121 = t35 * lambda__1;
      t125 = t38 * t1;
      t136 = t104 * t50 * t59 * t47 - 8 * m__2 * t29 * t92 + 8 * m__2 * t39 * t92 - t104 * t50 * t64 + 4 * t107 * t59 * t67 + 4 * t21 * t117 * t116 + 4 * t21 * t117 * t121 - t54 * t125 * t48 - t54 * t125 * t56 - 2 * t88 * t28 * t85 + 2 * t88 * t38 * t85 + 4 * t76 * t48 * t74 + 4 * t76 * t56 * t74 - 4 * t107 * t68;
      out_7_3 = t84 + t136;
      t143 = t38 * t2;
      t148 = t50 * t2;
      t149 = t52 * t148;
      t152 = t38 * t116;
      t153 = m__1 * m__2;
      t154 = t153 * t87;
      t157 = t38 * t121;
      t160 = t28 * t116;
      t163 = t28 * t121;
      t169 = t2 * m__2 * t18;
      t173 = t70 * t51;
      t184 = t153 * t17 * ell__1;
      t187 = 4 * t184 * t2 * t47 * J__1 + 4 * t169 * t9 * t1 * lambda__2 - 4 * t52 * t50 * t143 * t67 - 8 * m__1 * t29 * t7 + 8 * m__1 * t39 * t7 + t173 * t143 * t48 + t173 * t143 * t56 - t173 * t2 * t48 - t173 * t2 * t56 + 4 * t149 * t67 - 2 * t154 * t152 - 2 * t154 * t157 + 2 * t154 * t160 + 2 * t154 * t163;
      t193 = m__2 * t18;
      t202 = t2 * t10;
      t207 = m__2 * t103;
      t212 = t2 * t47;
      t215 = J__1 * J__2;
      t220 = lambda__2 * t35;
      t221 = t9 * t1;
      t225 = lambda__2 * t25;
      t229 = t2 * t28;
      t232 = t25 * J__1;
      t236 = t35 * J__1;
      t242 = -t173 * t2 * t28 * t47 - 2 * t193 * t9 * t28 * lambda__1 + 2 * t193 * t9 * t38 * lambda__1 + 16 * t202 * t1 * lambda__2 * J__2 - t207 * t50 * t143 * t47 - 4 * t149 * t28 * t67 + t207 * t50 * t212 + 16 * m__1 * t3 * t47 * t215 - 4 * t169 * t221 * t220 - 4 * t169 * t221 * t225 + t173 * t229 * t56 - 4 * t184 * t212 * t232 - 4 * t184 * t212 * t236 + t173 * t229 * t48;
      out_8_3 = t187 + t242;
      out_1_4 = 1;
      out_2_5 = 1;
      out_3_5 = -1;
      t243 = ell__2 * t34;
      out_3_6 = -t243;
      t244 = t24 * omega__2;
      out_6_6 = -ell__2 * t244;
      t247 = t34 * t24;
      t248 = m__2 * t17;
      t249 = t248 * t247;
      t253 = t70 * t87;
      t265 = lambda__3 * t35;
      t272 = lambda__3 * t25;
      t279 = omega__2 ^ 2;
      t280 = t279 * t24;
      t282 = ell__2 * t17;
      t283 = t282 * t9;
      t284 = t53 * t283;
      t286 = t25 * t24;
      t287 = t279 * t286;
      t294 = t24 * t74;
      t296 = t19 * t282;
      t300 = t35 * t24;
      t303 = t24 * J__2;
      t305 = ell__2 * t9;
      t306 = t70 * t305;
      t309 = ell__2 * m__2;
      t313 = t34 * lambda__1;
      t316 = t24 * m__2 * t103;
      t319 = 4 * t296 * t279 * t35 * t294 - 2 * t253 * t28 * t220 - 2 * t253 * t38 * t220 + 2 * t253 * t28 * t225 + 2 * t253 * t38 * t225 - 16 * t249 * lambda__1 * t74 - 2 * t253 * t28 * t265 - 2 * t253 * t38 * t265 + 2 * t253 * t28 * t272 + 2 * t253 * t38 * t272 + t284 * t279 * t300 - 4 * t306 * t279 * t303 + t284 * t28 * t280 - t284 * t28 * t287 + t284 * t38 * t280 - 16 * t309 * t280 * t79 - t284 * t38 * t287 - 4 * t316 * t9 * t313;
      t320 = t25 * t74;
      t322 = m__2 * t17 * lambda__3;
      t329 = t52 * t282;
      t330 = t19 * t329;
      t334 = t19 * t282 * t279;
      t345 = m__2 * t17 * lambda__2;
      t348 = t35 * t74;
      t359 = t38 * t279;
      t363 = t28 * t279;
      t377 = 2 * t207 * t9 * t220 - 2 * t207 * t9 * t225 + 2 * t207 * t9 * t265 - 2 * t207 * t9 * t272 - t330 * t9 * t280 - t284 * t359 * t300 - t284 * t363 * t300 + 4 * t334 * t286 * t74 + t330 * t9 * t287 + 4 * t316 * t29 * t313 + 4 * t306 * t359 * t303 + 4 * t306 * t363 * t303 + 4 * t316 * t39 * t313 - 4 * t334 * t294 - 8 * t322 * t320 - 8 * t345 * t320 + 8 * t322 * t348 + 8 * t345 * t348;
      out_7_6 = t319 + t377;
      t379 = m__1 * t17 * lambda__1;
      t382 = t52 * t87;
      t389 = lambda__2 * t34;
      t392 = t24 * t52 * t87;
      t398 = t34 * lambda__3;
      t407 = t34 * m__2;
      t412 = m__1 * t282;
      t416 = t35 * t34;
      t417 = t279 * t416;
      t419 = t70 * t283;
      t425 = t279 * t34;
      t432 = t34 * J__2;
      t433 = t279 * t432;
      t434 = t52 * ell__2;
      t435 = t434 * t29;
      t438 = t434 * t39;
      t441 = -2 * t407 * t329 * t9 * t279 * t25 - 8 * t407 * t412 * t279 * t232 - 8 * t392 * t28 * t389 - 8 * t392 * t28 * t398 + 2 * t419 * t28 * t417 - 2 * t419 * t28 * t425 - 8 * t392 * t38 * t389 - 8 * t392 * t38 * t398 + 2 * t419 * t38 * t417 - 2 * t419 * t38 * t425 - 4 * t382 * t116 + 4 * t382 * t121 - 16 * t379 * t232 + 16 * t379 * t236 - 8 * t435 * t433 - 8 * t438 * t433;
      t444 = t24 * t18;
      t448 = t24 * t103;
      t451 = t34 * J__1;
      t453 = m__2 * t412;
      t456 = t52 * t305;
      t460 = m__2 * t329;
      t471 = ell__2 * t279;
      t489 = t34 * t25;
      t496 = -8 * t453 * t279 * t416 * J__1 + 32 * t444 * t34 * lambda__3 * J__1 + 32 * m__1 * t471 * t34 * t215 + 8 * t453 * t279 * t451 + 2 * t419 * t359 * t489 + 2 * t419 * t363 * t489 + 8 * t448 * t9 * t389 + 8 * t448 * t9 * t398 - 2 * t460 * t9 * t417 + 2 * t460 * t9 * t425 + 32 * t444 * lambda__2 * t451 + 4 * t382 * t152 - 4 * t382 * t157 + 4 * t382 * t160 - 4 * t382 * t163 + 8 * t456 * t433;
      out_8_6 = t441 + t496;
      t504 = t17 * t34;
      t505 = m__2 * t504;
      out_9_6 = 4 * m__2 * t471 * t432 + 4 * t505 * lambda__3 * t24 - 2 * t248 * t116 + 2 * t248 * t121 + 4 * t345 * t247 - t296 * t417 + t296 * t425 - t334 * t489;
      out_4_7 = 1;
      out_5_8 = 1;
      out_4_9 = -out_1_3;
      out_5_9 = t3;
      t514 = omega__1 * t25;
      t518 = omega__1 * t35;
      t523 = t30 * out_5_9;
      t539 = omega__1 * J__2;
      t547 = t2 * omega__1;
      out_7_9 = -2 * t104 * t50 * t143 * omega__1 - 8 * t70 * t148 * t28 * t539 - 2 * t54 * t2 * t28 * omega__1 + 2 * t104 * t50 * t547 - 8 * t107 * t143 * t539 + 8 * t107 * t2 * t539 + 2 * t54 * t143 * t514 + 2 * t54 * t143 * t518 - 2 * t54 * t2 * t514 - 2 * t54 * t2 * t518 + 2 * t54 * t229 * t514 + 2 * t54 * t229 * t518 - 8 * t523 * t514 * t74 - 8 * t523 * t518 * t74 + 8 * t523 * omega__1 * t74 + 32 * t80 * t547 * t79;
      t578 = t1 * omega__1;
      out_8_9 = 32 * m__1 * t1 * ell__1 * omega__1 * t215 + 8 * t184 * t1 * omega__1 * J__1 + 8 * t52 * t50 * t1 * t539 - 8 * t52 * t69 * t1 * t539 - 2 * t207 * t50 * t59 * omega__1 - 8 * t52 * t50 * t59 * t539 - 2 * t173 * t1 * t514 - 2 * t173 * t1 * t518 + 2 * t173 * t125 * t514 + 2 * t173 * t125 * t518 - 2 * t173 * t38 * t578 + 2 * t173 * t59 * t514 + 2 * t173 * t59 * t518 - 8 * t184 * t578 * t232 - 8 * t184 * t578 * t236 + 2 * t207 * t50 * t578;
      out_4_10 = -1;
      out_5_11 = -1;
      out_6_11 = 1;
      out_6_12 = t243;
      t626 = t28 * omega__2;
      t630 = t38 * omega__2;
      t643 = omega__2 * t34;
      t659 = omega__2 * t416;
      t670 = t282 * omega__2;
      t671 = t19 * t670;
      out_7_12 = -2 * t284 * t28 * t643 + 2 * t284 * t28 * t659 - 2 * t284 * t38 * t643 + 2 * t284 * t38 * t659 + 2 * t284 * t626 * t489 + 2 * t284 * t630 * t489 - 2 * t284 * omega__2 * t489 - 8 * t296 * t643 * t320 - 8 * t306 * t626 * t432 - 8 * t306 * t630 * t432 + 8 * t306 * omega__2 * t432 + 32 * t309 * t643 * t79 + 2 * t330 * t9 * t643 - 2 * t330 * t9 * t659 + 8 * t671 * t34 * t74 - 8 * t671 * t416 * t74;
      t680 = omega__2 * t286;
      t691 = t24 * J__1;
      t695 = omega__2 * t303;
      t699 = ell__2 * omega__2;
      out_8_12 = -16 * t453 * omega__2 * t286 * J__1 + 64 * m__1 * t699 * t24 * t215 - 16 * t153 * t670 * t35 * t691 - 4 * t419 * t28 * t244 - 4 * t419 * t38 * t244 + 4 * t460 * t9 * t244 + 4 * t419 * t28 * t680 + 4 * t419 * t626 * t300 + 4 * t419 * t630 * t300 - 4 * t419 * omega__2 * t300 + 4 * t419 * t38 * t680 + 16 * t453 * omega__2 * t691 - 4 * t460 * t9 * t680 - 16 * t435 * t695 - 16 * t438 * t695 + 16 * t456 * t695;
      out_9_12 = 8 * m__2 * t699 * t303 + 2 * t296 * t244 - 2 * t296 * t680 - 2 * t671 * t300;
      t741 = t28 * t35;
      t742 = t9 * t741;
      t745 = t38 * t35;
      t746 = t9 * t745;
      t751 = t19 * t18;
      t761 = t9 * J__2;
      t764 = t28 * J__2;
      t765 = t52 * t9;
      t768 = t38 * J__2;
      t776 = -2 * t751 * t9 * t38 * t25 - 2 * t19 * m__1 * t87 - 8 * t153 * t761 - 2 * t207 * t742 - 2 * t207 * t746 + 8 * t30 * t232 + 8 * t30 * t236 - 8 * t248 * t74 - 2 * t751 * t746 + 8 * t765 * t764 + 8 * t765 * t768 - 2 * t253;
      t780 = t17 * J__1;
      t790 = t9 * t35;
      t798 = m__2 * t17 * t35;
      t801 = t9 * t25;
      t806 = 8 * m__2 * t10 * t768 - 32 * m__2 * t215 - 8 * t19 * t780 + 2 * t207 * t29 + 2 * t207 * t39 + 2 * t207 * t790 + 2 * t751 * t39 - 8 * t52 * t761 + 8 * t798 * t74 + 2 * t751 * t790 + 2 * t751 * t801 - 32 * t79;
      out_7_13 = t776 + t806;
      t811 = t28 * t247;
      t814 = t38 * t247;
      out_8_13 = -2 * t154 * t2 * t1 * t25 - 2 * t154 * t2 * t1 * t35 + 2 * t193 * t9 * t2 * t1 + 8 * t202 * t1 * J__2 + 16 * m__1 * t504 * t691 + 4 * t382 * t247 - 4 * t382 * t811 - 4 * t382 * t814;
      out_9_13 = 2 * t249;
      t834 = t30 * t117;
      t838 = 2 * t253 * t811;
      t840 = 2 * t253 * t814;
      t846 = 2 * t207 * t9 * t247;
      t852 = 8 * t505 * t294;
      out_7_14 = 2 * t88 * t2 * t1 * m__1 + 8 * m__2 * t117 * t1 * t91 - 2 * t834 * t1 * t26 - 2 * t834 * t1 * t36 - t838 - t840 + t846 + t852;
      t862 = 4 * t382 * t741;
      t866 = 4 * t382 * t745;
      t870 = 4 * t103 * t790;
      t878 = 16 * t18 * t236;
      out_8_14 = -2 * t193 * t9 * t28 * t25 - 8 * m__1 * t761 - 8 * m__2 * t780 + 8 * t10 * t764 + 2 * t193 * t29 - 2 * t193 * t742 + 2 * t193 * t790 + 2 * t193 * t801 + 8 * t248 * t232 + 8 * t248 * t236 - 2 * t154 - 32 * t215 + t862 + t866 - t870 - t878;
      t891 = 2 * m__2 * t25 * t17;
      t893 = 2 * t248;
      t894 = 8 * J__2;
      out_9_14 = -t891 - 4 * t798 + t893 + t894;
      out_7_15 = -t838 - t840 + t846 + t852;
      out_8_15 = t862 + t866 - t870 - t878;
      out_9_15 = t891 - t893 - t894;

      % Store outputs
      out_Jh_x = zeros(9, 15);
      out_Jh_x(1, 1) = out_1_1;
      out_Jh_x(2, 2) = out_2_2;
      out_Jh_x(1, 3) = out_1_3;
      out_Jh_x(2, 3) = out_2_3;
      out_Jh_x(4, 3) = out_4_3;
      out_Jh_x(5, 3) = out_5_3;
      out_Jh_x(7, 3) = out_7_3;
      out_Jh_x(8, 3) = out_8_3;
      out_Jh_x(1, 4) = out_1_4;
      out_Jh_x(2, 5) = out_2_5;
      out_Jh_x(3, 5) = out_3_5;
      out_Jh_x(3, 6) = out_3_6;
      out_Jh_x(6, 6) = out_6_6;
      out_Jh_x(7, 6) = out_7_6;
      out_Jh_x(8, 6) = out_8_6;
      out_Jh_x(9, 6) = out_9_6;
      out_Jh_x(4, 7) = out_4_7;
      out_Jh_x(5, 8) = out_5_8;
      out_Jh_x(4, 9) = out_4_9;
      out_Jh_x(5, 9) = out_5_9;
      out_Jh_x(7, 9) = out_7_9;
      out_Jh_x(8, 9) = out_8_9;
      out_Jh_x(4, 10) = out_4_10;
      out_Jh_x(5, 11) = out_5_11;
      out_Jh_x(6, 11) = out_6_11;
      out_Jh_x(6, 12) = out_6_12;
      out_Jh_x(7, 12) = out_7_12;
      out_Jh_x(8, 12) = out_8_12;
      out_Jh_x(9, 12) = out_9_12;
      out_Jh_x(7, 13) = out_7_13;
      out_Jh_x(8, 13) = out_8_13;
      out_Jh_x(9, 13) = out_9_13;
      out_Jh_x(7, 14) = out_7_14;
      out_Jh_x(8, 14) = out_8_14;
      out_Jh_x(9, 14) = out_9_14;
      out_Jh_x(7, 15) = out_7_15;
      out_Jh_x(8, 15) = out_8_15;
      out_Jh_x(9, 15) = out_9_15;
    end % Jh_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jh_v = Jh_v( this, in_1, in_2, t )
      % Calculate the Jacobian of h with respect to v.

      % Extract properties
      m__1 = this.m_m__1;
      m__2 = this.m_m__2;
      J__1 = this.m_J__1;
      J__2 = this.m_J__2;
      g = this.m_g;
      ell__1 = this.m_ell__1;
      ell__2 = this.m_ell__2;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      theta__1 = in_1(3);
      x__2 = in_1(4);
      y__2 = in_1(5);
      theta__2 = in_1(6);
      u__1 = in_1(7);
      v__1 = in_1(8);
      omega__1 = in_1(9);
      u__2 = in_1(10);
      v__2 = in_1(11);
      omega__2 = in_1(12);
      lambda__1 = in_1(13);
      lambda__2 = in_1(14);
      lambda__3 = in_1(15);

      % Evaluate function
      % No body

      % Store outputs
      out_Jh_v = zeros(9, 0);
    end % Jh_v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % CrankRod

% That's All Folks!
