% +--------------------------------------------------------------------------+
% | 'Indigo' module version 1.0 - BSD 3-Clause License - Copyright (c) 2023  |
% | Current version authors:                                                 |
% |   Davide Stocco and Enrico Bertolazzi.                                   |
% +--------------------------------------------------------------------------+

% Matlab generated code for implicit system: NxPendulum
% This file has been automatically generated by Indigo.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef NxPendulum < Indigo.DAE.Implicit
  %
  % No class description provided.
  %
  properties (SetAccess = protected, Hidden = true)
    % User data
    m_g = 1;
    m_ell = 1;
    m_c = .1;
  end
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = NxPendulum( varargin )
      % Class constructor.

      % Superclass constructor
      num_eqns = 15;
      num_veil = 3;
      num_invs = 10;
      this = this@Indigo.DAE.Implicit('NxPendulum', num_eqns, num_veil, num_invs);

      % User data
      if (nargin == 0)
        % Keep default values
      elseif (nargin == 1 && isstruct(varargin{1}))
        this.m_g = varargin{1}.g;
        this.m_ell = varargin{1}.ell;
        this.m_c = varargin{1}.c;
      elseif (nargin == 3)
        this.m_g = varargin{1};
        this.m_ell = varargin{2};
        this.m_c = varargin{3};
      else
        error('wrong number of input arguments.');
      end
    end % NxPendulum
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_F = F( this, in_1, in_2, in_3, ~ )
      % Evaluate the function F.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);
      x__3 = in_1(11);
      y__3 = in_1(12);
      u__3 = in_1(13);
      v__3 = in_1(14);
      lambda__3 = in_1(15);
      x__1_dot = in_2(1);
      y__1_dot = in_2(2);
      u__1_dot = in_2(3);
      v__1_dot = in_2(4);
      lambda__1_dot = in_2(5);
      x__2_dot = in_2(6);
      y__2_dot = in_2(7);
      u__2_dot = in_2(8);
      v__2_dot = in_2(9);
      lambda__2_dot = in_2(10);
      x__3_dot = in_2(11);
      y__3_dot = in_2(12);
      u__3_dot = in_2(13);
      v__3_dot = in_2(14);
      V_y58KN_3 = in_3(3);

      % Evaluate function
      out_1 = x__1_dot - u__1;
      out_2 = y__1_dot - v__1;
      out_3 = 2 * x__1 * lambda__1 + u__1_dot;
      out_4 = 2 * y__1 * lambda__1 + g + v__1_dot;
      out_5 = lambda__1_dot - u__2;
      out_6 = x__2_dot - v__2;
      out_7 = 2 * x__2 * lambda__2 + y__2_dot;
      out_8 = 2 * y__2 * lambda__2 + g + u__2_dot;
      out_9 = v__2_dot - u__3;
      out_10 = lambda__2_dot - v__3;
      out_11 = 2 * x__3 * lambda__3 + x__3_dot;
      out_12 = 2 * y__3 * lambda__3 + g + y__3_dot;
      out_13 = 2 * c * (c * lambda__1 + ell) * u__3_dot - 2 * x__2 * u__2 - 2 * y__2 * v__2;
      out_14 = 2 * c * (c * lambda__2 + ell) * v__3_dot - 2 * x__3 * u__3 - 2 * y__3 * v__3;
      out_15 = -4 * V_y58KN_3;

      % Store outputs
      out_F = zeros(15, 1);
      out_F(1) = out_1;
      out_F(2) = out_2;
      out_F(3) = out_3;
      out_F(4) = out_4;
      out_F(5) = out_5;
      out_F(6) = out_6;
      out_F(7) = out_7;
      out_F(8) = out_8;
      out_F(9) = out_9;
      out_F(10) = out_10;
      out_F(11) = out_11;
      out_F(12) = out_12;
      out_F(13) = out_13;
      out_F(14) = out_14;
      out_F(15) = out_15;
    end % F
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_x = JF_x( this, in_1, in_2, ~, ~ )
      % Evaluate the Jacobian of F with respect to x.

      % Extract properties
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);
      x__3 = in_1(11);
      y__3 = in_1(12);
      u__3 = in_1(13);
      v__3 = in_1(14);
      lambda__3 = in_1(15);
      u__3_dot = in_2(13);
      v__3_dot = in_2(14);

      % Evaluate function
      out_3_1 = 2 * lambda__1;
      out_4_2 = out_3_1;
      out_1_3 = -1;
      out_2_4 = -1;
      out_3_5 = 2 * x__1;
      out_4_5 = 2 * y__1;
      t1 = c ^ 2;
      out_13_5 = 2 * u__3_dot * t1;
      out_7_6 = 2 * lambda__2;
      out_13_6 = -2 * u__2;
      out_8_7 = out_7_6;
      out_13_7 = -2 * v__2;
      out_5_8 = -1;
      t5 = 2 * x__2;
      out_13_8 = -t5;
      out_6_9 = -1;
      t6 = 2 * y__2;
      out_13_9 = -t6;
      out_7_10 = t5;
      out_8_10 = t6;
      out_14_10 = 2 * v__3_dot * t1;
      out_11_11 = 2 * lambda__3;
      out_14_11 = -2 * u__3;
      out_12_12 = out_11_11;
      out_14_12 = -2 * v__3;
      out_9_13 = -1;
      t10 = 2 * x__3;
      out_14_13 = -t10;
      out_10_14 = -1;
      t11 = 2 * y__3;
      out_14_14 = -t11;
      out_11_15 = t10;
      out_12_15 = t11;

      % Store outputs
      out_JF_x = zeros(15, 15);
      out_JF_x(3, 1) = out_3_1;
      out_JF_x(4, 2) = out_4_2;
      out_JF_x(1, 3) = out_1_3;
      out_JF_x(2, 4) = out_2_4;
      out_JF_x(3, 5) = out_3_5;
      out_JF_x(4, 5) = out_4_5;
      out_JF_x(13, 5) = out_13_5;
      out_JF_x(7, 6) = out_7_6;
      out_JF_x(13, 6) = out_13_6;
      out_JF_x(8, 7) = out_8_7;
      out_JF_x(13, 7) = out_13_7;
      out_JF_x(5, 8) = out_5_8;
      out_JF_x(13, 8) = out_13_8;
      out_JF_x(6, 9) = out_6_9;
      out_JF_x(13, 9) = out_13_9;
      out_JF_x(7, 10) = out_7_10;
      out_JF_x(8, 10) = out_8_10;
      out_JF_x(14, 10) = out_14_10;
      out_JF_x(11, 11) = out_11_11;
      out_JF_x(14, 11) = out_14_11;
      out_JF_x(12, 12) = out_12_12;
      out_JF_x(14, 12) = out_14_12;
      out_JF_x(9, 13) = out_9_13;
      out_JF_x(14, 13) = out_14_13;
      out_JF_x(10, 14) = out_10_14;
      out_JF_x(14, 14) = out_14_14;
      out_JF_x(11, 15) = out_11_15;
      out_JF_x(12, 15) = out_12_15;
    end % JF_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_x_dot = JF_x_dot( this, in_1, ~, ~, ~ )
      % Evaluate the Jacobian of F with respect to x_dot.

      % Extract properties
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      lambda__1 = in_1(5);
      lambda__2 = in_1(10);

      % Evaluate function
      out_1_1 = 1;
      out_2_2 = 1;
      out_3_3 = 1;
      out_4_4 = 1;
      out_5_5 = 1;
      out_6_6 = 1;
      out_7_7 = 1;
      out_8_8 = 1;
      out_9_9 = 1;
      out_10_10 = 1;
      out_11_11 = 1;
      out_12_12 = 1;
      out_13_13 = 2 * c * (c * lambda__1 + ell);
      out_14_14 = 2 * c * (c * lambda__2 + ell);

      % Store outputs
      out_JF_x_dot = zeros(15, 15);
      out_JF_x_dot(1, 1) = out_1_1;
      out_JF_x_dot(2, 2) = out_2_2;
      out_JF_x_dot(3, 3) = out_3_3;
      out_JF_x_dot(4, 4) = out_4_4;
      out_JF_x_dot(5, 5) = out_5_5;
      out_JF_x_dot(6, 6) = out_6_6;
      out_JF_x_dot(7, 7) = out_7_7;
      out_JF_x_dot(8, 8) = out_8_8;
      out_JF_x_dot(9, 9) = out_9_9;
      out_JF_x_dot(10, 10) = out_10_10;
      out_JF_x_dot(11, 11) = out_11_11;
      out_JF_x_dot(12, 12) = out_12_12;
      out_JF_x_dot(13, 13) = out_13_13;
      out_JF_x_dot(14, 14) = out_14_14;
    end % JF_x_dot
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_v = JF_v( ~, ~, ~, ~, ~ )
      % Evaluate the Jacobian of F with respect to v.

      % Extract properties
      % No properties

      % Extract inputs

      % Evaluate function
      % No body

      % Store outputs
      out_JF_v = zeros(15, 3);
    end % JF_v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_v = v( this, in_1, ~ )
      % Evaluate the the veils v.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);
      x__3 = in_1(11);
      y__3 = in_1(12);
      u__3 = in_1(13);
      v__3 = in_1(14);
      lambda__3 = in_1(15);

      % Evaluate function
      t1 = y__1 ^ 2;
      t3 = x__2 * v__1;
      t6 = x__2 * u__1;
      t12 = c ^ 2;
      t14 = lambda__2 ^ 2;
      t15 = t14 * lambda__2;
      t17 = 4 * t15 * t12 * (t1 * v__2 + 10 * y__1 * t3 + (x__1 * v__2 + 10 * t6) * x__1);
      t18 = v__3 * c;
      t19 = x__2 * t18;
      t20 = y__2 * c;
      t23 = ell * v__2;
      t24 = t23 / 3;
      t29 = ell * x__2;
      t30 = v__1 * t29;
      t34 = x__1 ^ 2;
      t35 = t34 * c;
      t39 = t19 + t24;
      t41 = x__1 * x__2;
      t42 = ell * u__1;
      t45 = u__1 ^ 2;
      t46 = v__1 ^ 2;
      t47 = t45 + t46;
      t54 = lambda__1 ^ 2;
      t55 = t54 * lambda__1;
      t56 = t55 * c;
      t58 = c * g;
      t60 = y__2 * ell;
      t62 = -0.11e2 / 0.5e1 * t58 - 0.22e2 / 0.5e1 * t60;
      t64 = u__2 ^ 2;
      t65 = t64 * c;
      t66 = 0.7e1 / 0.5e1 * t65;
      t67 = x__2 * v__3;
      t68 = ell * t67;
      t69 = 0.3e1 / 0.5e1 * t68;
      t75 = c * lambda__1;
      t76 = u__2 * v__1;
      t80 = g * ell;
      t84 = g ^ 2;
      t85 = t84 * c;
      t91 = t47 * c;
      t95 = c * x__1;
      t96 = u__1 * u__2;
      t111 = t45 + 0.8e1 / 0.3e1 * t76 + t46;
      t123 = x__3 * u__3;
      t124 = y__3 * v__3;
      t125 = -t123 - t124;
      t127 = 2 * y__2 * t125;
      t128 = c * ell;
      t129 = t64 * t128;
      t130 = 28 * t129;
      t143 = c * y__1;
      t152 = g * t34;
      t170 = t17 + 12 * t14 * c * (t1 * (t19 + 0.22e2 / 0.3e1 * lambda__1 * t20 + t24) + y__1 * (0.7e1 / 0.2e1 * g * t20 + 0.10e2 / 0.3e1 * t30) + 0.22e2 / 0.3e1 * y__2 * lambda__1 * t35 + t34 * t39 + 0.10e2 / 0.3e1 * t42 * t41 - 3 * t47 * t20) - 20 * lambda__2 * c * (t1 * (-0.16e2 / 0.5e1 * t56 + lambda__1 * t62 + t66 - t69) + y__1 * (-0.31e2 / 0.10e2 * g * t54 * c + 8 * t76 * t75 + y__2 * (v__1 * t18 - 0.21e2 / 0.10e2 * t80) - 0.21e2 / 0.20e2 * t85) - 0.16e2 / 0.5e1 * t55 * t35 + 0.8e1 / 0.5e1 * t54 * t91 + lambda__1 * (t34 * t62 + 8 * t96 * t95 - 0.3e1 / 0.4e1 * t85) + t34 * (t66 - t69) + x__1 * y__2 * u__1 * t18 + 0.9e1 / 0.5e1 * y__2 * t47 * ell + 0.9e1 / 0.10e2 * c * t111 * g) + t1 * (64 * ell * t56 + 44 * t80 * t75 + t127 - t130) - 20 * t143 * (-0.21e2 / 0.20e2 * t84 + v__3 * y__2 * v__1 + 8 * lambda__1 * u__2 * v__1 - 0.31e2 / 0.10e2 * g * t54) * ell + 64 * t128 * t55 * t34 - 32 * t54 * t47 * t128 + 44 * t75 * (t152 - 0.40e2 / 0.11e2 * x__1 * t96 + 0.15e2 / 0.44e2 * t84) * ell + t34 * (t127 - t130) - 20 * ell * t95 * u__1 * v__3 * y__2 - 18 * c * t111 * t80;
      t174 = c * lambda__2 + ell;
      V_y58KN_1 = 0.1e1 / t174 / c * t170;
      t185 = 0.22e2 / 0.3e1 * y__2 * c * (lambda__1 * t34 + t1 * lambda__1 + 0.21e2 / 0.44e2 * y__1 * g - 0.9e1 / 0.22e2 * t45 - 0.9e1 / 0.22e2 * t46);
      t187 = t19 + 0.4e1 / 0.3e1 * t23;
      t190 = ell * v__1;
      t191 = t190 * x__2 * y__1;
      t194 = u__1 * t29;
      t212 = ell ^ 2;
      t215 = 44 * lambda__1 * t212 + t123 + t124;
      t217 = t212 * g;
      t221 = t47 * t212;
      t225 = t212 * x__2;
      t226 = t34 + t1;
      t231 = t174 ^ 2;
      t232 = 0.1e1 / t231;
      V_y58KN_2 = t232 * (t17 + 6 * t14 * c * (t185 + t1 * t187 + 0.40e2 / 0.3e1 * t191 + x__1 * (x__1 * t187 + 0.40e2 / 0.3e1 * t194)) + 12 * lambda__2 * ell * (t185 + t1 * t39 + 0.10e2 / 0.3e1 * t191 + x__1 * (x__1 * t39 + 0.10e2 / 0.3e1 * t194)) + y__2 * (t1 * t215 + t34 * t215 + 21 * y__1 * t217 - 18 * t221) + 6 * t226 * v__3 * t225);
      t233 = v__3 * t12;
      t234 = t75 + ell;
      t243 = x__2 * g;
      t251 = x__1 * u__1;
      t258 = t12 ^ 2;
      t259 = t14 ^ 2;
      t277 = v__2 * t18;
      t281 = 0.2e1 / 0.3e1 * ell * u__3;
      t292 = t34 * u__2;
      t293 = v__1 * g;
      t311 = t12 * c;
      t316 = y__1 * v__1 + t251;
      t330 = v__1 * t60;
      t333 = u__2 + 0.16e2 / 0.19e2 * v__1;
      t334 = t333 * t58;
      t339 = x__1 * t18;
      t348 = g * u__1;
      t356 = ell * u__2;
      t359 = x__2 * y__3;
      t361 = v__2 * t128;
      t364 = v__3 * (0.2e1 / 0.5e1 * t359 + 0.3e1 / 0.5e1 * t361);
      t365 = g * t12;
      t366 = u__2 * t365;
      t367 = 0.5e1 / 0.2e1 * t366;
      t368 = x__2 * x__3;
      t372 = 0.2e1 / 0.5e1 * (t368 + t212 / 4) * u__3;
      t380 = v__2 * t212;
      t382 = t64 * t12;
      t391 = u__2 * ell * t34;
      t393 = v__3 * t91;
      t394 = v__1 * t80;
      t413 = t84 * t12;
      t418 = 0.32e2 / 0.5e1 * t55 * t316 * t12 + 0.64e2 / 0.5e1 * t54 * t12 * (t292 + t1 * u__2 + 0.63e2 / 0.256e3 * t293) + lambda__1 * (t1 * (-0.32e2 / 0.5e1 * t225 + y__2 * t233) + 0.19e2 / 0.2e1 * y__1 * c * (0.64e2 / 0.19e2 * t330 + t334) + y__2 * (t339 + 32 * t42) * t95 - 0.32e2 / 0.5e1 * t212 * x__2 * t34 + 8 * t348 * x__1 * t12 - 0.28e2 / 0.5e1 * t47 * u__2 * t12) + t1 * (10 * t356 * t20 + t364 + t367 + t372) + y__1 * (y__2 * g * t233 / 2 + 0.16e2 / 0.5e1 * t30 * t18 + v__1 * (0.6e1 / 0.5e1 * t380 - 0.27e2 / 0.5e1 * t382) - 0.31e2 / 0.10e2 * t212 * t243) - y__2 * c * (-20 * t391 + t393 - 21 * t394) / 2 + t34 * (t364 + t367 + t372) - 0.27e2 / 0.5e1 * x__1 * u__1 * (t382 - 0.16e2 / 0.27e2 * t29 * t18 - 0.2e1 / 0.9e1 * t380) + 0.14e2 / 0.5e1 * t45 * t225 + 0.14e2 / 0.5e1 * t46 * t225 + 0.63e2 / 0.40e2 * u__2 * t413 + 0.21e2 / 0.8e1 * v__1 * t413;
      t424 = t54 ^ 2;
      t425 = t424 * t316;
      t439 = u__2 * t35 + u__2 * t1 * c + 0.63e2 / 0.256e3 * v__1 * t58 + x__1 * ell * u__1 / 2 + y__1 * ell * v__1 / 2;
      t441 = t55 * t12;
      t447 = t1 * (0.64e2 / 0.5e1 * t356 + y__2 * t18);
      t458 = 0.28e2 / 0.5e1 * u__2 * t45 * c;
      t461 = 0.28e2 / 0.5e1 * t46 * u__2 * c;
      t462 = 0.64e2 / 0.5e1 * t391;
      t463 = 0.63e2 / 0.20e2 * t394;
      t465 = 8 * t348 * t95;
      t468 = t54 * t12;
      t470 = y__3 * lambda__3;
      t471 = 20 * t212;
      t472 = g / 2;
      t477 = u__2 * t212;
      t480 = c * (v__3 * (t470 + t471 + t472) + x__3 * lambda__3 * u__3 + 50 * t477);
      t489 = v__3 * (0.3e1 / 0.50e2 * t361 + 0.2e1 / 0.25e2 * t359) + t366 + 0.2e1 / 0.25e2 * u__3 * t368;
      t494 = c * t80;
      t495 = y__3 * v__1;
      t497 = t494 - 0.3e1 / 0.5e1 * t495;
      t500 = t212 * ell;
      t502 = x__3 * c;
      t503 = u__3 * t502;
      t511 = 0.40e2 / 0.27e2 * t80;
      t512 = t65 - t511;
      t530 = t393 - 0.21e2 / 0.4e1 * t394;
      t535 = t34 * t489;
      t536 = 0.4e1 / 0.27e2 * t68;
      t541 = t46 * t356;
      t543 = v__1 * t85;
      t548 = (t85 - 0.32e2 / 0.9e1 * t45 * ell) * u__2;
      t559 = y__2 ^ 2;
      t561 = v__2 * t559 * x__3;
      t572 = ell * lambda__3;
      t576 = t18 * (t470 + t472) * ell / 20 + u__2 * (-t368 / 40 + 0.5e1 / 0.2e1 * t500 * c) + u__3 * t572 * t502 / 20;
      t583 = v__1 * t123;
      t587 = t65 - t536;
      t597 = v__2 * t559 * x__3 * t34;
      t603 = -x__1 * t125 * u__1 * t128;
      t615 = (u__2 + 0.5e1 / 0.3e1 * v__1) * t84;
      t640 = y__3 ^ 2;
      t641 = t640 / 10;
      t644 = t572 * c * y__3 / 5;
      t654 = u__3 * (c * lambda__3 * ell - y__3 / 2);
      t657 = v__3 * (-t641 + t644 + (t471 + g) * t128 / 10) + x__3 * t654 / 5;
      t660 = 5 * t477 * t365;
      t668 = y__2 * (v__3 * (-0.6e1 / 0.5e1 * t495 + t494) - 0.6e1 / 0.5e1 * t583);
      t679 = 0.6e1 / 0.5e1 * t603;
      t680 = t221 * t233;
      t708 = v__3 * (-t641 + t644 + t494 / 10) + (-x__2 * u__2 / 2 + t654) * x__3 / 5;
      V_y58KN_3 = 0.1e1 / t234 * t232 / t12 * (2 * V_y58KN_2 * t234 * t231 * t233 - 256 * t259 * t258 * (lambda__1 * t226 * x__2 - u__3 * t1 / 64 + y__1 * (0.31e2 / 0.64e2 * t243 - 0.3e1 / 0.16e2 * v__1 * v__2) - u__3 * t34 / 64 - 0.3e1 / 0.16e2 * v__2 * t251 - 0.7e1 / 0.16e2 * t47 * x__2) * t234 + 12 * t15 * t311 * (lambda__1 * (-0.128e3 / 0.3e1 * ell * t1 * x__2 + 0.160e3 / 0.3e1 * y__2 * v__1 * t143 + 0.160e3 / 0.3e1 * (u__1 * t20 - 0.4e1 / 0.5e1 * ell * t41) * x__1) + t1 * (t277 + 0.50e2 / 0.3e1 * u__2 * t20 + t281) + y__1 * (0.16e2 / 0.3e1 * t3 * t18 - 0.62e2 / 0.3e1 * ell * t243 + 8 * v__2 * t190) + 0.50e2 / 0.3e1 * y__2 * c * (t292 + 0.21e2 / 0.20e2 * t293) + t34 * (t277 + t281) + x__1 * (0.16e2 / 0.3e1 * t6 * t18 + 8 * v__2 * t42) + 0.56e2 / 0.3e1 * t47 * t29) * t234 + 40 * t14 * t12 * t418 * t234 + 80 * lambda__2 * c * (0.32e2 / 0.5e1 * t425 * ell * t311 + 0.64e2 / 0.5e1 * t441 * t439 * ell + t468 * (t447 + y__1 * (8 * t330 + 0.19e2 / 0.2e1 * t334) + y__2 * (t339 + 8 * t42) * x__1 - t458 - t461 + t462 + t463 + t465) * ell + lambda__1 * c * (t1 * (y__2 * t480 / 10 + 5 * t489 * ell) + y__1 * (y__2 * (v__3 * t497 * c + (16 * t500 - 0.3e1 / 0.5e1 * t503) * v__1) - 0.54e2 / 0.5e1 * (-0.4e1 / 0.27e2 * t190 * t67 + v__1 * t512 - 0.95e2 / 0.54e2 * u__2 * t80) * t128) + y__2 * (t34 * t480 / 10 - 0.3e1 / 0.5e1 * x__1 * u__1 * (y__3 * t18 + t503 - 0.80e2 / 0.3e1 * t500) - c * t530 * ell) + 5 * (t535 - 0.54e2 / 0.25e2 * t95 * u__1 * (t65 - t536 - t511) + 0.63e2 / 0.100e3 * c * (-0.32e2 / 0.9e1 * t541 + 0.5e1 / 0.3e1 * t543 + t548)) * ell) / 2 + t1 * (-t561 / 40 + y__2 * t576 + 0.5e1 / 0.2e1 * t489 * t212) + t143 * (y__2 * (v__3 * t497 - 0.3e1 / 0.5e1 * t583) - 0.54e2 / 0.5e1 * v__1 * t587 * ell) * ell / 2 - t597 / 40 + y__2 * (t34 * t576 - 0.3e1 / 0.10e2 * t603 - c * t530 * t212 / 2) + 0.5e1 / 0.2e1 * (t535 - 0.54e2 / 0.25e2 * t95 * u__1 * t587 + 0.63e2 / 0.100e3 * t12 * t615) * t212) + 256 * t425 * t212 * t311 + 512 * t441 * t439 * t212 + 40 * t468 * (t447 + 0.19e2 / 0.2e1 * y__1 * t333 * t58 + y__2 * t34 * t18 + t465 - t458 - t461 + t462 + t463) * t212 + 20 * lambda__1 * c * (t1 * (y__2 * t657 + t660) + t143 * ell * (t668 + v__1 * (16 * t217 - 0.54e2 / 0.5e1 * t129) + 19 * u__2 * t217) + y__2 * (t34 * t657 - t679 - t680) + 5 * c * (g * u__2 * t35 - 0.54e2 / 0.25e2 * x__1 * u__1 * t512 - 0.56e2 / 0.25e2 * t541 + 0.21e2 / 0.20e2 * t543 + 0.63e2 / 0.100e3 * t548) * t212) + 20 * ell * (t1 * (-t561 / 10 + y__2 * t708 + t660) + t143 * (t668 - 0.54e2 / 0.5e1 * v__1 * t64 * t128) * ell - t597 / 10 + y__2 * (t34 * t708 - t679 - t680) + 5 * t12 * (u__2 * t152 - 0.54e2 / 0.25e2 * t64 * t251 + 0.63e2 / 0.100e3 * t615) * t212));

      % Store outputs
      out_v = zeros(3, 1);
      out_v(1) = V_y58KN_1;
      out_v(2) = V_y58KN_2;
      out_v(3) = V_y58KN_3;
    end % v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jv_x = Jv_x( this, in_1, in_2, ~ )
      % Evaluate the Jacobian of v with respect to x.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);
      x__3 = in_1(11);
      y__3 = in_1(12);
      u__3 = in_1(13);
      v__3 = in_1(14);
      lambda__3 = in_1(15);
      V_y58KN_2 = in_2(2);

      % Evaluate function
      t1 = x__2 * u__1;
      t2 = 10 * t1;
      t3 = x__1 * v__2;
      t6 = c ^ 2;
      t8 = lambda__2 ^ 2;
      t9 = t8 * lambda__2;
      t11 = 4 * t9 * t6 * (t2 + 2 * t3);
      t12 = c * x__1;
      t13 = y__2 * lambda__1;
      t14 = t13 * t12;
      t15 = 0.44e2 / 0.3e1 * t14;
      t16 = v__3 * c;
      t17 = x__2 * t16;
      t18 = ell * v__2;
      t19 = t18 / 3;
      t20 = t17 + t19;
      t21 = x__1 * t20;
      t23 = ell * x__2;
      t24 = u__1 * t23;
      t25 = 0.10e2 / 0.3e1 * t24;
      t26 = t15 + 2 * t21 + t25;
      t30 = lambda__1 ^ 2;
      t31 = t30 * lambda__1;
      t34 = c * g;
      t35 = 0.11e2 / 0.5e1 * t34;
      t36 = y__2 * ell;
      t37 = 0.22e2 / 0.5e1 * t36;
      t38 = -t35 - t37;
      t41 = u__1 * c;
      t42 = u__2 * t41;
      t46 = u__2 ^ 2;
      t47 = t46 * c;
      t48 = 0.7e1 / 0.5e1 * t47;
      t49 = x__2 * v__3;
      t50 = ell * t49;
      t51 = 0.3e1 / 0.5e1 * t50;
      t52 = t48 - t51;
      t55 = y__2 * u__1;
      t62 = c * ell;
      t65 = x__1 * g;
      t67 = u__1 * u__2;
      t71 = c * lambda__1;
      t74 = x__3 * u__3;
      t75 = y__3 * v__3;
      t76 = -t74 - t75;
      t77 = 2 * t76;
      t78 = y__2 * t77;
      t79 = t46 * t62;
      t80 = 28 * t79;
      t81 = t78 - t80;
      t84 = u__1 * v__3;
      t85 = y__2 * c;
      t86 = ell * t85;
      t90 = 0.1e1 / c;
      t93 = c * lambda__2 + ell;
      t94 = 0.1e1 / t93;
      D_V_y58KN_1_1 = t94 * t90 * (t11 + 12 * t8 * c * t26 - 20 * lambda__2 * c * (-0.32e2 / 0.5e1 * t31 * t12 + lambda__1 * (2 * x__1 * t38 + 8 * t42) + 2 * x__1 * t52 + t55 * t16) + 128 * t62 * t31 * x__1 + 44 * t71 * (2 * t65 - 0.40e2 / 0.11e2 * t67) * ell + 2 * x__1 * t81 - 20 * t86 * t84);
      t96 = t17 + 0.4e1 / 0.3e1 * t18;
      t97 = x__1 * t96;
      t99 = 0.40e2 / 0.3e1 * t24;
      t107 = ell ^ 2;
      t110 = 44 * lambda__1 * t107 + t74 + t75;
      t114 = t107 * x__2;
      t119 = t93 ^ 2;
      t120 = 0.1e1 / t119;
      D_V_y58KN_2_1 = t120 * (t11 + 6 * t8 * c * (t15 + 2 * t97 + t99) + 12 * lambda__2 * ell * t26 + 2 * y__2 * x__1 * t110 + 12 * v__3 * x__1 * t114);
      t121 = v__3 * t6;
      t122 = t71 + ell;
      t123 = t122 * t119;
      t127 = x__1 * x__2;
      t136 = t6 ^ 2;
      t137 = t8 ^ 2;
      t138 = t137 * t136;
      t141 = u__1 * t85;
      t143 = ell * t127;
      t147 = u__2 * x__1;
      t150 = v__2 * t16;
      t151 = ell * u__3;
      t152 = 0.2e1 / 0.3e1 * t151;
      t153 = t150 + t152;
      t157 = 0.16e2 / 0.3e1 * t1 * t16;
      t158 = ell * u__1;
      t160 = 8 * v__2 * t158;
      t163 = t6 * c;
      t164 = t9 * t163;
      t167 = u__1 * t6;
      t170 = t30 * t6;
      t173 = x__1 * t16;
      t175 = t173 + 32 * t158;
      t178 = x__1 * t6;
      t179 = v__3 * y__2;
      t183 = g * t6;
      t188 = x__1 * ell;
      t189 = u__2 * t85;
      t192 = x__2 * y__3;
      t194 = v__2 * t62;
      t196 = 0.2e1 / 0.5e1 * t192 + 0.3e1 / 0.5e1 * t194;
      t197 = v__3 * t196;
      t198 = u__2 * t183;
      t199 = 0.5e1 / 0.2e1 * t198;
      t200 = x__2 * x__3;
      t204 = 0.2e1 / 0.5e1 * (t200 + t107 / 4) * u__3;
      t205 = t197 + t199 + t204;
      t208 = t46 * t6;
      t209 = t23 * t16;
      t211 = v__2 * t107;
      t213 = t208 - 0.16e2 / 0.27e2 * t209 - 0.2e1 / 0.9e1 * t211;
      t214 = u__1 * t213;
      t218 = t8 * t6;
      t221 = ell * t163;
      t222 = t30 ^ 2;
      t223 = t222 * u__1;
      t229 = 2 * u__2 * t12 + t158 / 2;
      t231 = t31 * t6;
      t235 = t173 + 8 * t158;
      t237 = x__1 * y__2;
      t238 = t237 * t16;
      t240 = 0.128e3 / 0.5e1 * u__2 * t188;
      t241 = g * u__1;
      t242 = c * t241;
      t243 = 8 * t242;
      t247 = y__3 * lambda__3;
      t248 = 20 * t107;
      t249 = g / 2;
      t250 = t247 + t248 + t249;
      t252 = lambda__3 * x__3;
      t254 = u__2 * t107;
      t257 = c * (t250 * v__3 + t252 * u__3 + 50 * t254);
      t260 = y__3 * t16;
      t261 = x__3 * c;
      t262 = u__3 * t261;
      t263 = t107 * ell;
      t265 = t260 + t262 - 0.80e2 / 0.3e1 * t263;
      t266 = u__1 * t265;
      t272 = 0.3e1 / 0.50e2 * t194 + 0.2e1 / 0.25e2 * t192;
      t276 = v__3 * t272 + t198 + 0.2e1 / 0.25e2 * u__3 * t200;
      t278 = 2 * x__1 * t276;
      t279 = 0.4e1 / 0.27e2 * t50;
      t280 = g * ell;
      t281 = 0.40e2 / 0.27e2 * t280;
      t282 = t47 - t279 - t281;
      t283 = u__1 * t282;
      t294 = y__2 ^ 2;
      t295 = v__2 * t294;
      t296 = t295 * x__1 * x__3;
      t299 = (t247 + t249) * ell;
      t301 = t16 * t299 / 20;
      t303 = t263 * c;
      t305 = -t200 / 40 + 0.5e1 / 0.2e1 * t303;
      t306 = u__2 * t305;
      t307 = ell * lambda__3;
      t310 = u__3 * t307 * t261 / 20;
      t311 = t301 + t306 + t310;
      t314 = -t76;
      t315 = t314 * u__1;
      t316 = t315 * t62;
      t320 = t47 - t279;
      t321 = u__1 * t320;
      t331 = t107 * t163;
      t342 = y__3 ^ 2;
      t343 = t342 / 10;
      t344 = c * y__3;
      t346 = t307 * t344 / 5;
      t350 = -t343 + t346 + (t248 + g) * t62 / 10;
      t352 = lambda__3 * c;
      t353 = ell * t352;
      t355 = t353 - y__3 / 2;
      t356 = u__3 * t355;
      t359 = v__3 * t350 + x__3 * t356 / 5;
      t362 = 0.6e1 / 0.5e1 * t316;
      t365 = g * u__2;
      t368 = t47 - t281;
      t369 = u__1 * t368;
      t380 = c * t280;
      t382 = -t343 + t346 + t380 / 10;
      t383 = v__3 * t382;
      t384 = x__2 * u__2;
      t388 = (-t384 / 2 + t356) * x__3 / 5;
      t389 = t383 + t388;
      t406 = 0.1e1 / t6;
      t408 = 0.1e1 / t122;
      t409 = t408 * t120;
      D_V_y58KN_3_1 = t409 * t406 * (2 * D_V_y58KN_2_1 * t123 * t121 - 256 * t138 * (2 * lambda__1 * t127 - x__1 * u__3 / 32 - 0.3e1 / 0.16e2 * u__1 * v__2) * t122 + 12 * t164 * (lambda__1 * (0.160e3 / 0.3e1 * t141 - 0.256e3 / 0.3e1 * t143) + 0.100e3 / 0.3e1 * t85 * t147 + 2 * x__1 * t153 + t157 + t160) * t122 + 40 * t218 * (0.32e2 / 0.5e1 * t31 * t167 + 0.128e3 / 0.5e1 * t170 * t147 + lambda__1 * (y__2 * t175 * c + t179 * t178 - 0.64e2 / 0.5e1 * t107 * t127 + 8 * u__1 * t183) + 20 * t189 * t188 + 2 * x__1 * t205 - 0.27e2 / 0.5e1 * t214) * t122 + 80 * lambda__2 * c * (0.32e2 / 0.5e1 * t223 * t221 + 0.64e2 / 0.5e1 * t231 * t229 * ell + t170 * (t235 * y__2 + t238 + t240 + t243) * ell + lambda__1 * c * (y__2 * (x__1 * t257 / 5 - 0.3e1 / 0.5e1 * t266) + 5 * (t278 - 0.54e2 / 0.25e2 * c * t283) * ell) / 2 - t296 / 20 + y__2 * (2 * x__1 * t311 - 0.3e1 / 0.10e2 * t316) + 0.5e1 / 0.2e1 * (t278 - 0.54e2 / 0.25e2 * c * t321) * t107) + 256 * t223 * t331 + 512 * t231 * t229 * t107 + 40 * t170 * (2 * t238 + t243 + t240) * t107 + 20 * lambda__1 * c * (y__2 * (2 * t359 * x__1 - t362) + 5 * c * (2 * t365 * t12 - 0.54e2 / 0.25e2 * t369) * t107) + 20 * ell * (-t296 / 5 + y__2 * (2 * t389 * x__1 - t362) + 5 * t6 * (2 * u__2 * t65 - 0.54e2 / 0.25e2 * t46 * u__1) * t107));
      t410 = x__2 * v__1;
      t412 = v__2 * y__1;
      t417 = 4 * t9 * t6 * (10 * t410 + 2 * t412);
      t420 = t17 + 0.22e2 / 0.3e1 * lambda__1 * t85 + t19;
      t423 = g * t85;
      t424 = 0.7e1 / 0.2e1 * t423;
      t425 = v__1 * t23;
      t426 = 0.10e2 / 0.3e1 * t425;
      t431 = t31 * c;
      t434 = -0.16e2 / 0.5e1 * t431 + lambda__1 * t38 + t48 - t51;
      t437 = t30 * c;
      t439 = 0.31e2 / 0.10e2 * g * t437;
      t440 = u__2 * v__1;
      t442 = 8 * t440 * t71;
      t443 = v__1 * t16;
      t445 = t443 - 0.21e2 / 0.10e2 * t280;
      t446 = y__2 * t445;
      t447 = g ^ 2;
      t448 = t447 * c;
      t449 = 0.21e2 / 0.20e2 * t448;
      t458 = 64 * ell * t431 + 44 * t280 * t71 + t78 - t80;
      t462 = v__1 * t179;
      t463 = u__2 * lambda__1;
      t469 = (-0.21e2 / 0.20e2 * t447 + t462 + 8 * v__1 * t463 - 0.31e2 / 0.10e2 * g * t30) * ell;
      D_V_y58KN_1_2 = t94 * t90 * (t417 + 12 * t8 * c * (2 * t420 * y__1 + t424 + t426) - 20 * lambda__2 * c * (2 * t434 * y__1 - t439 + t442 + t446 - t449) + 2 * y__1 * t458 - 20 * c * t469);
      t480 = 0.22e2 / 0.3e1 * (2 * y__1 * lambda__1 + 0.21e2 / 0.44e2 * g) * c * y__2;
      t496 = t107 * g;
      D_V_y58KN_2_2 = t120 * (t417 + 6 * t8 * c * (t480 + 2 * y__1 * t96 + 0.40e2 / 0.3e1 * t425) + 12 * lambda__2 * ell * (2 * t20 * y__1 + t426 + t480) + y__2 * (2 * t110 * y__1 + 21 * t496) + 12 * v__3 * y__1 * t114);
      t507 = y__1 * x__2;
      t512 = x__2 * g;
      t513 = 0.31e2 / 0.64e2 * t512;
      t515 = 0.3e1 / 0.16e2 * v__1 * v__2;
      t520 = y__1 * t23;
      t522 = v__1 * t85;
      t527 = t150 + 0.50e2 / 0.3e1 * t189 + t152;
      t531 = 0.16e2 / 0.3e1 * t410 * t16;
      t533 = 0.62e2 / 0.3e1 * ell * t512;
      t534 = ell * v__1;
      t536 = 8 * v__2 * t534;
      t549 = -0.32e2 / 0.5e1 * t114 + y__2 * t121;
      t552 = v__1 * t36;
      t555 = u__2 + 0.16e2 / 0.19e2 * v__1;
      t556 = t555 * t34;
      t558 = c * (0.64e2 / 0.19e2 * t552 + t556);
      t562 = ell * u__2;
      t565 = 10 * t562 * t85 + t197 + t199 + t204;
      t570 = y__2 * g * t121 / 2;
      t572 = 0.16e2 / 0.5e1 * t425 * t16;
      t573 = 0.6e1 / 0.5e1 * t211;
      t574 = 0.27e2 / 0.5e1 * t208;
      t576 = v__1 * (t573 - t574);
      t578 = 0.31e2 / 0.10e2 * t107 * t512;
      t583 = t222 * v__1;
      t586 = c * y__1;
      t590 = 2 * u__2 * t586 + t534 / 2;
      t595 = y__2 * t16;
      t596 = 0.64e2 / 0.5e1 * t562 + t595;
      t598 = 2 * y__1 * t596;
      t599 = 8 * t552;
      t600 = 0.19e2 / 0.2e1 * t556;
      t608 = y__2 * t257 / 10 + 5 * t276 * ell;
      t611 = y__3 * v__1;
      t613 = t380 - 0.3e1 / 0.5e1 * t611;
      t614 = t613 * c;
      t616 = 16 * t263;
      t617 = 0.3e1 / 0.5e1 * t262;
      t620 = v__3 * t614 + (t616 - t617) * v__1;
      t621 = y__2 * t620;
      t629 = 0.54e2 / 0.5e1 * (-0.4e1 / 0.27e2 * t534 * t49 + v__1 * t368 - 0.95e2 / 0.54e2 * u__2 * t280) * t62;
      t634 = t294 * x__3;
      t635 = v__2 * t634;
      t640 = -t635 / 40 + y__2 * t311 + 0.5e1 / 0.2e1 * t276 * t107;
      t644 = v__1 * t74;
      t646 = v__3 * t613 - 0.3e1 / 0.5e1 * t644;
      t648 = t320 * ell;
      t652 = (y__2 * t646 - 0.54e2 / 0.5e1 * v__1 * t648) * ell;
      t670 = 5 * t254 * t183;
      t671 = t359 * y__2 + t670;
      t675 = -0.6e1 / 0.5e1 * t611 + t380;
      t678 = v__3 * t675 - 0.6e1 / 0.5e1 * t644;
      t679 = y__2 * t678;
      t680 = 16 * t496;
      t681 = 0.54e2 / 0.5e1 * t79;
      t687 = ell * (t679 + v__1 * (t680 - t681) + 19 * u__2 * t496);
      t695 = -t635 / 10 + y__2 * t389 + t670;
      t702 = (t679 - 0.54e2 / 0.5e1 * v__1 * t46 * t62) * ell;
      D_V_y58KN_3_2 = t409 * t406 * (2 * D_V_y58KN_2_2 * t123 * t121 - 256 * t138 * (2 * lambda__1 * t507 - y__1 * u__3 / 32 + t513 - t515) * t122 + 12 * t164 * (lambda__1 * (-0.256e3 / 0.3e1 * t520 + 0.160e3 / 0.3e1 * t522) + 2 * y__1 * t527 + t531 - t533 + t536) * t122 + 40 * t218 * (0.32e2 / 0.5e1 * t31 * v__1 * t6 + 0.128e3 / 0.5e1 * t170 * u__2 * y__1 + lambda__1 * (2 * y__1 * t549 + 0.19e2 / 0.2e1 * t558) + 2 * y__1 * t565 + t570 + t572 + t576 - t578) * t122 + 80 * lambda__2 * c * (0.32e2 / 0.5e1 * t583 * t221 + 0.64e2 / 0.5e1 * t231 * t590 * ell + t170 * (t598 + t599 + t600) * ell + lambda__1 * c * (2 * t608 * y__1 + t621 - t629) / 2 + 2 * y__1 * t640 + c * t652 / 2) + 256 * t583 * t331 + 512 * t231 * t590 * t107 + 40 * t170 * (t598 + t600) * t107 + 20 * lambda__1 * c * (c * t687 + 2 * t671 * y__1) + 20 * ell * (c * t702 + 2 * t695 * y__1));
      t709 = t9 * t6;
      t711 = 40 * t709 * t127;
      t713 = 6 * t141;
      t714 = 0.10e2 / 0.3e1 * t143 - t713;
      t735 = ell * t12;
      D_V_y58KN_1_3 = t94 * t90 * (t711 + 12 * t8 * c * t714 - 20 * lambda__2 * c * (0.16e2 / 0.5e1 * t30 * t41 + 8 * t463 * t12 + t238 + 0.18e2 / 0.5e1 * y__2 * t158 + 0.9e1 / 0.5e1 * t242) - 64 * t30 * u__1 * t62 - 160 * lambda__1 * t12 * t562 - 20 * t735 * t179 - 36 * t41 * t280);
      t750 = u__1 * t107;
      D_V_y58KN_2_3 = t120 * (t711 + 6 * t8 * c * (-t713 + 0.40e2 / 0.3e1 * t143) + 12 * lambda__2 * ell * t714 - 36 * y__2 * t750);
      t766 = 0.16e2 / 0.3e1 * t17 + 8 * t18;
      t779 = u__2 * t6;
      t793 = t222 * x__1;
      t796 = x__1 * t107;
      t801 = 0.56e2 / 0.5e1 * t42;
      t803 = 8 * g * t12;
      t809 = t6 * ell;
      t827 = x__1 * t314 * t62;
      t829 = t6 * t107;
      t830 = t84 * t829;
      t852 = y__2 * (-0.6e1 / 0.5e1 * t827 - 2 * t830);
      D_V_y58KN_3_3 = t409 * t406 * (2 * D_V_y58KN_2_3 * t123 * t121 - 256 * t138 * (-0.3e1 / 0.16e2 * t3 - 0.7e1 / 0.8e1 * t1) * t122 + 12 * t164 * (0.160e3 / 0.3e1 * t14 + x__1 * t766 + 0.112e3 / 0.3e1 * t24) * t122 + 40 * t218 * (0.32e2 / 0.5e1 * t31 * t178 + lambda__1 * (32 * t36 * t12 + 8 * g * t178 - 0.56e2 / 0.5e1 * u__1 * t779) - t179 * t167 - 0.27e2 / 0.5e1 * x__1 * t213 + 0.28e2 / 0.5e1 * u__1 * t114) * t122 + 80 * lambda__2 * c * (0.32e2 / 0.5e1 * t793 * t221 + 0.32e2 / 0.5e1 * t231 * t796 + t170 * (8 * t188 * y__2 - t801 + t803) * ell + lambda__1 * c * (y__2 * (-0.3e1 / 0.5e1 * x__1 * t265 - 2 * t84 * t809) + 5 * (-0.54e2 / 0.25e2 * x__1 * c * t282 - 0.112e3 / 0.25e2 * t41 * t562) * ell) / 2 + y__2 * (-0.3e1 / 0.10e2 * t827 - t830) - 0.27e2 / 0.5e1 * t12 * t320 * t107) + 256 * t793 * t331 + 256 * t231 * x__1 * t263 + 40 * t170 * (t803 - t801) * t107 + 20 * lambda__1 * c * (t852 + 5 * c * (-0.54e2 / 0.25e2 * x__1 * t368 - 0.112e3 / 0.25e2 * u__1 * t562) * t107) + 20 * ell * (t852 - 0.54e2 / 0.5e1 * t208 * t796));
      t873 = 40 * t709 * t507;
      t875 = 6 * t522;
      t876 = 0.10e2 / 0.3e1 * t520 - t875;
      t880 = u__2 * c;
      t885 = v__1 * c;
      t891 = 0.8e1 / 0.3e1 * u__2 + 2 * v__1;
      D_V_y58KN_1_4 = t94 * t90 * (t873 + 12 * t8 * c * t876 - 20 * lambda__2 * c * (y__1 * (8 * t880 * lambda__1 + t595) + 0.16e2 / 0.5e1 * t30 * t885 + 0.18e2 / 0.5e1 * t552 + 0.9e1 / 0.10e2 * c * t891 * g) - 20 * t586 * (8 * t463 + t179) * ell - 64 * t30 * v__1 * t62 - 18 * c * t891 * t280);
      t920 = v__1 * t107;
      t921 = y__2 * t920;
      D_V_y58KN_2_4 = t120 * (t873 + 6 * t8 * c * (-t875 + 0.40e2 / 0.3e1 * t520) + 12 * lambda__2 * ell * t876 - 36 * t921);
      t960 = 2 * t443;
      t966 = v__1 * t114;
      t968 = t6 * t447;
      t974 = t222 * y__1;
      t978 = y__1 * ell;
      t980 = 0.63e2 / 0.256e3 * t34 + t978 / 2;
      t987 = v__1 * t880;
      t988 = 0.56e2 / 0.5e1 * t987;
      t989 = 0.63e2 / 0.20e2 * t280;
      t1001 = t960 - 0.21e2 / 0.4e1 * t280;
      t1004 = v__1 * t562;
      t1026 = t6 * t447 * t107;
      t1037 = y__1 * t34;
      t1044 = 0.6e1 / 0.5e1 * y__2 * t76;
      t1049 = 2 * t921 * t121;
      D_V_y58KN_3_4 = t409 * t406 * (2 * D_V_y58KN_2_4 * t123 * t121 - 256 * t138 * (-0.3e1 / 0.16e2 * t412 - 0.7e1 / 0.8e1 * t410) * t122 + 12 * t164 * (0.160e3 / 0.3e1 * t13 * t586 + y__1 * t766 + 0.35e2 / 0.2e1 * t423 + 0.112e3 / 0.3e1 * t425) * t122 + 40 * t218 * (0.32e2 / 0.5e1 * t31 * y__1 * t6 + 0.63e2 / 0.20e2 * t30 * t183 + lambda__1 * (0.19e2 / 0.2e1 * y__1 * c * (0.64e2 / 0.19e2 * t36 + 0.16e2 / 0.19e2 * t34) - 0.56e2 / 0.5e1 * v__1 * t779) + y__1 * (0.16e2 / 0.5e1 * t209 + t573 - t574) - y__2 * c * (t960 - 21 * t280) / 2 + 0.28e2 / 0.5e1 * t966 + 0.21e2 / 0.8e1 * t968) * t122 + 80 * lambda__2 * c * (0.32e2 / 0.5e1 * t974 * t221 + 0.64e2 / 0.5e1 * t231 * t980 * ell + t170 * (y__1 * (8 * t34 + 8 * t36) - t988 + t989) * ell + lambda__1 * c * (y__1 * (y__2 * (-0.3e1 / 0.5e1 * t260 + t616 - t617) - 0.54e2 / 0.5e1 * t282 * t62) - t85 * t1001 * ell + 0.63e2 / 0.20e2 * c * (-0.64e2 / 0.9e1 * t1004 + 0.5e1 / 0.3e1 * t448) * ell) / 2 + t586 * (0.3e1 / 0.5e1 * y__2 * t76 - 0.54e2 / 0.5e1 * t648) * ell / 2 - t85 * t1001 * t107 / 2 + 0.21e2 / 0.8e1 * t1026) + 256 * t974 * t331 + 512 * t231 * t980 * t107 + 40 * t170 * (8 * t1037 - t988 + t989) * t107 + 20 * lambda__1 * c * (t586 * ell * (t1044 + t680 - t681) - t1049 + 5 * c * (-0.112e3 / 0.25e2 * t1004 + t449) * t107) + 20 * ell * (t586 * (t1044 - t681) * ell - t1049 + 0.21e2 / 0.4e1 * t1026));
      t1068 = x__1 ^ 2;
      t1069 = t1068 * c;
      t1071 = y__1 ^ 2;
      t1073 = t1069 * y__2 + t1071 * t85;
      t1088 = u__1 ^ 2;
      t1089 = v__1 ^ 2;
      t1090 = t1088 + t1089;
      t1091 = t1090 * c;
      t1094 = t1068 * t38;
      t1095 = t67 * t12;
      t1096 = 8 * t1095;
      t1097 = 0.3e1 / 0.4e1 * t448;
      t1120 = g * t1068;
      t1121 = x__1 * t67;
      t1125 = (t1120 - 0.40e2 / 0.11e2 * t1121 + 0.15e2 / 0.44e2 * t447) * ell;
      D_V_y58KN_1_5 = t94 * t90 * (88 * t8 * c * t1073 - 20 * lambda__2 * c * (t1071 * (-0.48e2 / 0.5e1 * t437 - t35 - t37) + y__1 * (-0.31e2 / 0.5e1 * g * t71 + 8 * t987) - 0.48e2 / 0.5e1 * t30 * t1069 + 0.16e2 / 0.5e1 * lambda__1 * t1091 + t1094 + t1096 - t1097) + t1071 * (192 * t30 * t62 + 44 * t380) - 20 * t586 * (8 * t440 - 0.31e2 / 0.5e1 * lambda__1 * g) * ell + 192 * t62 * t30 * t1068 - 64 * lambda__1 * t1090 * t62 + 44 * c * t1125);
      t1130 = t1068 + t1071;
      t1131 = t6 * t1130;
      t1139 = t1068 * t107;
      t1141 = t107 * t1071 + t1139;
      D_V_y58KN_2_5 = t120 * (88 * c * t1130 * t36 * lambda__2 + 44 * t1131 * t8 * y__2 + 44 * t1141 * y__2);
      t1145 = v__3 * t163;
      t1155 = u__3 * t1071;
      t1159 = u__3 * t1068;
      t1161 = x__1 * u__1;
      t1166 = lambda__1 * t1130 * x__2 - t1155 / 64 + y__1 * (t513 - t515) - t1159 / 64 - 0.3e1 / 0.16e2 * v__2 * t1161 - 0.7e1 / 0.16e2 * t1090 * x__2;
      t1176 = ell * t1071 * x__2;
      t1178 = y__2 * v__1;
      t1179 = t1178 * t586;
      t1185 = -0.128e3 / 0.3e1 * t1176 + 0.160e3 / 0.3e1 * t1179 + 0.160e3 / 0.3e1 * (t141 - 0.4e1 / 0.5e1 * t143) * x__1;
      t1190 = t1068 * u__2;
      t1191 = v__1 * g;
      t1194 = c * (t1190 + 0.21e2 / 0.20e2 * t1191);
      t1202 = lambda__1 * t1185 + t1071 * t527 + y__1 * (t531 - t533 + t536) + 0.50e2 / 0.3e1 * y__2 * t1194 + t1068 * t153 + x__1 * (t157 + t160) + 0.56e2 / 0.3e1 * t1090 * t23;
      t1209 = y__1 * v__1;
      t1210 = t1161 + t1209;
      t1211 = t1210 * t6;
      t1214 = t1071 * u__2;
      t1217 = t6 * (t1190 + t1214 + 0.63e2 / 0.256e3 * t1191);
      t1220 = t1071 * t549;
      t1222 = 0.19e2 / 0.2e1 * y__1 * t558;
      t1224 = y__2 * t175 * t12;
      t1225 = x__2 * t1068;
      t1227 = 0.32e2 / 0.5e1 * t107 * t1225;
      t1229 = 8 * t241 * t178;
      t1231 = 0.28e2 / 0.5e1 * t1090 * t779;
      t1237 = ell * t1068;
      t1238 = u__2 * t1237;
      t1240 = v__3 * t1091;
      t1241 = v__1 * t280;
      t1244 = c * (-20 * t1238 + t1240 - 21 * t1241);
      t1258 = 0.32e2 / 0.5e1 * t31 * t1211 + 0.64e2 / 0.5e1 * t30 * t1217 + lambda__1 * (t1220 + t1222 + t1224 - t1227 + t1229 - t1231) + t1071 * t565 + y__1 * (t570 + t572 + t576 - t578) - y__2 * t1244 / 2 + t1068 * t205 - 0.27e2 / 0.5e1 * x__1 * t214 + 0.14e2 / 0.5e1 * t1088 * t114 + 0.14e2 / 0.5e1 * t1089 * t114 + 0.63e2 / 0.40e2 * u__2 * t968 + 0.21e2 / 0.8e1 * v__1 * t968;
      t1270 = t31 * t1210;
      t1273 = u__2 * t1069;
      t1274 = t1071 * c;
      t1275 = u__2 * t1274;
      t1276 = v__1 * t34;
      t1278 = u__1 * t188;
      t1280 = v__1 * t978;
      t1282 = t1273 + t1275 + 0.63e2 / 0.256e3 * t1276 + t1278 / 2 + t1280 / 2;
      t1283 = t1282 * ell;
      t1286 = t1071 * t596;
      t1289 = t235 * x__1;
      t1291 = t1088 * c;
      t1293 = 0.28e2 / 0.5e1 * u__2 * t1291;
      t1295 = 0.28e2 / 0.5e1 * t1089 * t880;
      t1296 = 0.64e2 / 0.5e1 * t1238;
      t1297 = 0.63e2 / 0.20e2 * t1241;
      t1299 = 8 * t241 * t12;
      t1301 = (t1286 + y__1 * (t599 + t600) + y__2 * t1289 - t1293 - t1295 + t1296 + t1297 + t1299) * ell;
      t1302 = lambda__1 * t6;
      t1309 = t1068 * t257 / 10;
      t1311 = 0.3e1 / 0.5e1 * x__1 * t266;
      t1313 = t1240 - 0.21e2 / 0.4e1 * t1241;
      t1315 = c * t1313 * ell;
      t1318 = t1068 * t276;
      t1321 = t1089 * t562;
      t1323 = v__1 * t448;
      t1325 = t1088 * ell;
      t1326 = 0.32e2 / 0.9e1 * t1325;
      t1328 = (t448 - t1326) * u__2;
      t1336 = c * (t1071 * t608 + y__1 * (t621 - t629) + y__2 * (t1309 - t1311 - t1315) + 5 * (t1318 - 0.54e2 / 0.25e2 * t12 * t283 + 0.63e2 / 0.100e3 * c * (-0.32e2 / 0.9e1 * t1321 + 0.5e1 / 0.3e1 * t1323 + t1328)) * ell);
      t1344 = t1282 * t107;
      t1350 = y__2 * t1068;
      t1353 = (t1286 + 0.19e2 / 0.2e1 * y__1 * t555 * t34 + t1350 * t16 + t1299 - t1293 - t1295 + t1296 + t1297) * t107;
      t1358 = t1068 * t359;
      t1360 = x__1 * t315 * t62;
      t1361 = 0.6e1 / 0.5e1 * t1360;
      t1362 = t1090 * t107;
      t1363 = t1362 * t121;
      t1377 = c * (t1071 * t671 + t586 * t687 + y__2 * (t1358 - t1361 - t1363) + 5 * c * (t365 * t1069 - 0.54e2 / 0.25e2 * x__1 * t369 - 0.56e2 / 0.25e2 * t1321 + 0.21e2 / 0.20e2 * t1323 + 0.63e2 / 0.100e3 * t1328) * t107);
      t1379 = 2 * V_y58KN_2 * t119 * t1145 + 2 * D_V_y58KN_2_5 * t123 * t121 - 256 * t137 * t1166 * t136 * c - 256 * t137 * t136 * t1130 * x__2 * t122 + 12 * t9 * t1202 * t136 + 12 * t164 * t1185 * t122 + 40 * t8 * t1258 * t163 + 40 * t218 * (0.96e2 / 0.5e1 * t30 * t1211 + 0.128e3 / 0.5e1 * lambda__1 * t1217 + t1220 + t1222 + t1224 - t1227 + t1229 - t1231) * t122 + 80 * lambda__2 * c * (0.128e3 / 0.5e1 * t1270 * t221 + 0.192e3 / 0.5e1 * t170 * t1283 + 2 * t1302 * t1301 + t1336 / 2) + 1024 * t1270 * t331 + 1536 * t170 * t1344 + 80 * t1302 * t1353 + 20 * t1377;
      t1385 = t1166 * t122;
      t1388 = t1202 * t122;
      t1391 = t1258 * t122;
      t1394 = t222 * t1210;
      t1405 = x__3 * t1068;
      t1406 = t295 * t1405;
      t1408 = t1068 * t311;
      t1409 = 0.3e1 / 0.10e2 * t1360;
      t1412 = c * t1313 * t107 / 2;
      t1419 = (u__2 + 0.5e1 / 0.3e1 * v__1) * t447;
      t1426 = c * (0.32e2 / 0.5e1 * t1394 * t221 + 0.64e2 / 0.5e1 * t231 * t1283 + t170 * t1301 + lambda__1 * t1336 / 2 + t1071 * t640 + t586 * t652 / 2 - t1406 / 40 + y__2 * (t1408 - t1409 - t1412) + 0.5e1 / 0.2e1 * (t1318 - 0.54e2 / 0.25e2 * t12 * t321 + 0.63e2 / 0.100e3 * t6 * t1419) * t107);
      t1440 = t1068 * t389;
      t1455 = t90 * (2 * V_y58KN_2 * t123 * t121 - 256 * t138 * t1385 + 12 * t164 * t1388 + 40 * t218 * t1391 + 80 * lambda__2 * t1426 + 256 * t1394 * t331 + 512 * t231 * t1344 + 40 * t170 * t1353 + 20 * lambda__1 * t1377 + 20 * ell * (t1071 * t695 + t586 * t702 - t1406 / 10 + y__2 * (t1440 - t1361 - t1363) + 5 * t6 * (u__2 * t1120 - 0.54e2 / 0.25e2 * t46 * t1161 + 0.63e2 / 0.100e3 * t1419) * t107));
      t1456 = t122 ^ 2;
      D_V_y58KN_3_5 = t409 * t406 * t1379 - 0.1e1 / t1456 * t120 * t1455;
      t1463 = 40 * t9 * t1210 * t6;
      t1464 = t1071 * t16;
      t1465 = 0.10e2 / 0.3e1 * t1280;
      t1466 = t1068 * t16;
      t1472 = ell * v__3;
      D_V_y58KN_1_6 = t94 * t90 * (t1463 + 12 * t8 * c * (t1464 + t1465 + t1466 + 0.10e2 / 0.3e1 * t1278) - 20 * lambda__2 * c * (-0.3e1 / 0.5e1 * t1068 * t1472 - 0.3e1 / 0.5e1 * t1071 * t1472));
      D_V_y58KN_2_6 = t120 * (t1463 + 6 * t8 * c * (t1464 + 0.40e2 / 0.3e1 * t1280 + x__1 * (t173 + 0.40e2 / 0.3e1 * t158)) + 12 * lambda__2 * ell * (t1464 + t1465 + x__1 * (t173 + 0.10e2 / 0.3e1 * t158)) + 6 * t1130 * v__3 * t107);
      t1505 = y__1 * g;
      t1513 = t1071 * ell;
      t1514 = -t1237 - t1513;
      t1521 = t1161 * t16;
      t1523 = t1090 * ell;
      t1532 = 0.2e1 / 0.5e1 * t314;
      t1540 = t735 * t84;
      t1550 = 0.2e1 / 0.25e2 * t314;
      t1554 = c * t107;
      t1555 = v__1 * v__3;
      t1561 = t1068 * t1550 + 0.8e1 / 0.25e2 * t1540;
      t1568 = u__2 * x__3;
      t1576 = v__1 * t586;
      t1579 = t1350 * t1568;
      t1587 = t1071 * y__2;
      D_V_y58KN_3_6 = t409 * t406 * (2 * D_V_y58KN_2_6 * t123 * t121 - 256 * t138 * (lambda__1 * t1130 + 0.31e2 / 0.64e2 * t1505 - 0.7e1 / 0.16e2 * t1088 - 0.7e1 / 0.16e2 * t1089) * t122 + 12 * t164 * (0.128e3 / 0.3e1 * lambda__1 * t1514 + y__1 * (0.16e2 / 0.3e1 * t443 - 0.62e2 / 0.3e1 * t280) + 0.16e2 / 0.3e1 * t1521 + 0.56e2 / 0.3e1 * t1523) * t122 + 40 * t218 * (-0.32e2 / 0.5e1 * lambda__1 * t1141 + t1071 * t1532 + y__1 * (0.16e2 / 0.5e1 * t534 * t16 - 0.31e2 / 0.10e2 * t496) + t1068 * t1532 + 0.16e2 / 0.5e1 * t1540 + 0.14e2 / 0.5e1 * t1088 * t107 + 0.14e2 / 0.5e1 * t1089 * t107) * t122 + 80 * lambda__2 * c * (lambda__1 * c * (5 * t1071 * t1550 * ell + 0.8e1 / 0.5e1 * y__1 * t1555 * t1554 + 5 * t1561 * ell) / 2 + t1071 * (-y__2 * t1568 / 40 + 0.5e1 / 0.2e1 * t1550 * t107) + 0.4e1 / 0.5e1 * t1576 * v__3 * t263 - t1579 / 40 + 0.5e1 / 0.2e1 * t1561 * t107) + 20 * ell * (-t1587 * t1568 / 10 - t1579 / 10));
      t1605 = lambda__1 * ell;
      t1617 = ell * t586;
      D_V_y58KN_1_7 = t94 * t90 * (12 * t8 * c * (0.22e2 / 0.3e1 * t1071 * t71 + 0.7e1 / 0.2e1 * t1037 + 0.22e2 / 0.3e1 * lambda__1 * t1069 - 3 * t1091) - 20 * lambda__2 * c * (-0.22e2 / 0.5e1 * t1071 * t1605 + y__1 * t445 - 0.22e2 / 0.5e1 * lambda__1 * t1237 + t1521 + 0.9e1 / 0.5e1 * t1523) + t1071 * t77 - 20 * t1617 * t1555 + t1068 * t77 - 20 * t1540);
      t1629 = lambda__1 * t1068 + t1071 * lambda__1 + 0.21e2 / 0.44e2 * t1505 - 0.9e1 / 0.22e2 * t1088 - 0.9e1 / 0.22e2 * t1089;
      t1633 = c * t1629;
      t1637 = t1071 * t110;
      t1639 = 21 * y__1 * t496;
      t1640 = t1068 * t110;
      t1641 = 18 * t1362;
      D_V_y58KN_2_7 = t120 * (88 * ell * t1633 * lambda__2 + 44 * t1629 * t6 * t8 + t1637 + t1639 + t1640 - t1641);
      t1662 = t1214 * t62;
      t1671 = 8 * t1280;
      t1682 = y__2 * x__3;
      t1683 = v__2 * t1682;
      t1691 = y__2 * v__2 * t1405;
      t1703 = t586 * ell * t678;
      D_V_y58KN_3_7 = t409 * t406 * (2 * D_V_y58KN_2_7 * t123 * t121 + 12 * t164 * (lambda__1 * (0.160e3 / 0.3e1 * u__1 * t12 + 0.160e3 / 0.3e1 * t1576) + 0.50e2 / 0.3e1 * t1275 + 0.50e2 / 0.3e1 * t1194) * t122 + 40 * t218 * (lambda__1 * (t1071 * t121 + t12 * t175 + 32 * t534 * t586) + 10 * t1662 + t1505 * t121 / 2 - t1244 / 2) * t122 + 80 * lambda__2 * c * (t170 * (t1464 + t1671 + t1289) * ell + lambda__1 * c * (t1071 * t257 / 10 + y__1 * t620 + t1309 - t1311 - t1315) / 2 + t1071 * (-t1683 / 20 + t301 + t306 + t310) + t586 * t646 * ell / 2 - t1691 / 20 + t1408 - t1409 - t1412) + 40 * t170 * (t1466 + t1464) * t107 + 20 * lambda__1 * c * (t1071 * t359 + t1358 - t1361 - t1363 + t1703) + 20 * ell * (t1071 * (-t1683 / 5 + t383 + t388) + t1703 - t1691 / 5 + t1440 - t1361 - t1363));
      D_V_y58KN_1_8 = t94 * t90 * (-20 * lambda__2 * c * (0.14e2 / 0.5e1 * t1275 + 8 * t1209 * t71 + 8 * u__1 * lambda__1 * t12 + 0.14e2 / 0.5e1 * t1273 + 0.12e2 / 0.5e1 * t1276) - 56 * t1662 - 160 * t1576 * t1605 - 160 * lambda__1 * t41 * t188 - 56 * t1190 * t62 - 48 * t885 * t280);
      D_V_y58KN_2_8 = 0;
      t1749 = t1090 * t6;
      t1761 = t1068 * t183;
      t1763 = t1161 * t779;
      t1770 = t1069 + t1274;
      t1780 = 0.64e2 / 0.5e1 * t1513 + 0.19e2 / 0.2e1 * t1037 - 0.28e2 / 0.5e1 * t1291 - 0.28e2 / 0.5e1 * t1089 * c + 0.64e2 / 0.5e1 * t1237;
      t1796 = 0.108e3 / 0.25e2 * t1763;
      t1797 = t1089 * ell;
      t1810 = g * t829;
      t1815 = y__1 * t440 * t829;
      D_V_y58KN_3_8 = t409 * t406 * (200 * t164 * t1073 * t122 + 40 * t218 * (0.64e2 / 0.5e1 * t30 * t1131 + lambda__1 * (0.19e2 / 0.2e1 * y__1 * t183 - 0.28e2 / 0.5e1 * t1749) + t1071 * (10 * t86 + 0.5e1 / 0.2e1 * t183) - 0.54e2 / 0.5e1 * t1209 * t779 + 10 * t85 * t1237 + 0.5e1 / 0.2e1 * t1761 - 0.54e2 / 0.5e1 * t1763 + 0.63e2 / 0.40e2 * t968) * t122 + 80 * lambda__2 * c * (0.64e2 / 0.5e1 * t231 * t1770 * ell + t170 * t1780 * ell + lambda__1 * c * (t1071 * (5 * g * t809 + 5 * t1554 * y__2) - 0.54e2 / 0.5e1 * y__1 * (2 * t987 - 0.95e2 / 0.54e2 * t280) * t62 + 5 * t1350 * t1554 + 5 * (t1761 - t1796 + 0.63e2 / 0.100e3 * c * (-0.32e2 / 0.9e1 * t1797 + t448 - t1326)) * ell) / 2 + t1071 * (y__2 * t305 + 0.5e1 / 0.2e1 * t1810) - 0.54e2 / 0.5e1 * t1815 + y__2 * t1068 * t305 + 0.5e1 / 0.2e1 * (t1761 - t1796 + 0.63e2 / 0.100e3 * t968) * t107) + 512 * t231 * t1770 * t107 + 40 * t170 * t1780 * t107 + 20 * lambda__1 * c * (5 * t1071 * g * t829 + t586 * ell * (-0.108e3 / 0.5e1 * t440 * t62 + 19 * t496) + 5 * c * (g * t1069 - 0.108e3 / 0.25e2 * t1095 - 0.56e2 / 0.25e2 * t1797 + 0.63e2 / 0.100e3 * t448 - 0.56e2 / 0.25e2 * t1325) * t107) + 20 * ell * (t1071 * (-y__2 * t200 / 10 + 5 * t1810) - 0.108e3 / 0.5e1 * t1815 - t1350 * t200 / 10 + 5 * t6 * (t1120 - 0.108e3 / 0.25e2 * t1121 + 0.63e2 / 0.100e3 * t447) * t107));
      t1875 = 4 * t9 * t1131;
      t1876 = -t1514;
      t1877 = t1876 / 3;
      D_V_y58KN_1_9 = t94 * t90 * (12 * c * t1877 * t8 + t1875);
      D_V_y58KN_2_9 = t120 * (8 * c * t1876 * t8 + 12 * ell * t1877 * lambda__2 + t1875);
      t1916 = t1068 * v__3;
      t1918 = t1071 * v__3;
      t1930 = t294 * t1405;
      D_V_y58KN_3_9 = t409 * t406 * (2 * D_V_y58KN_2_9 * t123 * t121 + 48 * t138 * t1210 * t122 + 12 * t164 * (t1466 + t1464 + 8 * t1278 + t1671) * t122 + 40 * t218 * (0.3e1 / 0.5e1 * t1513 * t16 + 0.6e1 / 0.5e1 * y__1 * t920 + 0.3e1 / 0.5e1 * t1237 * t16 + 0.6e1 / 0.5e1 * x__1 * t750) * t122 + 80 * lambda__2 * c * (lambda__1 * c * (0.3e1 / 0.10e2 * t1916 * t1554 + 0.3e1 / 0.10e2 * t1918 * t1554) / 2 + t1071 * (-t634 / 40 + 0.3e1 / 0.20e2 * v__3 * t303) - t1930 / 40 + 0.3e1 / 0.20e2 * t1916 * t303) + 20 * ell * (-t1071 * t634 / 10 - t1930 / 10));
      t1951 = t6 * (t1071 * v__2 + 10 * y__1 * t410 + (t2 + t3) * x__1);
      t1952 = t8 * t1951;
      t1965 = c * (t1071 * t420 + y__1 * (t424 + t426) + 0.22e2 / 0.3e1 * t13 * t1069 + t1068 * t20 + 0.10e2 / 0.3e1 * t158 * t127 - 3 * t1090 * t85);
      t1983 = t1088 + 0.8e1 / 0.3e1 * t440 + t1089;
      t1988 = c * (t1071 * t434 + y__1 * (-t439 + t442 + t446 - t449) - 0.16e2 / 0.5e1 * t31 * t1069 + 0.8e1 / 0.5e1 * t30 * t1091 + lambda__1 * (t1094 + t1096 - t1097) + t1068 * t52 + u__1 * t237 * t16 + 0.9e1 / 0.5e1 * y__2 * t1523 + 0.9e1 / 0.10e2 * c * t1983 * g);
      t1994 = 4 * t9 * t1951;
      t2017 = -18 * c * t1983 * t280 + 64 * t1068 * t31 * t62 - 32 * t1090 * t30 * t62 - 20 * t735 * t84 * y__2 + t1068 * t81 + t1071 * t458 + 44 * t1125 * t71 + 12 * t1965 * t8 - 20 * t1988 * lambda__2 - 20 * t469 * t586 + t1994;
      D_V_y58KN_1_10 = t94 * t90 * (24 * t1965 * lambda__2 + 12 * t1952 - 20 * t1988) - t120 * t2017;
      t2020 = 0.22e2 / 0.3e1 * y__2 * t1633;
      t2022 = t534 * t507;
      t2027 = c * (t2020 + t1071 * t96 + 0.40e2 / 0.3e1 * t2022 + x__1 * (t97 + t99));
      t2034 = ell * (t2020 + t1071 * t20 + 0.10e2 / 0.3e1 * t2022 + x__1 * (t21 + t25));
      t2049 = 0.1e1 / t119 / t93;
      D_V_y58KN_2_10 = t120 * (12 * t2027 * lambda__2 + 12 * t1952 + 12 * t2034) - 2 * c * t2049 * (t1994 + 6 * t8 * t2027 + 12 * lambda__2 * t2034 + y__2 * (t1637 + t1639 + t1640 - t1641) + 6 * t1130 * v__3 * t114);
      D_V_y58KN_3_10 = t409 * t406 * (4 * t1145 * t122 * t93 * V_y58KN_2 + 2 * t121 * t123 * D_V_y58KN_2_10 - 1024 * t136 * t1385 * t9 + 36 * t1388 * t163 * t8 + 80 * t1391 * t6 * lambda__2 + 80 * t1426) - 2 * t408 * t2049 * t1455;
      D_V_y58KN_1_11 = t94 * t90 * (-2 * t1155 * y__2 - 2 * t1159 * y__2);
      D_V_y58KN_2_11 = t120 * y__2 * (t1159 + t1155);
      t2086 = x__2 * u__3;
      t2094 = lambda__3 * u__3;
      t2122 = -t384 / 40 + t151 * t352 / 20;
      t2124 = u__3 * t107;
      t2130 = y__1 * t85;
      t2131 = t2130 * v__1 * t151;
      t2134 = v__2 * t294 * t1068;
      t2139 = u__1 * u__3 * x__1 * t62;
      t2151 = 0.6e1 / 0.5e1 * t2131;
      t2154 = 0.6e1 / 0.5e1 * t2139;
      t2164 = -t384 / 10 + t356 / 5;
      D_V_y58KN_3_11 = t409 * t406 * (2 * D_V_y58KN_2_11 * t123 * t121 + 40 * t218 * (0.2e1 / 0.5e1 * t1068 * t2086 + 0.2e1 / 0.5e1 * t1071 * t2086) * t122 + 80 * lambda__2 * c * (lambda__1 * c * (t1071 * (t85 * t2094 / 10 + 0.2e1 / 0.5e1 * x__2 * t151) - 0.3e1 / 0.5e1 * u__3 * y__2 * y__1 * t885 + y__2 * (t1069 * t2094 / 10 - 0.3e1 / 0.5e1 * t1161 * c * u__3) + 0.2e1 / 0.5e1 * t1225 * t151) / 2 + t1071 * (-t295 / 40 + y__2 * t2122 + x__2 * t2124 / 5) - 0.3e1 / 0.10e2 * t2131 - t2134 / 40 + y__2 * (t1068 * t2122 - 0.3e1 / 0.10e2 * t2139) + t1225 * t2124 / 5) + 20 * lambda__1 * c * (t1587 * t356 / 5 - t2151 + y__2 * (t1068 * t356 / 5 - t2154)) + 20 * ell * (t1071 * (-t295 / 10 + y__2 * t2164) - t2151 - t2134 / 10 + y__2 * (t1068 * t2164 - t2154)));
      D_V_y58KN_1_12 = t94 * t90 * (-2 * t1916 * y__2 - 2 * t1918 * y__2);
      D_V_y58KN_2_12 = t120 * y__2 * (t1916 + t1918);
      t2194 = lambda__3 * v__3;
      t2220 = t1617 * t462;
      t2237 = v__3 * (t353 / 5 - y__3 / 5) - t74 / 10;
      t2245 = t1071 * y__2 * t2237 - 0.6e1 / 0.5e1 * t2220 + y__2 * (t1068 * t2237 - 0.6e1 / 0.5e1 * t1540);
      D_V_y58KN_3_12 = t409 * t406 * (2 * D_V_y58KN_2_12 * t123 * t121 + 40 * t218 * (0.2e1 / 0.5e1 * t1068 * t49 + 0.2e1 / 0.5e1 * t1071 * t49) * t122 + 80 * lambda__2 * c * (lambda__1 * c * (t1071 * (t85 * t2194 / 10 + 0.2e1 / 0.5e1 * t50) - 0.3e1 / 0.5e1 * y__1 * t1178 * t16 + y__2 * (t1069 * t2194 / 10 - 0.3e1 / 0.5e1 * t1521) + 0.2e1 / 0.5e1 * t1916 * t23) / 2 + t1071 * (t595 * t307 / 20 + v__3 * t114 / 5) - 0.3e1 / 0.10e2 * t2220 + y__2 * (t1466 * t307 / 20 - 0.3e1 / 0.10e2 * t1540) + t1139 * t49 / 5) + 20 * lambda__1 * c * t2245 + 20 * ell * t2245);
      t2254 = t1071 * x__3;
      D_V_y58KN_1_13 = t94 * t90 * (-2 * t1405 * y__2 - 2 * t2254 * y__2);
      D_V_y58KN_2_13 = t120 * y__2 * (t1405 + t2254);
      t2275 = 0.2e1 / 0.5e1 * t200 + t107 / 10;
      t2312 = t2130 * ell * x__3 * v__1;
      t2319 = u__1 * x__3 * x__1 * t62;
      t2329 = x__3 * t355;
      t2338 = t1587 * t2329 / 5 - 0.6e1 / 0.5e1 * t2312 + y__2 * (t1068 * t2329 / 5 - 0.6e1 / 0.5e1 * t2319);
      D_V_y58KN_3_13 = t409 * t406 * (2 * D_V_y58KN_2_13 * t123 * t121 + 4 * t138 * t1130 * t122 + 8 * t164 * t1876 * t122 + 40 * t218 * (t1068 * t2275 + t1071 * t2275) * t122 + 80 * lambda__2 * c * (lambda__1 * c * (t1071 * (t85 * t252 / 10 + 0.2e1 / 0.5e1 * x__3 * t23) - 0.3e1 / 0.5e1 * y__1 * t1682 * t885 + y__2 * (t1069 * t252 / 10 - 0.3e1 / 0.5e1 * t1161 * t261) + 0.2e1 / 0.5e1 * t1405 * t23) / 2 + t1071 * (y__2 * t307 * t261 / 20 + x__3 * t114 / 5) - 0.3e1 / 0.10e2 * t2312 + y__2 * (t1068 * t307 * t261 / 20 - 0.3e1 / 0.10e2 * t2319) + t1405 * t114 / 5) + 20 * lambda__1 * c * t2338 + 20 * ell * t2338);
      t2347 = x__2 * c;
      t2349 = t1069 * x__2 + t1071 * t2347;
      t2351 = t8 * c * t2349;
      t2361 = y__3 * y__2;
      D_V_y58KN_1_14 = t94 * t90 * (12 * t2351 - 20 * lambda__2 * c * (-0.3e1 / 0.5e1 * t1176 + t1179 - 0.3e1 / 0.5e1 * t1068 * t23 + t55 * t12) - 2 * t1071 * t2361 - 20 * t1617 * t1178 - 2 * t1068 * t2361 - 20 * t735 * t55);
      D_V_y58KN_2_14 = t120 * (6 * t2351 + 12 * lambda__2 * ell * t2349 + y__2 * (t1068 * y__3 + t1071 * y__3) + 6 * t1130 * t114);
      t2390 = v__2 * c;
      t2418 = t1278 * t2347;
      t2426 = c * t250;
      t2447 = t1068 * t272 + 0.8e1 / 0.25e2 * t2418;
      t2470 = u__1 * y__3 * x__1 * t62;
      t2472 = t1090 * t829;
      t2488 = t1617 * y__2 * t675;
      t2490 = 0.6e1 / 0.5e1 * t2470;
      D_V_y58KN_3_14 = t409 * t406 * (2 * V_y58KN_2 * t122 * t119 * t6 + 2 * D_V_y58KN_2_14 * t123 * t121 + 12 * t164 * (t1071 * t2390 + 0.16e2 / 0.3e1 * t1209 * t2347 + t1068 * t2390 + 0.16e2 / 0.3e1 * t1161 * t2347) * t122 + 40 * t218 * (lambda__1 * (t1068 * t6 * y__2 + t1071 * t6 * y__2) + t1071 * t196 + y__1 * (g * y__2 * t6 / 2 + 0.16e2 / 0.5e1 * t534 * t2347) - y__2 * t1749 / 2 + t1068 * t196 + 0.16e2 / 0.5e1 * t2418) * t122 + 80 * lambda__2 * c * (t170 * t1073 * ell + lambda__1 * c * (t1071 * (y__2 * t2426 / 10 + 5 * t272 * ell) + y__1 * (y__2 * t614 + 0.8e1 / 0.5e1 * t410 * t1554) + y__2 * (t1068 * t2426 / 10 - 0.3e1 / 0.5e1 * t1161 * t344 - t1090 * t809) + 5 * t2447 * ell) / 2 + t1071 * (t85 * t299 / 20 + 0.5e1 / 0.2e1 * t272 * t107) + t586 * (y__2 * t613 + 0.8e1 / 0.5e1 * t966) * ell / 2 + y__2 * (t1069 * t299 / 20 - 0.3e1 / 0.10e2 * t2470 - t2472 / 2) + 0.5e1 / 0.2e1 * t2447 * t107) + 40 * t170 * t1073 * t107 + 20 * lambda__1 * c * (t1071 * y__2 * t350 + t2488 + y__2 * (t1068 * t350 - t2472 - t2490)) + 20 * ell * (t1071 * y__2 * t382 + t2488 + y__2 * (t1068 * t382 - t2472 - t2490)));
      D_V_y58KN_1_15 = 0;
      D_V_y58KN_2_15 = 0;
      t2507 = c * t314;
      t2518 = ell * t16 * y__3 + t151 * t261;
      t2519 = t2518 / 20;
      t2528 = t2518 / 5;
      t2533 = t1068 * t2528 * y__2 + t1071 * t2528 * y__2;
      D_V_y58KN_3_15 = t409 * t406 * (80 * lambda__2 * c * (lambda__1 * c * (t1350 * t2507 / 10 + t1587 * t2507 / 10) / 2 + t1071 * y__2 * t2519 + y__2 * t1068 * t2519) + 20 * lambda__1 * c * t2533 + 20 * ell * t2533);

      % Store outputs
      out_Jv_x = zeros(3, 15);
      out_Jv_x(1, 1) = D_V_y58KN_1_1;
      out_Jv_x(2, 1) = D_V_y58KN_2_1;
      out_Jv_x(3, 1) = D_V_y58KN_3_1;
      out_Jv_x(1, 2) = D_V_y58KN_1_2;
      out_Jv_x(2, 2) = D_V_y58KN_2_2;
      out_Jv_x(3, 2) = D_V_y58KN_3_2;
      out_Jv_x(1, 3) = D_V_y58KN_1_3;
      out_Jv_x(2, 3) = D_V_y58KN_2_3;
      out_Jv_x(3, 3) = D_V_y58KN_3_3;
      out_Jv_x(1, 4) = D_V_y58KN_1_4;
      out_Jv_x(2, 4) = D_V_y58KN_2_4;
      out_Jv_x(3, 4) = D_V_y58KN_3_4;
      out_Jv_x(1, 5) = D_V_y58KN_1_5;
      out_Jv_x(2, 5) = D_V_y58KN_2_5;
      out_Jv_x(3, 5) = D_V_y58KN_3_5;
      out_Jv_x(1, 6) = D_V_y58KN_1_6;
      out_Jv_x(2, 6) = D_V_y58KN_2_6;
      out_Jv_x(3, 6) = D_V_y58KN_3_6;
      out_Jv_x(1, 7) = D_V_y58KN_1_7;
      out_Jv_x(2, 7) = D_V_y58KN_2_7;
      out_Jv_x(3, 7) = D_V_y58KN_3_7;
      out_Jv_x(1, 8) = D_V_y58KN_1_8;
      out_Jv_x(2, 8) = D_V_y58KN_2_8;
      out_Jv_x(3, 8) = D_V_y58KN_3_8;
      out_Jv_x(1, 9) = D_V_y58KN_1_9;
      out_Jv_x(2, 9) = D_V_y58KN_2_9;
      out_Jv_x(3, 9) = D_V_y58KN_3_9;
      out_Jv_x(1, 10) = D_V_y58KN_1_10;
      out_Jv_x(2, 10) = D_V_y58KN_2_10;
      out_Jv_x(3, 10) = D_V_y58KN_3_10;
      out_Jv_x(1, 11) = D_V_y58KN_1_11;
      out_Jv_x(2, 11) = D_V_y58KN_2_11;
      out_Jv_x(3, 11) = D_V_y58KN_3_11;
      out_Jv_x(1, 12) = D_V_y58KN_1_12;
      out_Jv_x(2, 12) = D_V_y58KN_2_12;
      out_Jv_x(3, 12) = D_V_y58KN_3_12;
      out_Jv_x(1, 13) = D_V_y58KN_1_13;
      out_Jv_x(2, 13) = D_V_y58KN_2_13;
      out_Jv_x(3, 13) = D_V_y58KN_3_13;
      out_Jv_x(1, 14) = D_V_y58KN_1_14;
      out_Jv_x(2, 14) = D_V_y58KN_2_14;
      out_Jv_x(3, 14) = D_V_y58KN_3_14;
      out_Jv_x(1, 15) = D_V_y58KN_1_15;
      out_Jv_x(2, 15) = D_V_y58KN_2_15;
      out_Jv_x(3, 15) = D_V_y58KN_3_15;
    end % Jv_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_h = h( this, in_1, in_2, ~ )
      % Calculate the residual of the invariants h.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      lambda__2 = in_1(10);
      x__3 = in_1(11);
      y__3 = in_1(12);
      v__3 = in_1(14);
      V_y58KN_1 = in_2(1);
      V_y58KN_3 = in_2(3);

      % Evaluate function
      t1 = ell ^ 2;
      t2 = x__1 ^ 2;
      t3 = y__1 ^ 2;
      out_1 = t1 - t2 - t3;
      t4 = c ^ 2;
      t5 = lambda__1 ^ 2;
      t7 = c * ell;
      t10 = x__2 ^ 2;
      t11 = y__2 ^ 2;
      out_2 = t5 * t4 + 2 * lambda__1 * t7 + t1 - t10 - t11;
      t12 = lambda__2 ^ 2;
      t16 = x__3 ^ 2;
      t17 = y__3 ^ 2;
      out_3 = t12 * t4 + 2 * lambda__2 * t7 + t1 - t16 - t17;
      out_4 = 2 * x__1 * u__1 + 2 * y__1 * v__1;
      t25 = y__1 * g;
      t27 = u__1 ^ 2;
      t29 = v__1 ^ 2;
      out_5 = 4 * lambda__1 * t2 + 4 * t3 * lambda__1 + 2 * t25 - 2 * t27 - 2 * t29;
      t39 = -t2 - t3;
      out_6 = (-16 * y__1 * lambda__1 - 6 * g) * v__1 - 16 * x__1 * lambda__1 * u__1 + 4 * u__2 * t39;
      t49 = y__2 * lambda__2;
      t52 = -8 * t49 - 4 * g;
      t61 = g ^ 2;
      out_7 = 32 * t5 * t39 + lambda__1 * (-28 * t25 + 16 * t27 + 16 * t29) + t3 * t52 + 24 * v__1 * u__2 * y__1 + t2 * t52 + 24 * u__1 * u__2 * x__1 - 6 * t61;
      t69 = -16 * t12 * x__2 + 112 * u__2 * lambda__1 + 8 * v__3 * y__2;
      t75 = 2 * t49;
      out_8 = t3 * t69 + y__1 * (128 * v__1 * t5 + 52 * g * u__2 + 32 * (t75 + g) * v__1) + t2 * t69 + 32 * x__1 * (t75 + 4 * t5 + g) * u__1 + 60 * v__1 * lambda__1 * g - 40 * (t27 + t29) * u__2;
      out_9 = 4 * V_y58KN_1;
      out_10 = -4 * V_y58KN_3;

      % Store outputs
      out_h = zeros(10, 1);
      out_h(1) = out_1;
      out_h(2) = out_2;
      out_h(3) = out_3;
      out_h(4) = out_4;
      out_h(5) = out_5;
      out_h(6) = out_6;
      out_h(7) = out_7;
      out_h(8) = out_8;
      out_h(9) = out_9;
      out_h(10) = out_10;
    end % h
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jh_x = Jh_x( this, in_1, ~, ~ )
      % Calculate the Jacobian of h with respect to x.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      lambda__2 = in_1(10);
      x__3 = in_1(11);
      y__3 = in_1(12);
      v__3 = in_1(14);

      % Evaluate function
      t1 = 2 * x__1;
      out_1_1 = -t1;
      out_4_1 = 2 * u__1;
      t2 = x__1 * lambda__1;
      out_5_1 = 8 * t2;
      t3 = u__1 * lambda__1;
      t5 = u__2 * x__1;
      out_6_1 = -16 * t3 - 8 * t5;
      t7 = lambda__1 ^ 2;
      t10 = y__2 * lambda__2;
      t13 = -8 * t10 - 4 * g;
      t16 = u__1 * u__2;
      out_7_1 = 2 * x__1 * t13 - 64 * t7 * x__1 + 24 * t16;
      t18 = lambda__2 ^ 2;
      t25 = -16 * t18 * x__2 + 112 * u__2 * lambda__1 + 8 * v__3 * y__2;
      t28 = 2 * t10;
      t30 = t28 + 4 * t7 + g;
      out_8_1 = 2 * x__1 * t25 + 32 * t30 * u__1;
      t33 = 2 * y__1;
      out_1_2 = -t33;
      out_4_2 = 2 * v__1;
      t34 = y__1 * lambda__1;
      out_5_2 = 8 * t34 + 2 * g;
      t37 = u__2 * y__1;
      t39 = v__1 * lambda__1;
      out_6_2 = -8 * t37 - 16 * t39;
      t43 = lambda__1 * g;
      t47 = u__2 * v__1;
      out_7_2 = 2 * y__1 * t13 - 64 * t7 * y__1 - 28 * t43 + 24 * t47;
      out_8_2 = 2 * y__1 * t25 + 128 * v__1 * t7 + 52 * g * u__2 + 32 * (t28 + g) * v__1;
      out_4_3 = t1;
      out_5_3 = -4 * u__1;
      out_6_3 = -16 * t2;
      out_7_3 = 32 * t3 + 24 * t5;
      out_8_3 = 32 * x__1 * t30 - 80 * t16;
      out_4_4 = t33;
      out_5_4 = -4 * v__1;
      out_6_4 = -16 * t34 - 6 * g;
      out_7_4 = 24 * t37 + 32 * t39;
      out_8_4 = y__1 * (64 * t10 + 128 * t7 + 32 * g) + 60 * t43 - 80 * t47;
      t77 = c ^ 2;
      t79 = c * ell;
      out_2_5 = 2 * lambda__1 * t77 + 2 * t79;
      t81 = x__1 ^ 2;
      t82 = y__1 ^ 2;
      t83 = t81 + t82;
      out_5_5 = 4 * t83;
      t84 = x__1 * u__1;
      t85 = y__1 * v__1;
      t86 = -t84 - t85;
      out_6_5 = 16 * t86;
      t91 = y__1 * g;
      t93 = u__1 ^ 2;
      t95 = v__1 ^ 2;
      out_7_5 = -64 * lambda__1 * t83 - 28 * t91 + 16 * t93 + 16 * t95;
      out_8_5 = 60 * v__1 * g + 256 * u__1 * t2 + 112 * t81 * u__2 + 112 * t82 * u__2 + 256 * lambda__1 * t85;
      out_2_6 = -2 * x__2;
      out_8_6 = -16 * t18 * t81 - 16 * t18 * t82;
      out_2_7 = -2 * y__2;
      out_7_7 = -8 * lambda__2 * t81 - 8 * lambda__2 * t82;
      out_8_7 = 8 * t81 * v__3 + 8 * t82 * v__3 + 64 * lambda__2 * t84 + 64 * lambda__2 * t85;
      out_6_8 = -out_5_5;
      out_7_8 = -24 * t86;
      out_8_8 = 112 * lambda__1 * t81 + 112 * t82 * lambda__1 + 52 * t91 - 40 * t93 - 40 * t95;
      out_3_10 = 2 * lambda__2 * t77 + 2 * t79;
      out_7_10 = -8 * y__2 * t81 - 8 * y__2 * t82;
      out_8_10 = -32 * lambda__2 * x__2 * t81 - 32 * lambda__2 * t82 * x__2 + 64 * y__2 * t84 + 64 * y__2 * t85;
      out_3_11 = -2 * x__3;
      out_3_12 = -2 * y__3;
      out_8_14 = -out_7_10;

      % Store outputs
      out_Jh_x = zeros(10, 15);
      out_Jh_x(1, 1) = out_1_1;
      out_Jh_x(4, 1) = out_4_1;
      out_Jh_x(5, 1) = out_5_1;
      out_Jh_x(6, 1) = out_6_1;
      out_Jh_x(7, 1) = out_7_1;
      out_Jh_x(8, 1) = out_8_1;
      out_Jh_x(1, 2) = out_1_2;
      out_Jh_x(4, 2) = out_4_2;
      out_Jh_x(5, 2) = out_5_2;
      out_Jh_x(6, 2) = out_6_2;
      out_Jh_x(7, 2) = out_7_2;
      out_Jh_x(8, 2) = out_8_2;
      out_Jh_x(4, 3) = out_4_3;
      out_Jh_x(5, 3) = out_5_3;
      out_Jh_x(6, 3) = out_6_3;
      out_Jh_x(7, 3) = out_7_3;
      out_Jh_x(8, 3) = out_8_3;
      out_Jh_x(4, 4) = out_4_4;
      out_Jh_x(5, 4) = out_5_4;
      out_Jh_x(6, 4) = out_6_4;
      out_Jh_x(7, 4) = out_7_4;
      out_Jh_x(8, 4) = out_8_4;
      out_Jh_x(2, 5) = out_2_5;
      out_Jh_x(5, 5) = out_5_5;
      out_Jh_x(6, 5) = out_6_5;
      out_Jh_x(7, 5) = out_7_5;
      out_Jh_x(8, 5) = out_8_5;
      out_Jh_x(2, 6) = out_2_6;
      out_Jh_x(8, 6) = out_8_6;
      out_Jh_x(2, 7) = out_2_7;
      out_Jh_x(7, 7) = out_7_7;
      out_Jh_x(8, 7) = out_8_7;
      out_Jh_x(6, 8) = out_6_8;
      out_Jh_x(7, 8) = out_7_8;
      out_Jh_x(8, 8) = out_8_8;
      out_Jh_x(3, 10) = out_3_10;
      out_Jh_x(7, 10) = out_7_10;
      out_Jh_x(8, 10) = out_8_10;
      out_Jh_x(3, 11) = out_3_11;
      out_Jh_x(3, 12) = out_3_12;
      out_Jh_x(8, 14) = out_8_14;
    end % Jh_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_pivots = pivots( this, in_1, ~, ~ )
      % Calculate the pivoting values

      % Extract properties
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      lambda__1 = in_1(5);
      lambda__2 = in_1(10);

      % Evaluate function
      out_1_1 = 1;
      out_2_1 = 1;
      out_3_1 = 1;
      out_4_1 = 1;
      out_5_1 = 1;
      out_6_1 = 1;
      out_7_1 = 1;
      out_8_1 = 1;
      out_9_1 = 1;
      out_10_1 = 1;
      out_11_1 = 1;
      out_12_1 = 1;
      out_13_1 = -1;
      out_14_1 = -1;
      out_15_1 = -1;
      out_1_2 = 1;
      out_2_2 = 1;
      out_3_2 = 1;
      out_4_2 = 1;
      out_5_2 = 1;
      out_6_2 = 1;
      out_7_2 = 1;
      out_8_2 = 1;
      out_9_2 = 1;
      out_10_2 = 1;
      out_11_2 = 1;
      out_12_2 = 1;
      t1 = c ^ 2;
      t3 = c * ell;
      out_13_2 = 2 * lambda__1 * t1 + 2 * t3;
      out_14_2 = 2 * lambda__2 * t1 + 2 * t3;
      out_15_2 = -1;
      out_1_3 = 1;
      out_2_3 = 1;
      out_3_3 = 1;
      out_4_3 = 1;
      out_5_3 = 1;
      out_6_3 = 1;
      out_7_3 = 1;
      out_8_3 = 1;
      out_9_3 = 1;
      out_10_3 = 1;
      out_11_3 = 1;
      out_12_3 = 1;
      out_13_3 = out_13_2;
      out_14_3 = out_14_2;
      out_15_3 = -1;
      out_1_4 = 1;
      out_2_4 = 1;
      out_3_4 = 1;
      out_4_4 = 1;
      out_5_4 = 1;
      out_6_4 = 1;
      out_7_4 = 1;
      out_8_4 = 1;
      out_9_4 = 1;
      out_10_4 = 1;
      out_11_4 = 1;
      out_12_4 = 1;
      out_13_4 = out_13_3;
      out_14_4 = out_14_3;
      out_15_4 = -1;
      out_1_5 = 1;
      out_2_5 = 1;
      out_3_5 = 1;
      out_4_5 = 1;
      out_5_5 = 1;
      out_6_5 = 1;
      out_7_5 = 1;
      out_8_5 = 1;
      out_9_5 = 1;
      out_10_5 = 1;
      out_11_5 = 1;
      out_12_5 = 1;
      out_13_5 = out_13_4;
      out_14_5 = out_14_4;
      out_15_5 = -1;
      out_1_6 = 1;
      out_2_6 = 1;
      out_3_6 = 1;
      out_4_6 = 1;
      out_5_6 = 1;
      out_6_6 = 1;
      out_7_6 = 1;
      out_8_6 = 1;
      out_9_6 = 1;
      out_10_6 = 1;
      out_11_6 = 1;
      out_12_6 = 1;
      out_13_6 = out_13_5;
      out_14_6 = out_14_5;
      out_15_6 = -1;
      out_1_7 = 1;
      out_2_7 = 1;
      out_3_7 = 1;
      out_4_7 = 1;
      out_5_7 = 1;
      out_6_7 = 1;
      out_7_7 = 1;
      out_8_7 = 1;
      out_9_7 = 1;
      out_10_7 = 1;
      out_11_7 = 1;
      out_12_7 = 1;
      out_13_7 = out_13_6;
      out_14_7 = out_14_6;
      out_15_7 = -1;
      out_1_8 = 1;
      out_2_8 = 1;
      out_3_8 = 1;
      out_4_8 = 1;
      out_5_8 = 1;
      out_6_8 = 1;
      out_7_8 = 1;
      out_8_8 = 1;
      out_9_8 = 1;
      out_10_8 = 1;
      out_11_8 = 1;
      out_12_8 = 1;
      out_13_8 = out_13_7;
      out_14_8 = out_14_7;
      out_15_8 = -1;

      % Store outputs
      out_pivots = zeros(15, 8);
      out_pivots(1, 1) = out_1_1;
      out_pivots(2, 1) = out_2_1;
      out_pivots(3, 1) = out_3_1;
      out_pivots(4, 1) = out_4_1;
      out_pivots(5, 1) = out_5_1;
      out_pivots(6, 1) = out_6_1;
      out_pivots(7, 1) = out_7_1;
      out_pivots(8, 1) = out_8_1;
      out_pivots(9, 1) = out_9_1;
      out_pivots(10, 1) = out_10_1;
      out_pivots(11, 1) = out_11_1;
      out_pivots(12, 1) = out_12_1;
      out_pivots(13, 1) = out_13_1;
      out_pivots(14, 1) = out_14_1;
      out_pivots(15, 1) = out_15_1;
      out_pivots(1, 2) = out_1_2;
      out_pivots(2, 2) = out_2_2;
      out_pivots(3, 2) = out_3_2;
      out_pivots(4, 2) = out_4_2;
      out_pivots(5, 2) = out_5_2;
      out_pivots(6, 2) = out_6_2;
      out_pivots(7, 2) = out_7_2;
      out_pivots(8, 2) = out_8_2;
      out_pivots(9, 2) = out_9_2;
      out_pivots(10, 2) = out_10_2;
      out_pivots(11, 2) = out_11_2;
      out_pivots(12, 2) = out_12_2;
      out_pivots(13, 2) = out_13_2;
      out_pivots(14, 2) = out_14_2;
      out_pivots(15, 2) = out_15_2;
      out_pivots(1, 3) = out_1_3;
      out_pivots(2, 3) = out_2_3;
      out_pivots(3, 3) = out_3_3;
      out_pivots(4, 3) = out_4_3;
      out_pivots(5, 3) = out_5_3;
      out_pivots(6, 3) = out_6_3;
      out_pivots(7, 3) = out_7_3;
      out_pivots(8, 3) = out_8_3;
      out_pivots(9, 3) = out_9_3;
      out_pivots(10, 3) = out_10_3;
      out_pivots(11, 3) = out_11_3;
      out_pivots(12, 3) = out_12_3;
      out_pivots(13, 3) = out_13_3;
      out_pivots(14, 3) = out_14_3;
      out_pivots(15, 3) = out_15_3;
      out_pivots(1, 4) = out_1_4;
      out_pivots(2, 4) = out_2_4;
      out_pivots(3, 4) = out_3_4;
      out_pivots(4, 4) = out_4_4;
      out_pivots(5, 4) = out_5_4;
      out_pivots(6, 4) = out_6_4;
      out_pivots(7, 4) = out_7_4;
      out_pivots(8, 4) = out_8_4;
      out_pivots(9, 4) = out_9_4;
      out_pivots(10, 4) = out_10_4;
      out_pivots(11, 4) = out_11_4;
      out_pivots(12, 4) = out_12_4;
      out_pivots(13, 4) = out_13_4;
      out_pivots(14, 4) = out_14_4;
      out_pivots(15, 4) = out_15_4;
      out_pivots(1, 5) = out_1_5;
      out_pivots(2, 5) = out_2_5;
      out_pivots(3, 5) = out_3_5;
      out_pivots(4, 5) = out_4_5;
      out_pivots(5, 5) = out_5_5;
      out_pivots(6, 5) = out_6_5;
      out_pivots(7, 5) = out_7_5;
      out_pivots(8, 5) = out_8_5;
      out_pivots(9, 5) = out_9_5;
      out_pivots(10, 5) = out_10_5;
      out_pivots(11, 5) = out_11_5;
      out_pivots(12, 5) = out_12_5;
      out_pivots(13, 5) = out_13_5;
      out_pivots(14, 5) = out_14_5;
      out_pivots(15, 5) = out_15_5;
      out_pivots(1, 6) = out_1_6;
      out_pivots(2, 6) = out_2_6;
      out_pivots(3, 6) = out_3_6;
      out_pivots(4, 6) = out_4_6;
      out_pivots(5, 6) = out_5_6;
      out_pivots(6, 6) = out_6_6;
      out_pivots(7, 6) = out_7_6;
      out_pivots(8, 6) = out_8_6;
      out_pivots(9, 6) = out_9_6;
      out_pivots(10, 6) = out_10_6;
      out_pivots(11, 6) = out_11_6;
      out_pivots(12, 6) = out_12_6;
      out_pivots(13, 6) = out_13_6;
      out_pivots(14, 6) = out_14_6;
      out_pivots(15, 6) = out_15_6;
      out_pivots(1, 7) = out_1_7;
      out_pivots(2, 7) = out_2_7;
      out_pivots(3, 7) = out_3_7;
      out_pivots(4, 7) = out_4_7;
      out_pivots(5, 7) = out_5_7;
      out_pivots(6, 7) = out_6_7;
      out_pivots(7, 7) = out_7_7;
      out_pivots(8, 7) = out_8_7;
      out_pivots(9, 7) = out_9_7;
      out_pivots(10, 7) = out_10_7;
      out_pivots(11, 7) = out_11_7;
      out_pivots(12, 7) = out_12_7;
      out_pivots(13, 7) = out_13_7;
      out_pivots(14, 7) = out_14_7;
      out_pivots(15, 7) = out_15_7;
      out_pivots(1, 8) = out_1_8;
      out_pivots(2, 8) = out_2_8;
      out_pivots(3, 8) = out_3_8;
      out_pivots(4, 8) = out_4_8;
      out_pivots(5, 8) = out_5_8;
      out_pivots(6, 8) = out_6_8;
      out_pivots(7, 8) = out_7_8;
      out_pivots(8, 8) = out_8_8;
      out_pivots(9, 8) = out_9_8;
      out_pivots(10, 8) = out_10_8;
      out_pivots(11, 8) = out_11_8;
      out_pivots(12, 8) = out_12_8;
      out_pivots(13, 8) = out_13_8;
      out_pivots(14, 8) = out_14_8;
      out_pivots(15, 8) = out_15_8;
    end % pivots
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jh_v = Jh_v( ~, ~, ~, ~ )
      % Calculate the Jacobian of h with respect to v.

      % Extract properties
      % No properties

      % Extract inputs

      % Evaluate function
      out_9_1 = 4;
      out_10_3 = -4;

      % Store outputs
      out_Jh_v = zeros(10, 3);
      out_Jh_v(9, 1) = out_9_1;
      out_Jh_v(10, 3) = out_10_3;
    end % Jh_v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out = in_domain( ~, ~, ~ )
      out = true;
    end % in_domain
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % NxPendulum

% That's All Folks!
