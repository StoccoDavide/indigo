% +--------------------------------------------------------------------------+
% | 'Indigo' module version 1.0 - BSD 3-Clause License - Copyright (c) 2023  |
% | Current version authors:                                                 |
% |   Davide Stocco and Enrico Bertolazzi.                                   |
% +--------------------------------------------------------------------------+

% Matlab generated code for implicit system: 2Pendulum
% This file has been automatically generated by Indigo.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef N2Pendulum < Indigo.DAE.Implicit
  %
  % No class description provided.
  %
  properties (SetAccess = protected, Hidden = true)
    % User data
    m_g = 1;
    m_ell = 1;
    m_c = .1;
  end
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = N2Pendulum( varargin )
      % Class constructor.

      % Superclass constructor
      num_eqns = 10;
      num_veil = 0;
      num_invs = 6;
      this = this@Indigo.DAE.Implicit('N2Pendulum', num_eqns, num_veil, num_invs);

      % User data
      if (nargin == 0)
        % Keep default values
      elseif (nargin == 1 && isstruct(varargin{1}))
        this.m_g = varargin{1}.g;
        this.m_ell = varargin{1}.ell;
        this.m_c = varargin{1}.c;
      elseif (nargin == 3)
        this.m_g = varargin{1};
        this.m_ell = varargin{2};
        this.m_c = varargin{3};
      else
        error('wrong number of input arguments.');
      end
    end % 2Pendulum
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_F = F( this, in_1, in_2, ~, ~ )
      % Evaluate the function F.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);
      x__1_dot = in_2(1);
      y__1_dot = in_2(2);
      u__1_dot = in_2(3);
      v__1_dot = in_2(4);
      lambda__1_dot = in_2(5);
      x__2_dot = in_2(6);
      y__2_dot = in_2(7);
      u__2_dot = in_2(8);
      v__2_dot = in_2(9);
      lambda__2_dot = in_2(10);

      % Evaluate function
      out_1 = x__1_dot - u__1;
      out_2 = y__1_dot - v__1;
      out_3 = 2 * x__1 * lambda__1 + u__1_dot;
      out_4 = 2 * y__1 * lambda__1 + g + v__1_dot;
      out_5 = x__2_dot - u__2;
      out_6 = y__2_dot - v__2;
      t5 = x__2 * lambda__2;
      out_7 = 2 * t5 + u__2_dot;
      t7 = y__2 * lambda__2;
      out_8 = 2 * t7 + g + v__2_dot;
      t10 = c * lambda__1 + ell;
      t13 = x__2 * u__2;
      t14 = y__2 * v__2;
      out_9 = 2 * lambda__1_dot * t10 * c - 2 * t13 - 2 * t14;
      t16 = c ^ 2;
      t17 = t16 ^ 2;
      t18 = x__1 ^ 2;
      t19 = y__1 ^ 2;
      t20 = t18 + t19;
      t22 = lambda__1 ^ 2;
      t23 = t22 ^ 2;
      t24 = t23 * lambda__1;
      t26 = t16 * c;
      t27 = ell * t19;
      t30 = c * y__1 * g;
      t31 = t18 * ell;
      t33 = u__1 ^ 2;
      t34 = v__1 ^ 2;
      t35 = t33 + t34;
      t37 = 0.4e1 / 0.7e1 * t35 * c;
      t46 = t22 * lambda__1;
      t50 = x__2 ^ 2;
      t52 = lambda__2 * t50 * c;
      t53 = y__2 ^ 2;
      t55 = lambda__2 * t53 * c;
      t58 = c * y__2 * g / 2;
      t59 = u__2 ^ 2;
      t61 = t59 * c / 2;
      t62 = v__2 ^ 2;
      t64 = t62 * c / 2;
      t65 = ell ^ 2;
      t66 = t65 * ell;
      t68 = t52 + t55 + t58 - t61 - t64 - 32 * t66;
      t70 = t65 * g;
      t72 = v__1 * t13;
      t73 = y__2 * v__1;
      t74 = v__2 * t73;
      t80 = c * u__1;
      t81 = t13 + t14;
      t82 = t81 * x__1;
      t84 = 3 * t82 * t80;
      t86 = t35 * t65 * c;
      t92 = 4 * t66;
      t93 = t52 + t55 + t58 - t61 - t64 - t92;
      t107 = t65 * lambda__2;
      t108 = t107 / 8;
      t111 = t70 / 16;
      t112 = v__2 * t13;
      t120 = (t59 + t62) * t65;
      t122 = t53 * (-0.3e1 / 0.16e2 * t62 - t108) + y__2 * (-t111 - 0.3e1 / 0.8e1 * t112) + t50 * (-0.3e1 / 0.16e2 * t59 - t108) + t120 / 16;
      t130 = u__1 * t65;
      t133 = t65 ^ 2;
      t143 = ell * t26;
      t156 = t52 + t55 + t58 - t61 - t64 + t92;
      t166 = c * ell;
      t171 = t59 / 2;
      t173 = lambda__2 * t50 + lambda__2 * t53 + y__2 * g / 2 - t171 - t62 / 2;
      t183 = t107 / 4;
      t184 = t62 / 8 + t183;
      t194 = t53 * t184 + y__2 * (t112 / 4 + t70 / 8) + t50 * (t59 / 8 + t183) - t120 / 8;
      t196 = v__1 * t65;
      t222 = ell * lambda__1;
      t231 = t7 + g / 4;
      t241 = t19 * t231 - 0.3e1 / 0.2e1 * v__2 * v__1 * y__1 + x__1 * (x__1 * t231 - 0.3e1 / 0.2e1 * u__1 * v__2);
      t277 = t19 * u__2 / 3 + v__1 * x__2 * y__1 + x__1 * (x__2 * u__1 + u__2 * x__1 / 3);
      t288 = v__2 * x__2 * y__2 + u__2 * t50 - u__2 * t65;
      t310 = 3 * u__1 * y__2 * x__1 + t18 * v__2 + t19 * v__2 + 3 * y__1 * t73;
      t320 = y__2 * t13 + t53 * v__2 - v__2 * t65;
      t344 = t19 * t5 - 0.3e1 / 0.2e1 * u__2 * v__1 * y__1 + (x__1 * t5 - 0.3e1 / 0.2e1 * u__1 * u__2) * x__1;
      t352 = u__2 * v__2 * y__2;
      t355 = x__2 * (t171 + t107);
      t392 = t10 ^ 2;
      t399 = t392 ^ 2;
      out_10 = 0.1e1 / c / t399 * (-64 * lambda__1_dot * (t24 * t20 * t17 + 0.7e1 / 0.16e2 * t23 * (0.64e2 / 0.7e1 * t27 + t30 + 0.64e2 / 0.7e1 * t31 - t37) * t26 + 0.7e1 / 0.4e1 * t46 * ell * (0.24e2 / 0.7e1 * t27 + t30 + 0.24e2 / 0.7e1 * t31 - t37) * t16 - t22 * (t19 * t68 - 3 * y__1 * (7 * t70 + t72 + t74) * c + t18 * t68 - t84 + 12 * t86) * c / 8 - lambda__1 * ell * (t19 * t93 - 3 * y__1 * (t72 + t74 + 0.7e1 / 0.3e1 * t70) * c + t18 * t93 - t84 + 4 * t86) / 4 + t19 * t122 + 0.3e1 / 0.8e1 * y__1 * t65 * (t72 + t74 + 0.7e1 / 0.6e1 * t70) + t18 * t122 + 0.3e1 / 0.8e1 * t82 * t130 - t35 * t133 / 4) * c - 64 * (y__1_dot * (t24 * y__1 * t17 + t23 * (0.7e1 / 0.16e2 * g * t17 + 3 * y__1 * t143) + t46 * (0.21e2 / 0.16e2 * ell * g * t26 + 3 * t65 * y__1 * t16) + t22 * (y__1 * t156 - 0.3e1 / 0.2e1 * (t72 + t74 - 0.7e1 / 0.2e1 * t70) * c) * c / 4 + lambda__1 * (y__1 * t173 - 0.3e1 / 0.2e1 * t72 - 0.3e1 / 0.2e1 * t74 + 0.7e1 / 0.8e1 * t70) * t166 / 2 + y__1 * t194 - 0.3e1 / 0.8e1 * t81 * t196) + x__1_dot * (t24 * x__1 * t17 + 3 * t23 * x__1 * t143 + 3 * t46 * x__1 * t65 * t16 + t22 * (x__1 * t156 - 0.3e1 / 0.2e1 * t81 * t80) * c / 4 + t222 * (x__1 * t173 - 0.3e1 / 0.2e1 * t81 * u__1) * c / 2 + x__1 * t194 - 0.3e1 / 0.8e1 * t81 * t130) + y__2_dot * (t22 * t241 * t16 / 4 + t222 * t241 * c / 2 + t19 * (y__2 * t184 + t112 / 8 + t111) - 0.3e1 / 0.8e1 * v__2 * y__1 * t196 + (x__1 * (y__2 * (2 * t107 + t62) + t112 + t70 / 2) - 3 * v__2 * t130) * x__1 / 8) + u__2_dot * (-0.3e1 / 0.8e1 * t22 * t16 * t277 - 0.3e1 / 0.4e1 * t222 * c * t277 + t19 * t288 / 8 - 0.3e1 / 0.8e1 * x__2 * y__1 * t196 + (-3 * u__1 * t65 * x__2 + x__1 * t288) * x__1 / 8) + v__2_dot * (-t22 * t310 * t16 / 8 - lambda__1 * t310 * t166 / 4 + t19 * t320 / 8 - 0.3e1 / 0.8e1 * y__2 * y__1 * t196 + x__1 * (-3 * u__1 * t65 * y__2 + x__1 * t320) / 8) + x__2_dot * (t22 * t344 * t16 / 4 + lambda__1 * t344 * t166 / 2 + t19 * (t352 / 8 + t355 / 4) - 0.3e1 / 0.8e1 * u__2 * y__1 * t196 + x__1 * (x__1 * (t352 / 2 + t355) - 0.3e1 / 0.2e1 * u__2 * t130) / 4) - t392 * (-lambda__2_dot * (t50 + t53) * t20 / 4 + u__1_dot * (t22 * u__1 * t16 + u__1 * lambda__1 * t166 + 0.3e1 / 0.4e1 * t82) + v__1_dot * (t22 * v__1 * t16 + v__1 * lambda__1 * t166 + 0.3e1 / 0.4e1 * t81 * y__1)) / 2) * t10);

      % Store outputs
      out_F = zeros(10, 1);
      out_F(1) = out_1;
      out_F(2) = out_2;
      out_F(3) = out_3;
      out_F(4) = out_4;
      out_F(5) = out_5;
      out_F(6) = out_6;
      out_F(7) = out_7;
      out_F(8) = out_8;
      out_F(9) = out_9;
      out_F(10) = out_10;
    end % F
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_x = JF_x( this, in_1, in_2, ~, ~ )
      % Evaluate the Jacobian of F with respect to x.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);
      x__1_dot = in_2(1);
      y__1_dot = in_2(2);
      u__1_dot = in_2(3);
      v__1_dot = in_2(4);
      lambda__1_dot = in_2(5);
      x__2_dot = in_2(6);
      y__2_dot = in_2(7);
      u__2_dot = in_2(8);
      v__2_dot = in_2(9);
      lambda__2_dot = in_2(10);

      % Evaluate function
      out_3_1 = 2 * lambda__1;
      t1 = c ^ 2;
      t2 = t1 ^ 2;
      t3 = x__1 * t2;
      t4 = lambda__1 ^ 2;
      t5 = t4 ^ 2;
      t6 = t5 * lambda__1;
      t7 = t6 * t3;
      t9 = t1 * c;
      t10 = ell * t9;
      t12 = t5 * x__1 * t10;
      t14 = ell ^ 2;
      t15 = t14 * t1;
      t16 = t4 * lambda__1;
      t17 = t16 * x__1;
      t18 = t17 * t15;
      t20 = x__2 ^ 2;
      t21 = t20 * c;
      t22 = lambda__2 * t21;
      t23 = y__2 ^ 2;
      t24 = t23 * c;
      t25 = lambda__2 * t24;
      t26 = y__2 * c;
      t28 = g * t26 / 2;
      t29 = u__2 ^ 2;
      t31 = t29 * c / 2;
      t32 = v__2 ^ 2;
      t34 = t32 * c / 2;
      t35 = t14 * ell;
      t37 = t22 + t25 + t28 - t31 - t34 - 32 * t35;
      t40 = u__1 * c;
      t41 = x__2 * u__2;
      t42 = y__2 * v__2;
      t43 = t41 + t42;
      t44 = t43 * t40;
      t45 = 3 * t44;
      t50 = 4 * t35;
      t51 = t22 + t25 + t28 - t31 - t34 - t50;
      t59 = t14 * lambda__2;
      t60 = t59 / 8;
      t61 = -0.3e1 / 0.16e2 * t32 - t60;
      t63 = t14 * g;
      t64 = t63 / 16;
      t65 = v__2 * t41;
      t66 = 0.3e1 / 0.8e1 * t65;
      t70 = -0.3e1 / 0.16e2 * t29 - t60;
      t73 = (t29 + t32) * t14;
      t75 = t23 * t61 + y__2 * (-t64 - t66) + t20 * t70 + t73 / 16;
      t78 = u__1 * t14;
      t80 = 0.3e1 / 0.8e1 * t43 * t78;
      t85 = c * lambda__1 + ell;
      t91 = t22 + t25 + t28 - t31 - t34 + t50;
      t99 = t29 / 2;
      t101 = lambda__2 * t20 + lambda__2 * t23 + y__2 * g / 2 - t99 - t32 / 2;
      t103 = ell * lambda__1;
      t107 = t59 / 4;
      t108 = t32 / 8 + t107;
      t109 = t23 * t108;
      t110 = t65 / 4;
      t111 = t63 / 8;
      t113 = y__2 * (t110 + t111);
      t115 = t29 / 8 + t107;
      t116 = t20 * t115;
      t117 = t73 / 8;
      t118 = t6 * t2 + 3 * t5 * t10 + 3 * t16 * t15 + t4 * t91 * c / 4 + t103 * t101 * c / 2 + t109 + t113 + t116 - t117;
      t120 = y__2 * lambda__2;
      t122 = t120 + g / 4;
      t123 = x__1 * t122;
      t126 = 0.3e1 / 0.2e1 * u__1 * v__2;
      t127 = 2 * t123 - t126;
      t135 = 2 * t59 + t32;
      t139 = x__1 * (y__2 * t135 + t65 + t63 / 2);
      t141 = v__2 * t78;
      t142 = 0.3e1 / 0.8e1 * t141;
      t145 = x__2 * u__1;
      t146 = u__2 * x__1;
      t148 = t145 + 0.2e1 / 0.3e1 * t146;
      t155 = u__2 * t14;
      t156 = u__2 * t20;
      t157 = x__2 * v__2;
      t158 = y__2 * t157;
      t159 = -t155 + t156 + t158;
      t160 = x__1 * t159;
      t162 = t14 * x__2;
      t163 = u__1 * t162;
      t164 = 0.3e1 / 0.8e1 * t163;
      t167 = u__1 * y__2;
      t169 = v__2 * x__1;
      t171 = 3 * t167 + 2 * t169;
      t175 = c * ell;
      t179 = v__2 * t14;
      t180 = y__2 * t41;
      t181 = t23 * v__2;
      t182 = -t179 + t180 + t181;
      t183 = x__1 * t182;
      t185 = t14 * y__2;
      t186 = u__1 * t185;
      t187 = 0.3e1 / 0.8e1 * t186;
      t190 = lambda__2 * x__2;
      t191 = x__1 * t190;
      t194 = 0.3e1 / 0.2e1 * u__1 * u__2;
      t195 = 2 * t191 - t194;
      t201 = lambda__1 * t195 * t175 / 2;
      t202 = v__2 * u__2;
      t203 = y__2 * t202;
      t205 = t99 + t59;
      t206 = x__2 * t205;
      t208 = x__1 * (t203 / 2 + t206);
      t210 = u__2 * t78;
      t211 = 0.3e1 / 0.8e1 * t210;
      t214 = t20 + t23;
      t218 = 0.3e1 / 0.4e1 * t43;
      t221 = t85 ^ 2;
      t228 = t221 ^ 2;
      t229 = 0.1e1 / t228;
      t231 = 0.1e1 / c;
      out_10_1 = t231 * t229 * (-64 * lambda__1_dot * (2 * t7 + 8 * t12 + 12 * t18 - t4 * (2 * x__1 * t37 - t45) * c / 8 - lambda__1 * ell * (2 * x__1 * t51 - t45) / 4 + 2 * x__1 * t75 + t80) * c - 64 * (x__1_dot * t118 + y__2_dot * (t4 * t127 * t1 / 4 + t103 * t127 * c / 2 + t139 / 4 - t142) + u__2_dot * (-0.3e1 / 0.8e1 * t4 * t1 * t148 - 0.3e1 / 0.4e1 * t103 * c * t148 + t160 / 4 - t164) + v__2_dot * (-t4 * t171 * t1 / 8 - lambda__1 * t171 * t175 / 4 + t183 / 4 - t187) + x__2_dot * (t4 * t195 * t1 / 4 + t201 + t208 / 2 - t211) - t221 * (-lambda__2_dot * t214 * x__1 / 2 + u__1_dot * t218) / 2) * t85);
      out_4_2 = out_3_1;
      t232 = y__1 * t2;
      t233 = t6 * t232;
      t235 = y__1 * ell;
      t237 = c * g;
      t245 = t16 * ell;
      t251 = v__1 * t41;
      t252 = y__2 * v__1;
      t253 = v__2 * t252;
      t255 = (7 * t63 + t251 + t253) * c;
      t265 = (t251 + t253 + 0.7e1 / 0.3e1 * t63) * c;
      t275 = t14 * (t251 + t253 + 0.7e1 / 0.6e1 * t63);
      t283 = v__2 * v__1;
      t284 = 0.3e1 / 0.2e1 * t283;
      t285 = 2 * y__1 * t122 - t284;
      t292 = y__2 * t108;
      t294 = t292 + t65 / 8 + t64;
      t297 = v__1 * t14;
      t299 = 0.3e1 / 0.8e1 * v__2 * t297;
      t302 = u__2 * y__1;
      t304 = v__1 * x__2;
      t305 = 0.2e1 / 0.3e1 * t302 + t304;
      t312 = t159 / 8;
      t316 = 0.3e1 / 0.8e1 * x__2 * t297;
      t320 = v__2 * y__1;
      t322 = 3 * t252 + 2 * t320;
      t329 = t182 / 8;
      t333 = 0.3e1 / 0.8e1 * y__2 * t297;
      t338 = u__2 * v__1;
      t340 = 2 * y__1 * t190 - 0.3e1 / 0.2e1 * t338;
      t346 = lambda__1 * t340 * t175 / 2;
      t349 = t203 / 8 + t206 / 4;
      t353 = 0.3e1 / 0.8e1 * u__2 * t297;
      t356 = t214 * y__1;
      out_10_2 = t231 * t229 * (-64 * lambda__1_dot * (2 * t233 + 0.7e1 / 0.16e2 * t5 * (0.128e3 / 0.7e1 * t235 + t237) * t9 + 0.7e1 / 0.4e1 * t245 * (0.48e2 / 0.7e1 * t235 + t237) * t1 - t4 * (2 * y__1 * t37 - 3 * t255) * c / 8 - lambda__1 * ell * (2 * y__1 * t51 - 3 * t265) / 4 + 2 * y__1 * t75 + 0.3e1 / 0.8e1 * t275) * c - 64 * (y__1_dot * t118 + y__2_dot * (t4 * t285 * t1 / 4 + t103 * t285 * c / 2 + 2 * y__1 * t294 - t299) + u__2_dot * (-0.3e1 / 0.8e1 * t4 * t1 * t305 - 0.3e1 / 0.4e1 * t103 * c * t305 + 2 * y__1 * t312 - t316) + v__2_dot * (-t4 * t322 * t1 / 8 - lambda__1 * t322 * t175 / 4 + 2 * y__1 * t329 - t333) + x__2_dot * (t4 * t340 * t1 / 4 + t346 + 2 * y__1 * t349 - t353) - t221 * (-lambda__2_dot * t356 / 2 + v__1_dot * t218) / 2) * t85);
      out_1_3 = -1;
      t374 = t43 * c;
      t376 = 3 * x__1 * t374;
      t377 = t14 * c;
      t378 = u__1 * t377;
      t389 = t43 * t14;
      t392 = t14 ^ 2;
      t407 = -0.3e1 / 0.8e1 * t4 * t43 * t1 - 0.3e1 / 0.4e1 * t103 * t43 * c - 0.3e1 / 0.8e1 * t389;
      t409 = v__2 * t1;
      t410 = t4 * x__1;
      t413 = c * v__2;
      t415 = x__1 * ell * lambda__1;
      t423 = x__1 * x__2;
      t424 = t4 * t1;
      t427 = lambda__1 * t175;
      t434 = y__2 * t1;
      t437 = x__1 * y__2;
      t445 = u__2 * t1;
      t455 = t424 + t427;
      out_10_3 = t231 * t229 * (-64 * lambda__1_dot * (-t5 * u__1 * t2 / 2 - 2 * t245 * u__1 * t9 - t4 * (-t376 + 24 * t378) * c / 8 - lambda__1 * ell * (-t376 + 8 * t378) / 4 + 0.3e1 / 0.8e1 * x__1 * t389 - u__1 * t392 / 2) * c - 64 * (x__1_dot * t407 + y__2_dot * (-0.3e1 / 0.8e1 * t410 * t409 - 0.3e1 / 0.4e1 * t415 * t413 - 0.3e1 / 0.8e1 * v__2 * t14 * x__1) + u__2_dot * (-0.3e1 / 0.8e1 * t424 * t423 - 0.3e1 / 0.4e1 * t427 * t423 - 0.3e1 / 0.8e1 * t14 * t423) + v__2_dot * (-0.3e1 / 0.8e1 * t410 * t434 - 0.3e1 / 0.4e1 * lambda__1 * t437 * t175 - 0.3e1 / 0.8e1 * x__1 * t185) + x__2_dot * (-0.3e1 / 0.8e1 * t410 * t445 - 0.3e1 / 0.4e1 * lambda__1 * t146 * t175 - 0.3e1 / 0.8e1 * x__1 * t155) - t221 * u__1_dot * t455 / 2) * t85);
      out_2_4 = -1;
      t471 = 3 * y__1 * t374;
      t472 = v__1 * t377;
      t491 = t4 * y__1;
      t501 = x__2 * y__1;
      t512 = y__1 * y__2;
      out_10_4 = t231 * t229 * (-64 * lambda__1_dot * (-t5 * v__1 * t2 / 2 - 2 * t16 * v__1 * t10 - t4 * (-t471 + 24 * t472) * c / 8 - lambda__1 * ell * (-t471 + 8 * t472) / 4 + 0.3e1 / 0.8e1 * y__1 * t389 - v__1 * t392 / 2) * c - 64 * (y__1_dot * t407 + y__2_dot * (-0.3e1 / 0.8e1 * t491 * t409 - 0.3e1 / 0.4e1 * lambda__1 * t235 * t413 - 0.3e1 / 0.8e1 * y__1 * t179) + u__2_dot * (-0.3e1 / 0.8e1 * t424 * t501 - 0.3e1 / 0.4e1 * t427 * t501 - 0.3e1 / 0.8e1 * y__1 * t162) + v__2_dot * (-0.3e1 / 0.8e1 * t491 * t434 - 0.3e1 / 0.4e1 * lambda__1 * t512 * t175 - 0.3e1 / 0.8e1 * y__1 * t185) + x__2_dot * (-0.3e1 / 0.8e1 * t491 * t445 - 0.3e1 / 0.4e1 * lambda__1 * t302 * t175 - 0.3e1 / 0.8e1 * y__1 * t155) - t221 * v__1_dot * t455 / 2) * t85);
      out_3_5 = 2 * x__1;
      out_4_5 = 2 * y__1;
      out_9_5 = 2 * lambda__1_dot * t1;
      t538 = x__1 ^ 2;
      t539 = y__1 ^ 2;
      t540 = t538 + t539;
      t541 = t540 * t2;
      t544 = ell * t539;
      t547 = c * y__1 * g;
      t548 = t538 * ell;
      t550 = u__1 ^ 2;
      t551 = v__1 ^ 2;
      t552 = t550 + t551;
      t554 = 0.4e1 / 0.7e1 * t552 * c;
      t556 = (0.64e2 / 0.7e1 * t544 + t547 + 0.64e2 / 0.7e1 * t548 - t554) * t9;
      t562 = (0.24e2 / 0.7e1 * t544 + t547 + 0.24e2 / 0.7e1 * t548 - t554) * t1;
      t570 = t43 * x__1;
      t572 = 3 * t570 * t40;
      t573 = t552 * t377;
      t576 = (-3 * y__1 * t255 + t538 * t37 + t539 * t37 - t572 + 12 * t573) * c;
      t585 = ell * (-3 * y__1 * t265 + t538 * t51 + t539 * t51 - t572 + 4 * t573);
      t594 = 0.7e1 / 0.16e2 * g * t2 + 3 * y__1 * t10;
      t602 = 0.21e2 / 0.16e2 * ell * g * t9 + 3 * t14 * y__1 * t1;
      t610 = (y__1 * t91 - 0.3e1 / 0.2e1 * (t251 + t253 - 0.7e1 / 0.2e1 * t63) * c) * c;
      t617 = y__1 * t101 - 0.3e1 / 0.2e1 * t251 - 0.3e1 / 0.2e1 * t253 + 0.7e1 / 0.8e1 * t63;
      t621 = t109 + t113 + t116 - t117;
      t632 = (x__1 * t91 - 0.3e1 / 0.2e1 * t44) * c;
      t639 = (x__1 * t101 - 0.3e1 / 0.2e1 * t43 * u__1) * c;
      t650 = t539 * t122 - 0.3e1 / 0.2e1 * y__1 * t283 + x__1 * (t123 - t126);
      t651 = t650 * t1;
      t654 = t650 * c;
      t659 = 0.3e1 / 0.8e1 * t320 * t297;
      t672 = t539 * u__2 / 3 + y__1 * t304 + (t145 + t146 / 3) * x__1;
      t673 = t1 * t672;
      t676 = c * t672;
      t681 = 0.3e1 / 0.8e1 * t501 * t297;
      t692 = t538 * v__2;
      t694 = 3 * x__1 * t167 + 3 * y__1 * t252 + t539 * v__2 + t692;
      t695 = t694 * t1;
      t703 = 0.3e1 / 0.8e1 * t512 * t297;
      t715 = t539 * t190 - 0.3e1 / 0.2e1 * y__1 * t338 + (t191 - t194) * x__1;
      t716 = t715 * t1;
      t724 = 0.3e1 / 0.8e1 * t302 * t297;
      t734 = u__1 * t1;
      t741 = v__1 * t1;
      t749 = -lambda__2_dot * t214 * t540 / 4 + u__1_dot * (t4 * t734 + u__1 * lambda__1 * t175 + 0.3e1 / 0.4e1 * t570) + v__1_dot * (t4 * t741 + v__1 * lambda__1 * t175 + 0.3e1 / 0.4e1 * t43 * y__1);
      t752 = y__1_dot * (t233 + t5 * t594 + t16 * t602 + t4 * t610 / 4 + lambda__1 * t617 * t175 / 2 + y__1 * t621 - 0.3e1 / 0.8e1 * t43 * t297) + x__1_dot * (t7 + 3 * t12 + 3 * t18 + t4 * t632 / 4 + t103 * t639 / 2 + x__1 * t621 - t80) + y__2_dot * (t4 * t651 / 4 + t103 * t654 / 2 + t539 * t294 - t659 + (t139 - 3 * t141) * x__1 / 8) + u__2_dot * (-0.3e1 / 0.8e1 * t4 * t673 - 0.3e1 / 0.4e1 * t103 * t676 + t539 * t312 - t681 + (t160 - 3 * t163) * x__1 / 8) + v__2_dot * (-t4 * t695 / 8 - lambda__1 * t694 * t175 / 4 + t539 * t329 - t703 + x__1 * (t183 - 3 * t186) / 8) + x__2_dot * (t4 * t716 / 4 + lambda__1 * t715 * t175 / 2 + t539 * t349 - t724 + x__1 * (t208 - 0.3e1 / 0.2e1 * t210) / 4) - t221 * t749 / 2;
      out_10_5 = t231 * t229 * (-64 * lambda__1_dot * (5 * t5 * t541 + 0.7e1 / 0.4e1 * t16 * t556 + 0.21e2 / 0.4e1 * t4 * ell * t562 - lambda__1 * t576 / 4 - t585 / 4) * c - 64 * t752 * c - 64 * (y__1_dot * (5 * t5 * t232 + 4 * t16 * t594 + 3 * t4 * t602 + lambda__1 * t610 / 2 + t617 * t175 / 2) + x__1_dot * (5 * t5 * t3 + 12 * t17 * t10 + 9 * t410 * t15 + lambda__1 * t632 / 2 + ell * t639 / 2) + y__2_dot * (ell * t654 / 2 + lambda__1 * t651 / 2) + u__2_dot * (-0.3e1 / 0.4e1 * ell * t676 - 0.3e1 / 0.4e1 * lambda__1 * t673) + v__2_dot * (-t694 * t175 / 4 - lambda__1 * t695 / 4) + x__2_dot * (t715 * t175 / 2 + lambda__1 * t716 / 2) - t221 * (u__1_dot * (u__1 * t175 + 2 * lambda__1 * t734) + v__1_dot * (v__1 * t175 + 2 * lambda__1 * t741)) / 2 - c * t85 * t749) * t85) - 4 / t228 / t85 * (-64 * lambda__1_dot * (t6 * t541 + 0.7e1 / 0.16e2 * t5 * t556 + 0.7e1 / 0.4e1 * t245 * t562 - t4 * t576 / 8 - lambda__1 * t585 / 4 + t539 * t75 + 0.3e1 / 0.8e1 * y__1 * t275 + t538 * t75 + 0.3e1 / 0.8e1 * t570 * t78 - t552 * t392 / 4) * c - 64 * t752 * t85);
      out_7_6 = 2 * lambda__2;
      out_9_6 = -2 * u__2;
      t847 = c * x__2;
      t848 = lambda__2 * t538;
      t851 = lambda__2 * t539;
      t856 = c * u__2;
      t857 = y__1 * v__1;
      t860 = -3 * t146 * t40 + 2 * t848 * t847 + 2 * t851 * t847 - 3 * t857 * t856;
      t870 = -0.3e1 / 0.8e1 * t203 + 2 * x__2 * t70;
      t890 = t203 / 4 + 2 * x__2 * t115;
      t910 = v__2 * u__2 * t538 / 8 + t539 * t202 / 8;
      t913 = x__1 * u__1 + t857;
      t923 = t539 * (t42 / 8 + t41 / 4);
      t925 = 0.3e1 / 0.8e1 * t14 * t857;
      t929 = 3 * t78;
      t935 = y__2 * u__2;
      t939 = t538 * t935 / 8 + t539 * t935 / 8;
      t941 = t848 + t851;
      t944 = t4 * t941 * t1 / 4;
      t947 = lambda__1 * t941 * t175 / 2;
      out_10_6 = t231 * t229 * (-64 * lambda__1_dot * (-t4 * t860 * c / 8 - lambda__1 * ell * t860 / 4 + t539 * t870 + t724 + t538 * t870 + 0.3e1 / 0.8e1 * t146 * t78) * c - 64 * (y__1_dot * (t4 * (2 * lambda__2 * y__1 * t847 - 0.3e1 / 0.2e1 * v__1 * t856) * c / 4 + t346 + y__1 * t890 - t353) + x__1_dot * (t4 * (2 * lambda__2 * x__1 * t847 - 0.3e1 / 0.2e1 * u__2 * t40) * c / 4 + t201 + x__1 * t890 - t211) + y__2_dot * t910 + u__2_dot * (-0.3e1 / 0.8e1 * t4 * t913 * t1 - 0.3e1 / 0.4e1 * t103 * c * t913 + t923 - t925 + (x__1 * (2 * t41 + t42) - t929) * x__1 / 8) + v__2_dot * t939 + x__2_dot * (t944 + t947 + t539 * t115 + t538 * t205 / 4) - t221 * (-lambda__2_dot * x__2 * t540 / 2 + 0.3e1 / 0.4e1 * u__1_dot * t146 + 0.3e1 / 0.4e1 * v__1_dot * t302) / 2) * t85);
      out_8_7 = out_7_6;
      out_9_7 = -2 * v__2;
      t972 = 2 * lambda__2 * t26 + t237 / 2;
      t979 = -3 * t169 * t40 - 3 * t857 * t413 + t538 * t972 + t539 * t972;
      t988 = 2 * y__2 * t61 - t64 - t66;
      t1005 = 2 * t120 + g / 2;
      t1012 = 2 * t292 + t110 + t111;
      t1039 = t539 * t157 / 8 + x__2 * t692 / 8;
      t1041 = 3 * t913;
      t1051 = t539 * (t41 / 8 + t42 / 4);
      t1057 = x__1 * (x__1 * (t41 + 2 * t42) - t929) / 8;
      out_10_7 = t231 * t229 * (-64 * lambda__1_dot * (-t4 * t979 * c / 8 - lambda__1 * ell * t979 / 4 + t539 * t988 + t659 + t538 * t988 + 0.3e1 / 0.8e1 * t169 * t78) * c - 64 * (y__1_dot * (t4 * (y__1 * t972 - 0.3e1 / 0.2e1 * v__1 * t413) * c / 4 + lambda__1 * (y__1 * t1005 - t284) * t175 / 2 + y__1 * t1012 - t299) + x__1_dot * (t4 * (x__1 * t972 - 0.3e1 / 0.2e1 * v__2 * t40) * c / 4 + t103 * (x__1 * t1005 - t126) * c / 2 + x__1 * t1012 - t142) + y__2_dot * (t944 + t947 + t539 * t108 + t135 * t538 / 8) + u__2_dot * t1039 + v__2_dot * (-t4 * t1041 * t1 / 8 - lambda__1 * t1041 * t175 / 4 + t1051 - t925 + t1057) + x__2_dot * t910 - t221 * (-lambda__2_dot * y__2 * t540 / 2 + 0.3e1 / 0.4e1 * u__1_dot * t169 + 0.3e1 / 0.4e1 * v__1_dot * t320) / 2) * t85);
      out_5_8 = -1;
      t1076 = 2 * x__2;
      out_9_8 = -t1076;
      t1081 = c * v__1;
      t1084 = -3 * t501 * t1081 - 3 * t423 * t40 - t538 * t856 - t539 * t856;
      t1094 = -0.3e1 / 0.8e1 * t158 - 0.3e1 / 0.8e1 * t156 + t155 / 8;
      t1114 = t159 / 4;
      t1134 = t540 / 3;
      t1141 = -t14 + t20;
      t1148 = y__2 * x__2;
      t1152 = t538 * t1148 / 8 + t539 * t1148 / 8;
      t1155 = -0.3e1 / 0.2e1 * t913;
      t1158 = t4 * t1155 * t1 / 4;
      t1161 = lambda__1 * t1155 * t175 / 2;
      out_10_8 = t231 * t229 * (-64 * lambda__1_dot * (-t4 * t1084 * c / 8 - lambda__1 * ell * t1084 / 4 + t539 * t1094 + t681 + t538 * t1094 + 0.3e1 / 0.8e1 * t423 * t78) * c - 64 * (y__1_dot * (t4 * (-y__1 * t856 - 0.3e1 / 0.2e1 * x__2 * t1081) * c / 4 + lambda__1 * (-t302 - 0.3e1 / 0.2e1 * t304) * t175 / 2 + y__1 * t1114 - t316) + x__1_dot * (t4 * (-x__1 * t856 - 0.3e1 / 0.2e1 * x__2 * t40) * c / 4 + t103 * (-t146 - 0.3e1 / 0.2e1 * t145) * c / 2 + x__1 * t1114 - t164) + y__2_dot * t1039 + u__2_dot * (-0.3e1 / 0.8e1 * t4 * t1 * t1134 - 0.3e1 / 0.4e1 * t103 * c * t1134 + t539 * t1141 / 8 + t1141 * t538 / 8) + v__2_dot * t1152 + x__2_dot * (t1158 + t1161 + t923 - t925 + x__1 * (x__1 * (t42 / 2 + t41) - 0.3e1 / 0.2e1 * t78) / 4) - t221 * (0.3e1 / 0.4e1 * u__1_dot * t423 + 0.3e1 / 0.4e1 * v__1_dot * t501) / 2) * t85);
      out_6_9 = -1;
      t1182 = 2 * y__2;
      out_9_9 = -t1182;
      t1189 = -3 * t857 * t26 - 3 * t437 * t40 - t538 * t413 - t539 * t413;
      t1199 = -0.3e1 / 0.8e1 * t181 - 0.3e1 / 0.8e1 * t180 + t179 / 8;
      t1219 = t182 / 4;
      t1247 = -t14 + t23;
      out_10_9 = t231 * t229 * (-64 * lambda__1_dot * (-t4 * t1189 * c / 8 - lambda__1 * ell * t1189 / 4 + t539 * t1199 + t703 + t538 * t1199 + 0.3e1 / 0.8e1 * t437 * t78) * c - 64 * (y__1_dot * (t4 * (-y__1 * t413 - 0.3e1 / 0.2e1 * v__1 * t26) * c / 4 + lambda__1 * (-t320 - 0.3e1 / 0.2e1 * t252) * t175 / 2 + y__1 * t1219 - t333) + x__1_dot * (t4 * (-x__1 * t413 - 0.3e1 / 0.2e1 * y__2 * t40) * c / 4 + t103 * (-t169 - 0.3e1 / 0.2e1 * t167) * c / 2 + x__1 * t1219 - t187) + y__2_dot * (t1158 + t1161 + t1051 - t925 + t1057) + u__2_dot * t1152 + v__2_dot * (-t4 * t540 * t1 / 8 - lambda__1 * t540 * t175 / 4 + t539 * t1247 / 8 + t538 * t1247 / 8) + x__2_dot * t939 - t221 * (0.3e1 / 0.4e1 * u__1_dot * t437 + 0.3e1 / 0.4e1 * v__1_dot * t512) / 2) * t85);
      out_7_10 = t1076;
      out_8_10 = t1182;
      t1266 = t21 + t24;
      t1269 = t538 * t1266 + t539 * t1266;
      t1278 = -t14 * t20 - t14 * t23;
      t1279 = t1278 / 8;
      t1285 = t1266 * c;
      t1292 = -t1278 / 4;
      t1304 = y__2 * t538;
      t1306 = y__2 * t539 + t1304;
      t1319 = x__2 * t538;
      t1321 = t539 * x__2 + t1319;
      out_10_10 = t231 * t229 * (-64 * lambda__1_dot * (-t4 * t1269 * c / 8 - lambda__1 * ell * t1269 / 4 + t539 * t1279 + t538 * t1279) * c - 64 * (y__1_dot * (t491 * t1285 / 4 + lambda__1 * t356 * t175 / 2 + y__1 * t1292) + x__1_dot * (t410 * t1285 / 4 + t415 * t214 * c / 2 + x__1 * t1292) + y__2_dot * (t4 * t1306 * t1 / 4 + t103 * t1306 * c / 2 + t539 * t185 / 4 + t14 * t1304 / 4) + x__2_dot * (t4 * t1321 * t1 / 4 + lambda__1 * t1321 * t175 / 2 + t539 * t162 / 4 + t14 * t1319 / 4)) * t85);

      % Store outputs
      out_JF_x = zeros(10, 10);
      out_JF_x(3, 1) = out_3_1;
      out_JF_x(10, 1) = out_10_1;
      out_JF_x(4, 2) = out_4_2;
      out_JF_x(10, 2) = out_10_2;
      out_JF_x(1, 3) = out_1_3;
      out_JF_x(10, 3) = out_10_3;
      out_JF_x(2, 4) = out_2_4;
      out_JF_x(10, 4) = out_10_4;
      out_JF_x(3, 5) = out_3_5;
      out_JF_x(4, 5) = out_4_5;
      out_JF_x(9, 5) = out_9_5;
      out_JF_x(10, 5) = out_10_5;
      out_JF_x(7, 6) = out_7_6;
      out_JF_x(9, 6) = out_9_6;
      out_JF_x(10, 6) = out_10_6;
      out_JF_x(8, 7) = out_8_7;
      out_JF_x(9, 7) = out_9_7;
      out_JF_x(10, 7) = out_10_7;
      out_JF_x(5, 8) = out_5_8;
      out_JF_x(9, 8) = out_9_8;
      out_JF_x(10, 8) = out_10_8;
      out_JF_x(6, 9) = out_6_9;
      out_JF_x(9, 9) = out_9_9;
      out_JF_x(10, 9) = out_10_9;
      out_JF_x(7, 10) = out_7_10;
      out_JF_x(8, 10) = out_8_10;
      out_JF_x(10, 10) = out_10_10;
    end % JF_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_x_dot = JF_x_dot( this, in_1, ~, ~, ~ )
      % Evaluate the Jacobian of F with respect to x_dot.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);

      % Evaluate function
      out_1_1 = 1;
      t2 = c * lambda__1 + ell;
      t3 = t2 ^ 2;
      t5 = 0.1e1 / t3 / t2;
      t6 = c ^ 2;
      t7 = t6 ^ 2;
      t9 = lambda__1 ^ 2;
      t10 = t9 ^ 2;
      t11 = t10 * lambda__1;
      t13 = t6 * c;
      t14 = ell * t13;
      t18 = ell ^ 2;
      t20 = t9 * lambda__1;
      t24 = x__2 ^ 2;
      t26 = lambda__2 * t24 * c;
      t27 = y__2 ^ 2;
      t29 = lambda__2 * t27 * c;
      t32 = c * y__2 * g / 2;
      t33 = u__2 ^ 2;
      t35 = t33 * c / 2;
      t36 = v__2 ^ 2;
      t38 = t36 * c / 2;
      t39 = t18 * ell;
      t40 = 4 * t39;
      t41 = t26 + t29 + t32 - t35 - t38 + t40;
      t43 = u__1 * c;
      t44 = x__2 * u__2;
      t46 = y__2 * v__2 + t44;
      t57 = t33 / 2;
      t59 = lambda__2 * t24 + lambda__2 * t27 + y__2 * g / 2 - t57 - t36 / 2;
      t65 = ell * lambda__1;
      t69 = t18 * lambda__2;
      t70 = t69 / 4;
      t71 = t36 / 8 + t70;
      t73 = v__2 * t44;
      t75 = t18 * g;
      t83 = (t33 + t36) * t18;
      t85 = t27 * t71 + y__2 * (t73 / 4 + t75 / 8) + t24 * (t33 / 8 + t70) - t83 / 8;
      t87 = u__1 * t18;
      t92 = 0.1e1 / c;
      out_10_1 = -64 * t92 * (t11 * x__1 * t7 + 3 * t10 * x__1 * t14 + 3 * t20 * x__1 * t18 * t6 + t9 * (x__1 * t41 - 0.3e1 / 0.2e1 * t46 * t43) * c / 4 + t65 * (x__1 * t59 - 0.3e1 / 0.2e1 * t46 * u__1) * c / 2 + x__1 * t85 - 0.3e1 / 0.8e1 * t46 * t87) * t5;
      out_2_2 = 1;
      t112 = v__1 * t44;
      t113 = y__2 * v__1;
      t114 = v__2 * t113;
      t123 = c * ell;
      t133 = v__1 * t18;
      out_10_2 = -64 * t92 * (t11 * y__1 * t7 + t10 * (0.7e1 / 0.16e2 * g * t7 + 3 * y__1 * t14) + t20 * (0.21e2 / 0.16e2 * ell * g * t13 + 3 * t18 * y__1 * t6) + t9 * (y__1 * t41 - 0.3e1 / 0.2e1 * (t112 + t114 - 0.7e1 / 0.2e1 * t75) * c) * c / 4 + lambda__1 * (y__1 * t59 - 0.3e1 / 0.2e1 * t112 - 0.3e1 / 0.2e1 * t114 + 0.7e1 / 0.8e1 * t75) * t123 / 2 + y__1 * t85 - 0.3e1 / 0.8e1 * t46 * t133) * t5;
      out_3_3 = 1;
      t140 = 0.1e1 / t2;
      t145 = t46 * x__1;
      out_10_3 = 32 * t92 * (t9 * u__1 * t6 + u__1 * lambda__1 * t123 + 0.3e1 / 0.4e1 * t145) * t140;
      out_4_4 = 1;
      out_10_4 = 32 * t92 * (t9 * v__1 * t6 + v__1 * lambda__1 * t123 + 0.3e1 / 0.4e1 * t46 * y__1) * t140;
      out_9_5 = 2 * t2 * c;
      t160 = x__1 ^ 2;
      t161 = y__1 ^ 2;
      t162 = t160 + t161;
      t165 = ell * t161;
      t168 = c * y__1 * g;
      t169 = t160 * ell;
      t171 = u__1 ^ 2;
      t172 = v__1 ^ 2;
      t173 = t171 + t172;
      t175 = 0.4e1 / 0.7e1 * t173 * c;
      t188 = t26 + t29 + t32 - t35 - t38 - 32 * t39;
      t197 = 3 * t145 * t43;
      t199 = t173 * t18 * c;
      t205 = t26 + t29 + t32 - t35 - t38 - t40;
      t219 = t69 / 8;
      t222 = t75 / 16;
      t230 = t27 * (-0.3e1 / 0.16e2 * t36 - t219) + y__2 * (-t222 - 0.3e1 / 0.8e1 * t73) + t24 * (-0.3e1 / 0.16e2 * t33 - t219) + t83 / 16;
      t240 = t18 ^ 2;
      t244 = t3 ^ 2;
      out_10_5 = -64 / t244 * (t11 * t162 * t7 + 0.7e1 / 0.16e2 * t10 * (0.64e2 / 0.7e1 * t165 + t168 + 0.64e2 / 0.7e1 * t169 - t175) * t13 + 0.7e1 / 0.4e1 * t20 * ell * (0.24e2 / 0.7e1 * t165 + t168 + 0.24e2 / 0.7e1 * t169 - t175) * t6 - t9 * (t161 * t188 - 3 * y__1 * (7 * t75 + t112 + t114) * c + t160 * t188 - t197 + 12 * t199) * c / 8 - lambda__1 * ell * (t161 * t205 - 3 * y__1 * (t112 + t114 + 0.7e1 / 0.3e1 * t75) * c + t160 * t205 - t197 + 4 * t199) / 4 + t161 * t230 + 0.3e1 / 0.8e1 * y__1 * t18 * (t112 + t114 + 0.7e1 / 0.6e1 * t75) + t160 * t230 + 0.3e1 / 0.8e1 * t145 * t87 - t173 * t240 / 4);
      out_5_6 = 1;
      t248 = lambda__2 * x__2;
      t258 = t161 * t248 - 0.3e1 / 0.2e1 * u__2 * v__1 * y__1 + (x__1 * t248 - 0.3e1 / 0.2e1 * u__1 * u__2) * x__1;
      t266 = u__2 * v__2 * y__2;
      t269 = x__2 * (t57 + t69);
      out_10_6 = -64 * t92 * (t9 * t258 * t6 / 4 + lambda__1 * t258 * t123 / 2 + t161 * (t266 / 8 + t269 / 4) - 0.3e1 / 0.8e1 * u__2 * y__1 * t133 + x__1 * (x__1 * (t266 / 2 + t269) - 0.3e1 / 0.2e1 * u__2 * t87) / 4) * t5;
      out_6_7 = 1;
      t290 = y__2 * lambda__2 + g / 4;
      t300 = t161 * t290 - 0.3e1 / 0.2e1 * v__2 * v__1 * y__1 + x__1 * (x__1 * t290 - 0.3e1 / 0.2e1 * u__1 * v__2);
      out_10_7 = -64 * t92 * (t9 * t300 * t6 / 4 + t65 * t300 * c / 2 + t161 * (y__2 * t71 + t73 / 8 + t222) - 0.3e1 / 0.8e1 * v__2 * y__1 * t133 + (x__1 * (y__2 * (2 * t69 + t36) + t73 + t75 / 2) - 3 * v__2 * t87) * x__1 / 8) * t5;
      out_7_8 = 1;
      t338 = t161 * u__2 / 3 + v__1 * x__2 * y__1 + x__1 * (x__2 * u__1 + u__2 * x__1 / 3);
      t349 = v__2 * x__2 * y__2 - u__2 * t18 + u__2 * t24;
      out_10_8 = -64 * t92 * (-0.3e1 / 0.8e1 * t9 * t6 * t338 - 0.3e1 / 0.4e1 * t65 * c * t338 + t161 * t349 / 8 - 0.3e1 / 0.8e1 * x__2 * y__1 * t133 + (-3 * u__1 * t18 * x__2 + x__1 * t349) * x__1 / 8) * t5;
      out_8_9 = 1;
      t373 = 3 * u__1 * y__2 * x__1 + 3 * y__1 * t113 + t160 * v__2 + t161 * v__2;
      t383 = -v__2 * t18 + t27 * v__2 + y__2 * t44;
      out_10_9 = -64 * t92 * (-t9 * t373 * t6 / 8 - lambda__1 * t373 * t123 / 4 + t161 * t383 / 8 - 0.3e1 / 0.8e1 * y__2 * y__1 * t133 + x__1 * (-3 * u__1 * t18 * y__2 + x__1 * t383) / 8) * t5;
      out_10_10 = -8 * t92 * (t24 + t27) * t162 * t140;

      % Store outputs
      out_JF_x_dot = zeros(10, 10);
      out_JF_x_dot(1, 1) = out_1_1;
      out_JF_x_dot(10, 1) = out_10_1;
      out_JF_x_dot(2, 2) = out_2_2;
      out_JF_x_dot(10, 2) = out_10_2;
      out_JF_x_dot(3, 3) = out_3_3;
      out_JF_x_dot(10, 3) = out_10_3;
      out_JF_x_dot(4, 4) = out_4_4;
      out_JF_x_dot(10, 4) = out_10_4;
      out_JF_x_dot(9, 5) = out_9_5;
      out_JF_x_dot(10, 5) = out_10_5;
      out_JF_x_dot(5, 6) = out_5_6;
      out_JF_x_dot(10, 6) = out_10_6;
      out_JF_x_dot(6, 7) = out_6_7;
      out_JF_x_dot(10, 7) = out_10_7;
      out_JF_x_dot(7, 8) = out_7_8;
      out_JF_x_dot(10, 8) = out_10_8;
      out_JF_x_dot(8, 9) = out_8_9;
      out_JF_x_dot(10, 9) = out_10_9;
      out_JF_x_dot(10, 10) = out_10_10;
    end % JF_x_dot
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_v = JF_v( ~, ~, ~, ~, ~ )
      % Evaluate the Jacobian of F with respect to v.

      % Extract properties
      % No properties

      % Extract inputs

      % Evaluate function
      % No body

      % Store outputs
      out_JF_v = zeros(10, 0);
    end % JF_v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_v = v( ~, ~, ~ )
      % Evaluate the the veils v.

      % Extract properties
      % No properties

      % Extract inputs

      % Evaluate function
      % No body

      % Store outputs
      out_v = zeros(0, 1);
    end % v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jv_x = Jv_x( ~, ~, ~, ~ )
      % Evaluate the Jacobian of v with respect to x.

      % Extract properties
      % No properties

      % Extract inputs

      % Evaluate function
      % No body

      % Store outputs
      out_Jv_x = zeros(0, 10);
    end % Jv_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_h = h( this, in_1, ~, ~ )
      % Calculate the residual of the invariants h.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);

      % Evaluate function
      t1 = ell ^ 2;
      t2 = x__1 ^ 2;
      t3 = y__1 ^ 2;
      out_1 = t1 - t2 - t3;
      t4 = c ^ 2;
      t5 = lambda__1 ^ 2;
      t7 = c * ell;
      t10 = x__2 ^ 2;
      t11 = y__2 ^ 2;
      out_2 = t5 * t4 + 2 * lambda__1 * t7 + t1 - t10 - t11;
      t12 = x__1 * u__1;
      t14 = y__1 * v__1 + t12;
      out_3 = 2 * t14;
      t21 = u__1 ^ 2;
      t23 = v__1 ^ 2;
      out_4 = 2 * g * y__1 + 4 * lambda__1 * t2 + 4 * lambda__1 * t3 - 2 * t21 - 2 * t23;
      t39 = ell * g;
      t42 = t2 + t3;
      t43 = x__2 * u__2;
      t45 = y__2 * v__2 + t43;
      t49 = 0.1e1 / c;
      t52 = c * lambda__1 + ell;
      out_5 = 0.1e1 / t52 * t49 * (-16 * t5 * t14 * t4 + lambda__1 * (v__1 * (-6 * g * t4 - 16 * y__1 * t7) - 16 * t12 * t7) - 6 * t39 * v__1 * c - 4 * t45 * t42);
      t54 = t4 ^ 2;
      t56 = t5 ^ 2;
      t61 = ell * t4 * c;
      t81 = g ^ 2;
      t82 = t81 * c;
      t83 = t21 * ell;
      t85 = t23 * ell;
      t103 = u__2 ^ 2;
      t106 = v__2 ^ 2;
      t109 = t1 * ell;
      t111 = 0.4e1 / 0.9e1 * lambda__2 * t10 * c + 0.4e1 / 0.9e1 * lambda__2 * t11 * c + 0.2e1 / 0.9e1 * c * y__2 * g - 0.2e1 / 0.9e1 * t103 * c - 0.2e1 / 0.9e1 * t106 * c + 0.16e2 / 0.9e1 * t109;
      t113 = v__1 * t43;
      t115 = y__2 * v__1 * v__2;
      t116 = t1 * g;
      t124 = x__1 * t45;
      t135 = lambda__2 * t10;
      t143 = 0.8e1 / 0.9e1 * t135 + 0.8e1 / 0.9e1 * lambda__2 * t11 + 0.4e1 / 0.9e1 * y__2 * g - 0.4e1 / 0.9e1 * t103 - 0.4e1 / 0.9e1 * t106;
      t179 = t11 * (-8 * t1 * lambda__2 - 4 * t106) + y__2 * (-8 * v__2 * t43 - 4 * t116) + t103 * (4 * t1 - 4 * t10) - 8 * t1 * t135 + 4 * t106 * t1;
      t193 = t52 ^ 2;
      out_6 = t49 / t193 / t52 * (-32 * t56 * lambda__1 * t42 * t54 + t56 * (-96 * t3 * t61 - 28 * g * y__1 * t54 - 96 * t2 * t61 + 16 * (t21 + t23) * t54) - 6 * t5 * lambda__1 * (16 * t1 * t3 + 14 * t39 * c * y__1 + 16 * t2 * t1 + (t82 - 8 * t83 - 8 * t85) * c) * t4 - 18 * t5 * (t3 * t111 - 0.4e1 / 0.3e1 * y__1 * (t113 + t115 - 0.7e1 / 0.2e1 * t116) * c + t2 * t111 - 0.4e1 / 0.3e1 * t124 * c * u__1 + (t82 - 0.8e1 / 0.3e1 * t83 - 0.8e1 / 0.3e1 * t85) * t7) * c - 18 * lambda__1 * (t3 * t143 + y__1 * (-0.8e1 / 0.3e1 * t113 - 0.8e1 / 0.3e1 * t115 + 0.14e2 / 0.9e1 * t116) + t2 * t143 - 0.8e1 / 0.3e1 * x__1 * t45 * u__1 + (t82 - 0.8e1 / 0.9e1 * t83 - 0.8e1 / 0.9e1 * t85) * ell) * t7 + t3 * t179 + 24 * y__1 * t45 * v__1 * t1 + t2 * t179 + 24 * t124 * u__1 * t1 - 6 * t81 * t109 * c);

      % Store outputs
      out_h = zeros(6, 1);
      out_h(1) = out_1;
      out_h(2) = out_2;
      out_h(3) = out_3;
      out_h(4) = out_4;
      out_h(5) = out_5;
      out_h(6) = out_6;
    end % h
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jh_x = Jh_x( this, in_1, ~, ~ )
      % Calculate the Jacobian of h with respect to x.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);

      % Evaluate function
      t1 = 2 * x__1;
      out_1_1 = -t1;
      out_3_1 = 2 * u__1;
      t2 = x__1 * lambda__1;
      out_4_1 = 8 * t2;
      t3 = c ^ 2;
      t5 = lambda__1 ^ 2;
      t8 = c * ell;
      t12 = x__2 * u__2;
      t14 = y__2 * v__2 + t12;
      t15 = t14 * x__1;
      t18 = 0.1e1 / c;
      t21 = c * lambda__1 + ell;
      t22 = 0.1e1 / t21;
      out_5_1 = t22 * t18 * (-16 * t5 * u__1 * t3 - 16 * u__1 * lambda__1 * t8 - 8 * t15);
      t23 = t3 ^ 2;
      t25 = t5 ^ 2;
      t26 = t25 * lambda__1;
      t29 = t3 * c;
      t30 = ell * t29;
      t34 = ell ^ 2;
      t36 = t5 * lambda__1;
      t40 = x__2 ^ 2;
      t41 = t40 * c;
      t44 = y__2 ^ 2;
      t45 = t44 * c;
      t48 = y__2 * c;
      t51 = u__2 ^ 2;
      t54 = v__2 ^ 2;
      t57 = t34 * ell;
      t59 = 0.4e1 / 0.9e1 * lambda__2 * t41 + 0.4e1 / 0.9e1 * lambda__2 * t45 + 0.2e1 / 0.9e1 * g * t48 - 0.2e1 / 0.9e1 * t51 * c - 0.2e1 / 0.9e1 * t54 * c + 0.16e2 / 0.9e1 * t57;
      t62 = u__1 * c;
      t69 = lambda__2 * t40;
      t77 = 0.8e1 / 0.9e1 * t69 + 0.8e1 / 0.9e1 * lambda__2 * t44 + 0.4e1 / 0.9e1 * y__2 * g - 0.4e1 / 0.9e1 * t51 - 0.4e1 / 0.9e1 * t54;
      t80 = t14 * u__1;
      t89 = -8 * t34 * lambda__2 - 4 * t54;
      t91 = t34 * g;
      t92 = 4 * t91;
      t94 = 8 * v__2 * t12;
      t98 = 4 * t34 - 4 * t40;
      t104 = t44 * t89 + y__2 * (-t92 - t94) + t51 * t98 - 8 * t34 * t69 + 4 * t54 * t34;
      t107 = u__1 * t34;
      t111 = t21 ^ 2;
      t113 = 0.1e1 / t111 / t21;
      out_6_1 = t18 * t113 * (-64 * t26 * x__1 * t23 - 192 * t25 * x__1 * t30 - 192 * t36 * x__1 * t34 * t3 - 18 * t5 * (2 * x__1 * t59 - 0.4e1 / 0.3e1 * t14 * t62) * c - 18 * lambda__1 * (2 * x__1 * t77 - 0.8e1 / 0.3e1 * t80) * t8 + 2 * x__1 * t104 + 24 * t14 * t107);
      t115 = 2 * y__1;
      out_1_2 = -t115;
      out_3_2 = 2 * v__1;
      out_4_2 = 8 * y__1 * lambda__1 + 2 * g;
      t125 = t14 * y__1;
      out_5_2 = t22 * t18 * (-16 * t5 * v__1 * t3 - 16 * v__1 * lambda__1 * t8 - 8 * t125);
      t129 = y__1 * t23;
      t138 = g * t8;
      t148 = v__1 * t12;
      t149 = y__2 * v__1;
      t150 = v__2 * t149;
      t153 = (t148 + t150 - 0.7e1 / 0.2e1 * t91) * c;
      t161 = 0.8e1 / 0.3e1 * t148;
      t162 = 0.8e1 / 0.3e1 * t150;
      t163 = 0.14e2 / 0.9e1 * t91;
      t170 = v__1 * t34;
      out_6_2 = t18 * t113 * (-64 * t26 * t129 + t25 * (-28 * g * t23 - 192 * y__1 * t30) - 6 * t36 * (32 * y__1 * t34 + 14 * t138) * t3 - 18 * t5 * (2 * y__1 * t59 - 0.4e1 / 0.3e1 * t153) * c - 18 * lambda__1 * (2 * y__1 * t77 - t161 - t162 + t163) * t8 + 2 * y__1 * t104 + 24 * t14 * t170);
      out_3_3 = t1;
      out_4_3 = -4 * u__1;
      out_5_3 = t22 * t18 * (-16 * t5 * x__1 * t3 - 16 * t2 * t8);
      t189 = t14 * c;
      t192 = t34 * c;
      t205 = t14 * t34;
      out_6_3 = t18 * t113 * (32 * t25 * u__1 * t23 + 96 * t36 * ell * u__1 * t29 - 18 * t5 * (-0.4e1 / 0.3e1 * x__1 * t189 - 0.16e2 / 0.3e1 * u__1 * t192) * c - 18 * lambda__1 * (-0.8e1 / 0.3e1 * t15 - 0.16e2 / 0.9e1 * t107) * t8 + 24 * x__1 * t205);
      out_3_4 = t115;
      out_4_4 = -4 * v__1;
      t218 = -6 * g * t3 - 16 * y__1 * t8;
      out_5_4 = t22 * t18 * (-16 * t5 * y__1 * t3 + lambda__1 * t218 - 6 * t138);
      out_6_4 = t18 * t113 * (32 * t25 * v__1 * t23 + 96 * t36 * v__1 * t30 - 18 * t5 * (-0.4e1 / 0.3e1 * y__1 * t189 - 0.16e2 / 0.3e1 * v__1 * t192) * c - 18 * lambda__1 * (-0.8e1 / 0.3e1 * t14 * y__1 - 0.16e2 / 0.9e1 * t170) * t8 + 24 * y__1 * t205);
      out_2_5 = 2 * lambda__1 * t3 + 2 * t8;
      t251 = x__1 ^ 2;
      t252 = y__1 ^ 2;
      t253 = t251 + t252;
      out_4_5 = 4 * t253;
      t254 = x__1 * u__1;
      t255 = y__1 * v__1;
      t257 = (t254 + t255) * t3;
      t260 = v__1 * t218;
      t262 = 16 * t254 * t8;
      t270 = v__1 * c;
      t271 = ell * g;
      out_5_5 = t22 * t18 * (-32 * lambda__1 * t257 + t260 - t262) - 0.1e1 / t111 * (-16 * t5 * t257 + lambda__1 * (t260 - t262) - 6 * t271 * t270 - 4 * t14 * t253);
      t279 = t253 * t23;
      t288 = u__1 ^ 2;
      t289 = v__1 ^ 2;
      t293 = -96 * t252 * t30 - 28 * g * t129 - 96 * t251 * t30 + 16 * (t288 + t289) * t23;
      t303 = g ^ 2;
      t304 = t303 * c;
      t305 = t288 * ell;
      t307 = t289 * ell;
      t312 = (16 * t34 * t252 + 14 * t271 * c * y__1 + 16 * t251 * t34 + (t304 - 8 * t305 - 8 * t307) * c) * t3;
      t326 = (t252 * t59 - 0.4e1 / 0.3e1 * y__1 * t153 + t251 * t59 - 0.4e1 / 0.3e1 * t15 * t62 + (t304 - 0.8e1 / 0.3e1 * t305 - 0.8e1 / 0.3e1 * t307) * t8) * c;
      t339 = t252 * t77 + y__1 * (-t161 - t162 + t163) + t251 * t77 - 0.8e1 / 0.3e1 * x__1 * t80 + (t304 - 0.8e1 / 0.9e1 * t305 - 0.8e1 / 0.9e1 * t307) * ell;
      t365 = t111 ^ 2;
      out_6_5 = t18 * t113 * (-160 * t25 * t279 + 4 * t36 * t293 - 18 * t5 * t312 - 36 * lambda__1 * t326 - 18 * t339 * t8) - 3 / t365 * (-6 * t303 * t57 * c - 18 * lambda__1 * t339 * t8 + t251 * t104 + t252 * t104 + 24 * t15 * t107 + 24 * t125 * t170 + t25 * t293 - 32 * t26 * t279 - 6 * t36 * t312 - 18 * t5 * t326);
      out_2_6 = -2 * x__2;
      t371 = t22 * t18;
      out_5_6 = -4 * t371 * u__2 * t253;
      t374 = c * x__2;
      t378 = c * u__2;
      t384 = u__2 * x__1;
      t391 = lambda__2 * x__2;
      t414 = -16 * lambda__2 * x__2 * t34 - 8 * u__2 * v__2 * y__2 - 8 * x__2 * t51;
      out_6_6 = t18 * t113 * (-18 * t5 * (0.8e1 / 0.9e1 * t252 * lambda__2 * t374 - 0.4e1 / 0.3e1 * t255 * t378 + 0.8e1 / 0.9e1 * t251 * lambda__2 * t374 - 0.4e1 / 0.3e1 * t384 * t62) * c - 18 * lambda__1 * (0.16e2 / 0.9e1 * t252 * t391 - 0.8e1 / 0.3e1 * u__2 * v__1 * y__1 + 0.16e2 / 0.9e1 * t251 * t391 - 0.8e1 / 0.3e1 * u__1 * u__2 * x__1) * t8 + t252 * t414 + 24 * u__2 * y__1 * t170 + t251 * t414 + 24 * t384 * t107);
      out_2_7 = -2 * y__2;
      out_5_7 = -4 * t371 * v__2 * t253;
      t432 = 0.8e1 / 0.9e1 * lambda__2 * t48 + 0.2e1 / 0.9e1 * c * g;
      t434 = c * v__2;
      t438 = v__2 * x__1;
      t448 = 0.16e2 / 0.9e1 * y__2 * lambda__2 + 0.4e1 / 0.9e1 * g;
      t463 = 2 * y__2 * t89 - t92 - t94;
      out_6_7 = t18 * t113 * (-18 * t5 * (t252 * t432 - 0.4e1 / 0.3e1 * t255 * t434 + t251 * t432 - 0.4e1 / 0.3e1 * t438 * t62) * c - 18 * lambda__1 * (t252 * t448 - 0.8e1 / 0.3e1 * v__2 * v__1 * y__1 + t251 * t448 - 0.8e1 / 0.3e1 * u__1 * v__2 * x__1) * t8 + t252 * t463 + 24 * v__2 * y__1 * t170 + t251 * t463 + 24 * t438 * t107);
      out_5_8 = -4 * t371 * x__2 * t253;
      t478 = x__2 * y__1;
      t483 = x__2 * x__1;
      t509 = -8 * v__2 * x__2 * y__2 + 2 * u__2 * t98;
      out_6_8 = t18 * t113 * (-18 * t5 * (-0.4e1 / 0.9e1 * t252 * t378 - 0.4e1 / 0.3e1 * t478 * t270 - 0.4e1 / 0.9e1 * t251 * t378 - 0.4e1 / 0.3e1 * t483 * t62) * c - 18 * lambda__1 * (-0.8e1 / 0.9e1 * t252 * u__2 - 0.8e1 / 0.3e1 * v__1 * x__2 * y__1 - 0.8e1 / 0.9e1 * t251 * u__2 - 0.8e1 / 0.3e1 * u__1 * x__2 * x__1) * t8 + t252 * t509 + 24 * t478 * t170 + t251 * t509 + 24 * t483 * t107);
      out_5_9 = -4 * t371 * y__2 * t253;
      t527 = y__2 * x__1;
      t551 = -8 * y__2 * t12 + 8 * v__2 * t34 - 8 * t44 * v__2;
      out_6_9 = t18 * t113 * (-18 * t5 * (-0.4e1 / 0.9e1 * t252 * t434 - 0.4e1 / 0.3e1 * t255 * t48 - 0.4e1 / 0.9e1 * t251 * t434 - 0.4e1 / 0.3e1 * t527 * t62) * c - 18 * lambda__1 * (-0.8e1 / 0.9e1 * t252 * v__2 - 0.8e1 / 0.3e1 * y__1 * t149 - 0.8e1 / 0.9e1 * t251 * v__2 - 0.8e1 / 0.3e1 * u__1 * y__2 * x__1) * t8 + t252 * t551 + 24 * y__2 * y__1 * t170 + t251 * t551 + 24 * t527 * t107);
      t562 = 0.4e1 / 0.9e1 * t41 + 0.4e1 / 0.9e1 * t45;
      t570 = 0.8e1 / 0.9e1 * t40 + 0.8e1 / 0.9e1 * t44;
      t580 = -8 * t34 * t40 - 8 * t34 * t44;
      out_6_10 = t18 * t113 * (-18 * t5 * (t251 * t562 + t252 * t562) * c - 18 * lambda__1 * (t251 * t570 + t252 * t570) * t8 + t252 * t580 + t251 * t580);

      % Store outputs
      out_Jh_x = zeros(6, 10);
      out_Jh_x(1, 1) = out_1_1;
      out_Jh_x(3, 1) = out_3_1;
      out_Jh_x(4, 1) = out_4_1;
      out_Jh_x(5, 1) = out_5_1;
      out_Jh_x(6, 1) = out_6_1;
      out_Jh_x(1, 2) = out_1_2;
      out_Jh_x(3, 2) = out_3_2;
      out_Jh_x(4, 2) = out_4_2;
      out_Jh_x(5, 2) = out_5_2;
      out_Jh_x(6, 2) = out_6_2;
      out_Jh_x(3, 3) = out_3_3;
      out_Jh_x(4, 3) = out_4_3;
      out_Jh_x(5, 3) = out_5_3;
      out_Jh_x(6, 3) = out_6_3;
      out_Jh_x(3, 4) = out_3_4;
      out_Jh_x(4, 4) = out_4_4;
      out_Jh_x(5, 4) = out_5_4;
      out_Jh_x(6, 4) = out_6_4;
      out_Jh_x(2, 5) = out_2_5;
      out_Jh_x(4, 5) = out_4_5;
      out_Jh_x(5, 5) = out_5_5;
      out_Jh_x(6, 5) = out_6_5;
      out_Jh_x(2, 6) = out_2_6;
      out_Jh_x(5, 6) = out_5_6;
      out_Jh_x(6, 6) = out_6_6;
      out_Jh_x(2, 7) = out_2_7;
      out_Jh_x(5, 7) = out_5_7;
      out_Jh_x(6, 7) = out_6_7;
      out_Jh_x(5, 8) = out_5_8;
      out_Jh_x(6, 8) = out_6_8;
      out_Jh_x(5, 9) = out_5_9;
      out_Jh_x(6, 9) = out_6_9;
      out_Jh_x(6, 10) = out_6_10;
    end % Jh_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jh_v = Jh_v( ~, ~, ~, ~ )
      % Calculate the Jacobian of h with respect to v.

      % Extract properties
      % No properties

      % Extract inputs

      % Evaluate function
      % No body

      % Store outputs
      out_Jh_v = zeros(6, 0);
    end % Jh_v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out = in_domain( ~, ~, ~ )
      out = true;
    end % in_domain
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % 2Pendulum

% That's All Folks!
