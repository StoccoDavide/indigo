% +--------------------------------------------------------------------------+
% | 'Indigo' module version 1.0 - BSD 3-Clause License - Copyright (c) 2023  |
% | Current version authors:                                                 |
% |   Davide Stocco and Enrico Bertolazzi.                                   |
% +--------------------------------------------------------------------------+

% Matlab generated code for implicit system: NPendulum
% This file has been automatically generated by Indigo.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef NPendulum < Indigo.Systems.Implicit
  %
  % No class description provided.
  %
  properties (SetAccess = protected, Hidden = true)
    % User data
    m_g = 9.81;
    m_ell = 3.4;
    m_c = .1;
  end
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = NPendulum( varargin )
      % Class constructor.

      % Superclass constructor
      num_eqns = 10;
      num_veil = 0;
      num_invs = 6;
      this = this@Indigo.Systems.Implicit('NPendulum', num_eqns, num_veil, num_invs);

      % User data
      if (nargin == 0)
        % Keep default values
      elseif (nargin == 1 && isstruct(varargin{1}))
        this.m_g = varargin{1}.g;
        this.m_ell = varargin{1}.ell;
        this.m_c = varargin{1}.c;
      elseif (nargin == 3)
        this.m_g = varargin{1};
        this.m_ell = varargin{2};
        this.m_c = varargin{3};
      else
        error('wrong number of input arguments.');
      end
    end % NPendulum
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_F = F( this, in_1, in_2, in_3, t )
      % Evaluate the function F.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);
      x__1_dot = in_2(1);
      y__1_dot = in_2(2);
      u__1_dot = in_2(3);
      v__1_dot = in_2(4);
      lambda__1_dot = in_2(5);
      x__2_dot = in_2(6);
      y__2_dot = in_2(7);
      u__2_dot = in_2(8);
      v__2_dot = in_2(9);
      lambda__2_dot = in_2(10);

      % Evaluate function
      out_1 = x__1_dot - u__1;
      out_2 = y__1_dot - v__1;
      out_3 = 2 * x__1 * lambda__1 + u__1_dot;
      out_4 = 2 * y__1 * lambda__1 + g + v__1_dot;
      out_5 = x__2_dot - u__2;
      out_6 = y__2_dot - v__2;
      t5 = x__2 * lambda__2;
      out_7 = 2 * t5 + u__2_dot;
      out_8 = 2 * y__2 * lambda__2 + g + v__2_dot;
      t10 = c * lambda__1 + ell;
      t13 = x__2 * u__2;
      out_9 = 2 * c * t10 * lambda__1_dot - 2 * y__2 * v__2 - 2 * t13;
      t16 = x__2 ^ 2;
      t17 = y__2 ^ 2;
      t19 = x__1 ^ 2;
      t20 = y__1 ^ 2;
      t21 = t19 + t20;
      t23 = t10 ^ 2;
      t24 = t23 ^ 2;
      t28 = c ^ 2;
      t29 = t28 ^ 2;
      t31 = x__1 * u__1;
      t32 = y__1 * v__1;
      t33 = t31 + t32;
      t35 = lambda__1 ^ 2;
      t36 = t35 * lambda__1;
      t37 = t35 ^ 2;
      t42 = c * g;
      t55 = t21 * v__2;
      t58 = v__1 * c;
      t64 = x__2 * t19;
      t65 = u__2 * t64;
      t67 = ell ^ 2;
      t70 = t67 * t31;
      t77 = c * lambda__2;
      t79 = t17 * t33 * t77;
      t81 = t77 + 14 * ell;
      t90 = c * (v__1 + 0.13e2 / 0.8e1 * v__2) * g * y__1 / 2;
      t91 = t77 / 2;
      t95 = u__1 ^ 2;
      t96 = v__1 ^ 2;
      t97 = t95 + t96;
      t99 = 0.5e1 / 0.8e1 * t97 * c;
      t103 = t31 * t42 / 2;
      t107 = 0.3e1 / 0.16e2 * v__2 * t42;
      t112 = v__2 ^ 2;
      t114 = t112 * t58 / 2;
      t115 = t16 * c;
      t117 = lambda__2 * v__1 * t115;
      t118 = c * x__2;
      t120 = g * u__2 * t118;
      t121 = 0.13e2 / 0.16e2 * t120;
      t122 = u__2 ^ 2;
      t123 = t122 * c;
      t124 = t67 * ell;
      t134 = x__1 * t112 * c * u__1 / 2;
      t135 = t19 * v__2;
      t137 = 0.3e1 / 0.16e2 * t135 * t42;
      t141 = lambda__2 * t115;
      t143 = t123 / 2;
      t147 = t97 * u__2;
      t148 = x__2 * t147;
      t149 = t67 * g;
      t150 = v__1 * t149;
      t161 = t77 + 0.21e2 / 0.4e1 * ell;
      t172 = u__2 * t161;
      t198 = t17 * y__2;
      t200 = t198 * t55 * t77;
      t202 = g * v__2;
      t205 = t20 * (u__2 * t5 + t202 / 2);
      t206 = t67 * lambda__2;
      t213 = 0.4e1 / 0.3e1 * t112 * u__1;
      t215 = x__1 * t202 / 2;
      t216 = u__1 * t67;
      t219 = x__1 * x__2 * u__2;
      t220 = -16 * t216 + t219;
      t227 = t112 * v__2;
      t228 = t227 * c;
      t229 = t228 / 2;
      t234 = -t143 + t141 - 8 * t67 * (t77 + 0.7e1 / 0.3e1 * ell);
      t236 = t120 / 2;
      t239 = v__1 * t13;
      t249 = t19 * t228 / 2;
      t254 = 0.8e1 / 0.3e1 * u__1 * u__2 * x__1 * t118;
      t255 = t67 * c;
      t256 = t97 * t255;
      t265 = t112 * u__2;
      t267 = t265 * t118 / 2;
      t268 = v__2 * t67;
      t269 = t268 * t42;
      t271 = u__2 * t234;
      t279 = t206 + t122 / 12;
      t293 = c * x__1;
      t298 = t19 * t268 * t42;
      t305 = t67 ^ 2;
      t327 = t219 - 0.16e2 / 0.3e1 * t216;
      t338 = -t143 + t141 - 0.8e1 / 0.3e1 * t67 * (t77 + 0.7e1 / 0.8e1 * ell);
      t349 = t19 * t338;
      t362 = t112 * v__1 * t67;
      t365 = t206 + t122 / 4;
      t368 = x__2 * g;
      t369 = u__2 * t67;
      t370 = t369 * t368;
      t372 = t122 * t67;
      t373 = v__1 * t372;
      t384 = t372 / 2;
      t412 = t305 * lambda__2;
      t414 = 64 * v__1 * t412;
      t426 = (t219 - 0.8e1 / 0.3e1 * t216) * x__1;
      t431 = t227 * t67;
      t439 = t16 * (24 * t206 + 36 * t122) - 32 * t412 - 12 * t372;
      t444 = t305 * g;
      t469 = t67 * x__2;
      t476 = t16 * (t206 + t122 / 2);
      t479 = u__2 * (t476 - 0.4e1 / 0.3e1 * t412 - t384);
      t518 = -8 * t24 * lambda__2_dot * t21 * (t16 + t17) - 128 * t37 * t36 * t33 * t29 * t28 - 60 * t37 * t35 * (v__1 * t42 + 0.32e2 / 0.3e1 * y__1 * ell * v__1 + 0.32e2 / 0.3e1 * ell * u__1 * x__1) * t29 * c - 300 * t37 * lambda__1 * (0.28e2 / 0.75e2 * y__2 * t55 + ell * g * t58 + 0.28e2 / 0.75e2 * u__2 * x__2 * t20 + 0.28e2 / 0.75e2 * t65 + 0.64e2 / 0.15e2 * t67 * t32 + 0.64e2 / 0.15e2 * t70) * t29 - 64 * t37 * t28 * c * (t79 + y__2 * (t20 * t81 * v__2 / 2 + t90 + v__2 * (t19 * (t91 + 7 * ell) - t99) + t103) + t20 * (t107 + t81 * t13 / 2) + y__1 * (-t114 + t117 + t121 - (t123 - 40 * t124) * v__1 / 2) - t134 + t137 + t19 * t81 * t13 / 2 + x__1 * (t141 + 20 * t124 - t143) * u__1 - 0.5e1 / 0.8e1 * (t148 - 15 * t150) * c) - 256 * t36 * ell * (t79 + y__2 * (t20 * v__2 * t161 / 2 + t90 + v__2 * (t19 * (t91 + 0.21e2 / 0.8e1 * ell) - t99) + t103) + t20 * (t107 + x__2 * t172 / 2) + y__1 * (-t114 + t117 + t121 - (t123 - 5 * t124) * v__1 / 2) - t134 + t137 + t64 * t172 / 2 + x__1 * (t141 + 0.5e1 / 0.2e1 * t124 - t143) * u__1 - 0.5e1 / 0.8e1 * c * (t148 - 0.15e2 / 0.4e1 * t150)) * t28 + 24 * t35 * (t200 + t17 * c * (t205 - 16 * y__1 * (t206 + t112 / 12) * v__1 + (t220 * lambda__2 - t213 + t215) * x__1) + y__2 * (t20 * (t234 * v__2 - t229 + t236) - 0.8e1 / 0.3e1 * y__1 * (v__2 * (t239 + 0.39e2 / 0.8e1 * t149) + 3 * t150) * c - t249 + v__2 * (t19 * t234 - t254 + 10 * t256) + t220 * x__1 * t42 / 2) + t20 * (t271 * x__2 - t267 - 3 * t269) + y__1 * (8 * t112 * v__1 * t255 - 16 * t16 * t279 * t58 - 13 * u__2 * t149 * t118 + 8 * t67 * v__1 * (t123 - 0.2e1 / 0.3e1 * t124)) - t112 * t220 * t293 / 2 - 3 * t298 + t64 * t271 - 16 * x__1 * (t16 * t279 * c - t122 * t255 / 2 + t305 * ell / 3) * u__1 + 10 * t67 * c * (t148 - 0.5e1 / 0.4e1 * t150)) * c + 48 * lambda__1 * ell * (t200 + t17 * (t205 - 0.16e2 / 0.3e1 * y__1 * v__1 * (t206 + t112 / 4) + (t327 * lambda__2 - t213 + t215) * x__1) * c + y__2 * (t20 * (t338 * v__2 - t229 + t236) - 0.8e1 / 0.3e1 * y__1 * (v__2 * (t239 + 0.13e2 / 0.8e1 * t149) + t150) * c - t249 + v__2 * (t349 - t254 + 0.10e2 / 0.3e1 * t256) + g * t327 * t293 / 2) + t20 * (t13 * t338 - t267 - t269) - 0.16e2 / 0.3e1 * y__1 * (-t362 / 2 + t16 * t365 * v__1 + 0.13e2 / 0.16e2 * t370 - t373 / 2) * c - t112 * t327 * t293 / 2 - t298 + t349 * t13 - 0.16e2 / 0.3e1 * t31 * c * (t16 * t365 - t384) + 0.10e2 / 0.3e1 * t67 * (t148 - 0.3e1 / 0.8e1 * t150) * c) + 24 * t198 * v__2 * t21 * (t206 + t112 / 2) + t17 * (t20 * (36 * t112 * t13 + 12 * t149 * v__2 + 24 * t369 * t5) + y__1 * (-t414 - 32 * t362) + t112 * (-32 * t70 + 36 * t65) + 12 * t135 * t149 + 24 * t206 * t426) + y__2 * (t20 * (t439 * v__2 + 12 * t370 - 12 * t431) + y__1 * (v__2 * (-64 * t369 * v__1 * x__2 - 52 * t444) - 32 * v__1 * t444) - 12 * t19 * t431 + v__2 * (-64 * t13 * t31 * t67 + t19 * t439 + 40 * t305 * t97) + 12 * t149 * t426) + t20 * (-12 * t265 * t469 - 12 * t444 * v__2 + 24 * t479 * x__2) + y__1 * (32 * t112 * v__1 * t305 + t16 * (-t414 - 32 * t373) - 52 * u__2 * t305 * t368 + 32 * v__1 * t122 * t305) + t112 * (-12 * t19 * t469 * u__2 + 32 * t305 * u__1 * x__1) - 12 * t444 * t135 + 24 * t64 * t479 - 64 * x__1 * t67 * (t476 - t384) * u__1 + 40 * t147 * t305 * x__2;
      out_10 = 0.1e1 / t24 / t10 / c * t518;

      % Store outputs
      out_F = zeros(10, 1);
      out_F(1) = out_1;
      out_F(2) = out_2;
      out_F(3) = out_3;
      out_F(4) = out_4;
      out_F(5) = out_5;
      out_F(6) = out_6;
      out_F(7) = out_7;
      out_F(8) = out_8;
      out_F(9) = out_9;
      out_F(10) = out_10;
    end % F
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_x = JF_x( this, in_1, in_2, in_3, t )
      % Evaluate the Jacobian of F with respect to x.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);
      x__1_dot = in_2(1);
      y__1_dot = in_2(2);
      u__1_dot = in_2(3);
      v__1_dot = in_2(4);
      lambda__1_dot = in_2(5);
      x__2_dot = in_2(6);
      y__2_dot = in_2(7);
      u__2_dot = in_2(8);
      v__2_dot = in_2(9);
      lambda__2_dot = in_2(10);

      % Evaluate function
      out_3_1 = 2 * lambda__1;
      t1 = x__2 ^ 2;
      t2 = y__2 ^ 2;
      t3 = t1 + t2;
      t6 = c * lambda__1 + ell;
      t7 = t6 ^ 2;
      t8 = t7 ^ 2;
      t9 = t8 * lambda__2_dot;
      t12 = c ^ 2;
      t13 = t12 ^ 2;
      t14 = t13 * t12;
      t16 = lambda__1 ^ 2;
      t17 = t16 * lambda__1;
      t18 = t16 ^ 2;
      t19 = t18 * t17;
      t22 = t13 * c;
      t23 = ell * t22;
      t24 = t18 * t16;
      t31 = x__2 * x__1;
      t32 = u__2 * t31;
      t34 = ell ^ 2;
      t35 = u__1 * t34;
      t39 = t18 * lambda__1;
      t42 = c * lambda__2;
      t44 = t2 * u__1 * t42;
      t45 = t42 / 2;
      t47 = t45 + 7 * ell;
      t51 = c * g;
      t53 = u__1 * t51 / 2;
      t56 = u__1 * c;
      t57 = v__2 ^ 2;
      t59 = t57 * t56 / 2;
      t60 = v__2 * x__1;
      t62 = 0.3e1 / 0.8e1 * t60 * t51;
      t63 = x__2 * u__2;
      t65 = t42 + 14 * ell;
      t68 = t1 * c;
      t69 = lambda__2 * t68;
      t70 = t34 * ell;
      t71 = 20 * t70;
      t72 = u__2 ^ 2;
      t73 = t72 * c;
      t74 = t73 / 2;
      t75 = t69 + t71 - t74;
      t76 = t75 * u__1;
      t78 = t12 * c;
      t83 = t45 + 0.21e2 / 0.8e1 * ell;
      t90 = t42 + 0.21e2 / 0.4e1 * ell;
      t91 = u__2 * t90;
      t93 = 0.5e1 / 0.2e1 * t70;
      t94 = t69 + t93 - t74;
      t95 = t94 * u__1;
      t98 = t17 * ell;
      t101 = t2 * y__2;
      t104 = 2 * t101 * t60 * t42;
      t106 = 0.4e1 / 0.3e1 * t57 * u__1;
      t107 = g * v__2;
      t109 = x__1 * t107 / 2;
      t111 = -16 * t35 + t32;
      t112 = t111 * lambda__2;
      t113 = x__2 * lambda__2;
      t116 = u__2 * t113 + t107 / 2;
      t117 = t116 * x__1;
      t121 = t57 * v__2;
      t122 = t121 * c;
      t123 = x__1 * t122;
      t127 = 8 * t34 * (t42 + 0.7e1 / 0.3e1 * ell);
      t128 = -t74 + t69 - t127;
      t131 = c * x__2;
      t132 = u__1 * u__2;
      t133 = t132 * t131;
      t134 = 0.8e1 / 0.3e1 * t133;
      t140 = t32 * t51 / 2;
      t146 = c * x__1;
      t147 = t57 * u__2;
      t148 = x__2 * t147;
      t150 = t148 * t146 / 2;
      t151 = v__2 * t34;
      t153 = x__1 * t151 * t51;
      t155 = u__2 * t128;
      t158 = t34 * lambda__2;
      t160 = t158 + t72 / 12;
      t162 = t1 * t160 * c;
      t163 = t34 * c;
      t166 = t34 ^ 2;
      t169 = t162 - t72 * t163 / 2 + t166 * ell / 3;
      t170 = t169 * u__1;
      t177 = t32 - 0.16e2 / 0.3e1 * t35;
      t178 = t177 * lambda__2;
      t185 = 0.8e1 / 0.3e1 * t34 * (t42 + 0.7e1 / 0.8e1 * ell);
      t186 = -t74 + t69 - t185;
      t187 = x__1 * t186;
      t191 = t177 * c;
      t202 = t158 + t72 / 4;
      t203 = t1 * t202;
      t204 = t72 * t34;
      t205 = t204 / 2;
      t207 = c * (t203 - t205);
      t215 = t158 + t57 / 2;
      t217 = t101 * v__2;
      t224 = t34 * g;
      t228 = t32 - 0.8e1 / 0.3e1 * t35;
      t232 = u__2 * t34;
      t233 = lambda__2 * t232;
      t238 = t121 * t34;
      t243 = 24 * t158 + 36 * t72;
      t244 = t1 * t243;
      t245 = t166 * lambda__2;
      t246 = 32 * t245;
      t247 = 12 * t204;
      t248 = t244 - t246 - t247;
      t259 = u__2 * t224;
      t264 = u__1 * t166;
      t266 = t31 * t232;
      t270 = t166 * g;
      t274 = t158 + t72 / 2;
      t275 = t1 * t274;
      t277 = t275 - 0.4e1 / 0.3e1 * t245 - t205;
      t278 = u__2 * t277;
      t281 = t275 - t205;
      t282 = t281 * u__1;
      t285 = -16 * t9 * x__1 * t3 - 128 * t19 * u__1 * t14 - 640 * t24 * u__1 * t23 - 300 * t39 * (0.56e2 / 0.75e2 * x__1 * y__2 * v__2 + 0.56e2 / 0.75e2 * t32 + 0.64e2 / 0.15e2 * t35) * t13 - 64 * t18 * t78 * (t44 + y__2 * (2 * v__2 * x__1 * t47 + t53) - t59 + t62 + x__1 * t65 * t63 + t76) - 256 * t98 * (t44 + y__2 * (2 * v__2 * x__1 * t83 + t53) - t59 + t62 + t31 * t91 + t95) * t12 + 24 * t16 * (t104 + t2 * c * (-t106 + t109 + t112 + t117) + y__2 * (-t123 + v__2 * (2 * x__1 * t128 - t134) + t111 * t51 / 2 + t140) - t57 * t111 * c / 2 - t150 - 6 * t153 + 2 * t31 * t155 - 16 * t170) * c + 48 * lambda__1 * ell * (t104 + t2 * (-t106 + t109 + t178 + t117) * c + y__2 * (-t123 + v__2 * (2 * t187 - t134) + g * t191 / 2 + t140) - t57 * t191 / 2 - t150 - 2 * t153 + 2 * t187 * t63 - 0.16e2 / 0.3e1 * u__1 * t207) + 48 * t217 * x__1 * t215 + t2 * (t57 * (-32 * t35 + 72 * t32) + 24 * t60 * t224 + 24 * t34 * lambda__2 * t228 + 24 * t233 * t31) + y__2 * (-24 * x__1 * t238 + v__2 * (-64 * t232 * u__1 * x__2 + 2 * x__1 * t248) + 12 * t34 * g * t228 + 12 * t259 * t31) + t57 * (32 * t264 - 24 * t266) - 24 * t270 * t60 + 48 * t31 * t278 - 64 * t34 * t282;
      t286 = 0.1e1 / c;
      t289 = 0.1e1 / t8 / t6;
      out_10_1 = t289 * t286 * t285;
      out_4_2 = out_3_1;
      t305 = t34 * v__1;
      t312 = t2 * v__1 * t42;
      t313 = t65 * v__2;
      t317 = c * (v__1 + 0.13e2 / 0.8e1 * v__2);
      t319 = g * t317 / 2;
      t323 = 0.3e1 / 0.16e2 * v__2 * t51;
      t326 = t323 + t65 * t63 / 2;
      t329 = v__1 * c;
      t331 = t57 * t329 / 2;
      t332 = lambda__2 * v__1;
      t333 = t332 * t68;
      t335 = g * u__2 * t131;
      t336 = 0.13e2 / 0.16e2 * t335;
      t340 = (t73 - 40 * t70) * v__1 / 2;
      t345 = v__2 * t90;
      t351 = t323 + x__2 * t91 / 2;
      t357 = (t73 - 5 * t70) * v__1 / 2;
      t362 = y__1 * v__2;
      t365 = 2 * t101 * t362 * t42;
      t367 = 2 * y__1 * t116;
      t369 = t158 + t57 / 12;
      t370 = t369 * v__1;
      t375 = t122 / 2;
      t377 = t335 / 2;
      t378 = v__2 * t128 - t375 + t377;
      t381 = v__1 * t63;
      t383 = t381 + 0.39e2 / 0.8e1 * t224;
      t385 = v__1 * t224;
      t388 = (v__2 * t383 + 3 * t385) * c;
      t393 = t147 * t131 / 2;
      t394 = t151 * t51;
      t397 = x__2 * t155 - t393 - 3 * t394;
      t402 = 8 * t57 * v__1 * t163;
      t405 = 16 * t1 * t160 * t329;
      t407 = 13 * t259 * t131;
      t409 = t73 - 0.2e1 / 0.3e1 * t70;
      t412 = 8 * t34 * v__1 * t409;
      t418 = t158 + t57 / 4;
      t419 = v__1 * t418;
      t425 = v__2 * t186 - t375 + t377;
      t429 = t381 + 0.13e2 / 0.8e1 * t224;
      t432 = (v__2 * t429 + t385) * c;
      t437 = t186 * t63 - t393 - t394;
      t440 = t57 * t305;
      t442 = t202 * v__1;
      t444 = x__2 * g;
      t445 = t232 * t444;
      t447 = v__1 * t204;
      t450 = (-t440 / 2 + t1 * t442 + 0.13e2 / 0.16e2 * t445 - t447 / 2) * c;
      t464 = 24 * t113 * t232 + 12 * v__2 * t224 + 36 * t148;
      t468 = 64 * v__1 * t245;
      t469 = 32 * t440;
      t475 = v__2 * t248 - 12 * t238 + 12 * t445;
      t479 = v__1 * x__2;
      t482 = -64 * t479 * t232 - 52 * t270;
      t483 = v__2 * t482;
      t485 = 32 * v__1 * t270;
      t488 = t34 * x__2;
      t495 = -12 * t147 * t488 - 12 * v__2 * t270 + 24 * x__2 * t278;
      t498 = v__1 * t166;
      t500 = 32 * t57 * t498;
      t502 = -t468 - 32 * t447;
      t503 = t1 * t502;
      t504 = u__2 * t166;
      t506 = 52 * t504 * t444;
      t507 = t72 * t166;
      t509 = 32 * v__1 * t507;
      t510 = -16 * t9 * y__1 * t3 - 128 * t19 * v__1 * t14 - 640 * t24 * v__1 * t23 - 300 * t39 * (0.56e2 / 0.75e2 * y__1 * y__2 * v__2 + 0.56e2 / 0.75e2 * y__1 * x__2 * u__2 + 0.64e2 / 0.15e2 * t305) * t13 - 64 * t18 * t78 * (t312 + y__2 * (y__1 * t313 + t319) + 2 * y__1 * t326 - t331 + t333 + t336 - t340) - 256 * t98 * (t312 + y__2 * (y__1 * t345 + t319) + 2 * y__1 * t351 - t331 + t333 + t336 - t357) * t12 + 24 * t16 * (t365 + t2 * c * (t367 - 16 * t370) + y__2 * (2 * y__1 * t378 - 0.8e1 / 0.3e1 * t388) + 2 * y__1 * t397 + t402 - t405 - t407 + t412) * c + 48 * lambda__1 * ell * (t365 + t2 * (t367 - 0.16e2 / 0.3e1 * t419) * c + y__2 * (2 * y__1 * t425 - 0.8e1 / 0.3e1 * t432) + 2 * y__1 * t437 - 0.16e2 / 0.3e1 * t450) + 48 * t217 * y__1 * t215 + t2 * (2 * y__1 * t464 - t468 - t469) + y__2 * (2 * y__1 * t475 + t483 - t485) + 2 * y__1 * t495 + t500 + t503 - t506 + t509;
      out_10_2 = t289 * t286 * t510;
      out_1_3 = -1;
      t523 = t2 * x__1 * t42;
      t529 = y__2 * (-0.5e1 / 0.4e1 * v__2 * t56 + x__1 * t51 / 2);
      t530 = t57 * c;
      t532 = x__1 * t530 / 2;
      t534 = 0.5e1 / 0.4e1 * t133;
      t544 = 0.4e1 / 0.3e1 * t57;
      t548 = t2 * c;
      t550 = u__2 * x__1;
      t552 = 0.8e1 / 0.3e1 * t550 * t131;
      t553 = u__1 * t163;
      t557 = t34 * x__1;
      t558 = t557 * t51;
      t562 = t57 * t34;
      t563 = t562 * t146;
      t568 = t34 * t131 * t132;
      t592 = x__1 * t166;
      t612 = t166 * x__2;
      t615 = -128 * t19 * x__1 * t14 - 640 * t24 * x__1 * t23 - 1280 * t39 * t34 * x__1 * t13 - 64 * t18 * t78 * (x__1 * t75 + t523 + t529 - t532 - t534) - 256 * t98 * (x__1 * t94 + t523 + t529 - t532 - t534) * t12 + 24 * t16 * (t548 * (-t544 - 16 * t158) * x__1 + y__2 * (v__2 * (-t552 + 20 * t553) - 8 * t558) + 8 * t563 - 16 * x__1 * t169 + 20 * t568) * c + 48 * lambda__1 * ell * (t2 * (-t544 - 0.16e2 / 0.3e1 * t158) * t146 + y__2 * (v__2 * (-t552 + 0.20e2 / 0.3e1 * t553) - 0.8e1 / 0.3e1 * t558) + 0.8e1 / 0.3e1 * t563 - 0.16e2 / 0.3e1 * x__1 * t207 + 0.20e2 / 0.3e1 * t568) + t2 * (-32 * x__1 * t562 - 64 * lambda__2 * t592) + y__2 * (v__2 * (80 * t264 - 64 * t266) - 32 * g * t592) + 32 * t57 * t592 - 64 * x__1 * t34 * t281 + 80 * t132 * t612;
      out_10_3 = t289 * t286 * t615;
      out_2_4 = -1;
      t620 = y__1 * ell;
      t634 = t2 * y__1;
      t635 = t634 * t42;
      t637 = c * y__1 * g;
      t642 = y__2 * (t637 / 2 - 0.5e1 / 0.4e1 * v__2 * t329);
      t643 = t530 / 2;
      t647 = 2 * t381;
      t669 = v__2 * t63;
      t674 = v__1 * v__2;
      t675 = t674 * t163;
      t719 = 64 * t245;
      t725 = v__2 * x__2;
      t726 = t725 * t232;
      t742 = u__2 * v__1;
      t745 = -128 * t19 * y__1 * t14 - 60 * t24 * (t51 + 0.32e2 / 0.3e1 * t620) * t22 - 300 * t39 * (c * ell * g + 0.64e2 / 0.15e2 * t34 * y__1) * t13 - 64 * t18 * t78 * (t635 + t642 + y__1 * (-t643 + t69 - t74 + t71) - 0.5e1 / 0.8e1 * (-15 * t224 + t647) * c) - 256 * t98 * (t635 + t642 + y__1 * (-t643 + t69 - t74 + t93) - 0.5e1 / 0.8e1 * c * (t647 - 0.15e2 / 0.4e1 * t224)) * t12 + 24 * t16 * (-16 * t548 * y__1 * t369 + y__2 * (-0.8e1 / 0.3e1 * y__1 * (3 * t224 + t669) * c + 20 * t675) + y__1 * (8 * t57 * t163 + 8 * t34 * t409 - 16 * t162) + 10 * t34 * c * (t647 - 0.5e1 / 0.4e1 * t224)) * c + 48 * lambda__1 * ell * (-0.16e2 / 0.3e1 * t634 * t418 * c + y__2 * (-0.8e1 / 0.3e1 * y__1 * (t224 + t669) * c + 0.20e2 / 0.3e1 * t675) - 0.16e2 / 0.3e1 * y__1 * (-t562 / 2 + t203 - t205) * c + 0.10e2 / 0.3e1 * t34 * (t647 - 0.3e1 / 0.8e1 * t224) * c) + t2 * y__1 * (-t719 - 32 * t562) + y__2 * (y__1 * (-32 * t270 - 64 * t726) + 80 * v__2 * t498) + y__1 * (32 * t57 * t166 + t1 * (-t719 - 32 * t204) + 32 * t507) + 80 * t742 * t612;
      out_10_4 = t289 * t286 * t745;
      out_3_5 = 2 * x__1;
      out_4_5 = 2 * y__1;
      out_9_5 = 2 * lambda__1_dot * t12;
      t748 = x__1 ^ 2;
      t749 = y__1 ^ 2;
      t750 = t748 + t749;
      t751 = t750 * t3;
      t757 = x__1 * u__1;
      t758 = y__1 * v__1;
      t759 = t757 + t758;
      t760 = t759 * t14;
      t770 = (v__1 * t51 + 0.32e2 / 0.3e1 * v__1 * t620 + 0.32e2 / 0.3e1 * ell * u__1 * x__1) * t22;
      t773 = t750 * v__2;
      t778 = x__2 * t749;
      t779 = u__2 * t778;
      t781 = x__2 * t748;
      t782 = u__2 * t781;
      t784 = t34 * t758;
      t786 = t34 * t757;
      t789 = (0.28e2 / 0.75e2 * y__2 * t773 + ell * g * t329 + 0.28e2 / 0.75e2 * t779 + 0.28e2 / 0.75e2 * t782 + 0.64e2 / 0.15e2 * t784 + 0.64e2 / 0.15e2 * t786) * t13;
      t793 = t2 * t759 * t42;
      t795 = t749 * t313 / 2;
      t798 = g * y__1 * t317 / 2;
      t799 = t748 * t47;
      t800 = u__1 ^ 2;
      t801 = v__1 ^ 2;
      t802 = t800 + t801;
      t803 = t802 * c;
      t804 = 0.5e1 / 0.8e1 * t803;
      t806 = v__2 * (t799 - t804);
      t808 = t757 * t51 / 2;
      t816 = x__1 * t57 * t56 / 2;
      t817 = t748 * v__2;
      t819 = 0.3e1 / 0.16e2 * t817 * t51;
      t824 = t802 * u__2;
      t825 = x__2 * t824;
      t831 = t78 * (t793 + y__2 * (t795 + t798 + t806 + t808) + t749 * t326 + y__1 * (-t331 + t333 + t336 - t340) - t816 + t819 + t748 * t65 * t63 / 2 + x__1 * t76 - 0.5e1 / 0.8e1 * (t825 - 15 * t385) * c);
      t835 = t749 * t345 / 2;
      t836 = t748 * t83;
      t838 = v__2 * (t836 - t804);
      t852 = (t793 + y__2 * (t835 + t798 + t838 + t808) + t749 * t351 + y__1 * (-t331 + t333 + t336 - t357) - t816 + t819 + t781 * t91 / 2 + x__1 * t95 - 0.5e1 / 0.8e1 * c * (t825 - 0.15e2 / 0.4e1 * t385)) * t12;
      t857 = t101 * t773 * t42;
      t858 = t749 * t116;
      t864 = c * (t858 - 16 * y__1 * t370 + (-t106 + t109 + t112) * x__1);
      t866 = t749 * t378;
      t868 = 0.8e1 / 0.3e1 * y__1 * t388;
      t870 = t748 * t122 / 2;
      t871 = t748 * t128;
      t874 = 0.8e1 / 0.3e1 * x__1 * t132 * t131;
      t875 = t802 * t163;
      t876 = 10 * t875;
      t878 = v__2 * (t871 - t874 + t876);
      t879 = t111 * x__1;
      t881 = t879 * t51 / 2;
      t891 = t748 * t151 * t51;
      t902 = (t857 + t2 * t864 + y__2 * (t866 - t868 - t870 + t878 + t881) + t749 * t397 + y__1 * (t402 - t405 - t407 + t412) - t57 * t111 * t146 / 2 - 3 * t891 + t781 * t155 - 16 * x__1 * t170 + 10 * t34 * c * (t825 - 0.5e1 / 0.4e1 * t385)) * c;
      t910 = (t858 - 0.16e2 / 0.3e1 * y__1 * t419 + (-t106 + t109 + t178) * x__1) * c;
      t912 = t749 * t425;
      t914 = 0.8e1 / 0.3e1 * y__1 * t432;
      t915 = t748 * t186;
      t916 = 0.10e2 / 0.3e1 * t875;
      t918 = v__2 * (t915 - t874 + t916);
      t921 = g * t177 * t146 / 2;
      t939 = ell * (t857 + t2 * t910 + y__2 * (t912 - t914 - t870 + t918 + t921) + t749 * t437 - 0.16e2 / 0.3e1 * y__1 * t450 - t57 * t177 * t146 / 2 - t891 + t915 * t63 - 0.16e2 / 0.3e1 * t757 * t207 + 0.10e2 / 0.3e1 * t34 * (t825 - 0.3e1 / 0.8e1 * t385) * c);
      t960 = t750 * t215;
      t968 = -32 * t786 + 36 * t782;
      t972 = t228 * x__1;
      t975 = t749 * t464 + y__1 * (-t468 - t469) + t57 * t968 + 12 * t817 * t224 + 24 * t158 * t972;
      t977 = t749 * t475;
      t979 = y__1 * (t483 - t485);
      t981 = 12 * t748 * t238;
      t982 = t748 * t248;
      t985 = 64 * t34 * t63 * t757;
      t987 = 40 * t802 * t166;
      t989 = v__2 * (t982 - t985 + t987);
      t991 = 12 * t224 * t972;
      t1001 = -12 * t781 * t232 + 32 * x__1 * t264;
      t1011 = -8 * t9 * t751 - 128 * t19 * t760 - 60 * t24 * t770 - 300 * t39 * t789 - 64 * t18 * t831 - 256 * t98 * t852 + 24 * t16 * t902 + 48 * lambda__1 * t939 + 24 * t217 * t960 + t2 * t975 + y__2 * (t977 + t979 - t981 + t989 + t991) + t749 * t495 + y__1 * (t500 + t503 - t506 + t509) + t57 * t1001 - 12 * t270 * t817 + 24 * t781 * t278 - 64 * t557 * t282 + 40 * t824 * t612;
      out_10_5 = t289 * t286 * (-32 * c * t7 * t6 * lambda__2_dot * t751 - 768 * t16 * ell * t852 - 256 * t17 * t831 - 1500 * t18 * t789 - 896 * t24 * t760 - 360 * t39 * t770 + 48 * lambda__1 * t902 + 48 * t939) - 5 / t8 / t7 * t1011;
      out_7_6 = 2 * lambda__2;
      out_9_6 = -2 * u__2;
      t1020 = u__2 * t748;
      t1021 = u__2 * t749;
      t1027 = t65 * u__2;
      t1032 = u__2 * t51;
      t1035 = y__1 * (2 * t332 * t131 + 0.13e2 / 0.16e2 * t1032);
      t1040 = 2 * x__1 * t113 * t56;
      t1041 = u__2 * c;
      t1043 = 0.5e1 / 0.8e1 * t802 * t1041;
      t1056 = lambda__2 * t1020;
      t1060 = t2 * c * (lambda__2 * t1021 + t1056);
      t1067 = y__1 * t674;
      t1070 = t748 * lambda__2;
      t1073 = t550 * t56;
      t1080 = y__2 * (t749 * (2 * lambda__2 * v__2 * t131 + t1032 / 2) - 0.8e1 / 0.3e1 * t1067 * t1041 + v__2 * (2 * t1070 * t131 - 0.8e1 / 0.3e1 * t1073) + t1020 * t51 / 2);
      t1082 = t57 * t1041 / 2;
      t1085 = 2 * lambda__2 * u__2 * t68;
      t1088 = x__2 * t160;
      t1095 = t748 * c;
      t1097 = t147 * t1095 / 2;
      t1099 = 2 * t1056 * t68;
      t1104 = t163 * t824;
      t1110 = t186 * u__2;
      t1140 = x__2 * t243;
      t1146 = y__1 * t151;
      t1184 = -16 * t9 * t750 * x__2 - 300 * t39 * (0.28e2 / 0.75e2 * t1020 + 0.28e2 / 0.75e2 * t1021) * t13 - 64 * t18 * t78 * (t749 * t1027 / 2 + t1035 + t748 * t1027 / 2 + t1040 - t1043) - 256 * t98 * (t749 * t91 / 2 + t1035 + t748 * t91 / 2 + t1040 - t1043) * t12 + 24 * t16 * (t1060 + t1080 + t749 * (-t1082 + t1085 + t155) + y__1 * (-32 * t1088 * t329 - 13 * t232 * t51) - t1097 + t1099 + t748 * t155 - 32 * x__1 * t1088 * t56 + 10 * t1104) * c + 48 * lambda__1 * ell * (t1060 + t1080 + t749 * (-t1082 + t1110 + t1085) - 0.16e2 / 0.3e1 * y__1 * (2 * x__2 * t442 + 0.13e2 / 0.16e2 * t259) * c - t1097 + t748 * t1110 + t1099 - 0.32e2 / 0.3e1 * x__1 * t56 * x__2 * t202 + 0.10e2 / 0.3e1 * t1104) + t2 * (t749 * (24 * t233 + 36 * t147) + 36 * t57 * t1020 + 24 * t158 * t1020) + y__2 * (t749 * (2 * v__2 * t1140 + 12 * t259) - 64 * t1146 * t742 + v__2 * (2 * t748 * t1140 - 64 * t550 * t35) + 12 * t224 * t1020) + t749 * (-12 * t57 * t232 + 48 * u__2 * t275 + 24 * t278) + y__1 * (-52 * u__2 * t270 + 2 * x__2 * t502) - 12 * t562 * t1020 + 48 * t1020 * t275 + 24 * t748 * t278 - 128 * x__1 * t488 * t274 * u__1 + 40 * t802 * t504;
      out_10_6 = t289 * t286 * t1184;
      out_8_7 = out_7_6;
      out_9_7 = -2 * v__2;
      t1196 = 2 * y__2 * t759 * t42;
      t1207 = 3 * t2 * t773 * t42;
      t1225 = -16 * t9 * t750 * y__2 - 112 * t39 * t750 * v__2 * t13 - 64 * t18 * t78 * (t1196 + t795 + t798 + t806 + t808) - 256 * t98 * (t1196 + t835 + t798 + t838 + t808) * t12 + 24 * t16 * (2 * y__2 * t864 + t1207 + t866 - t868 - t870 + t878 + t881) * c + 48 * lambda__1 * ell * (2 * y__2 * t910 + t1207 - t870 + t912 - t914 + t918 + t921) + 72 * t2 * v__2 * t960 + 2 * y__2 * t975 + t977 + t979 - t981 + t989 + t991;
      out_10_7 = t289 * t286 * t1225;
      out_5_8 = -1;
      t1227 = 2 * x__2;
      out_9_8 = -t1227;
      t1233 = t65 * x__2;
      t1236 = g * t131;
      t1240 = y__1 * (0.13e2 / 0.16e2 * t1236 - u__2 * t329);
      t1244 = 0.5e1 / 0.8e1 * x__2 * t803;
      t1249 = x__2 * t90;
      t1262 = t2 * c * (x__2 * t1070 + t749 * t113);
      t1277 = y__2 * (t749 * (-v__2 * t1041 + t1236 / 2) - 0.8e1 / 0.3e1 * t1067 * t131 + v__2 * (-t748 * t1041 - 0.8e1 / 0.3e1 * t757 * t131) + t781 * t51 / 2);
      t1279 = t57 * t131 / 2;
      t1280 = x__2 * t73;
      t1281 = x__2 * t128;
      t1284 = t1 * u__2;
      t1293 = x__2 * t57;
      t1295 = t1293 * t1095 / 2;
      t1296 = t781 * t73;
      t1306 = t163 * x__2 * t802;
      t1312 = t186 * x__2;
      t1317 = t34 * t444;
      t1348 = -24 * t232 + 72 * t1284;
      t1366 = -t232 + t1284;
      t1367 = u__2 * t1366;
      t1370 = x__2 * t277;
      t1383 = t57 * t748;
      t1395 = -300 * t39 * (0.28e2 / 0.75e2 * t781 + 0.28e2 / 0.75e2 * t778) * t13 - 64 * t18 * t78 * (t749 * t1233 / 2 + t1240 + t748 * t1233 / 2 - t1073 - t1244) - 256 * t98 * (t749 * t1249 / 2 + t1240 + t748 * t1249 / 2 - t1073 - t1244) * t12 + 24 * t16 * (t1262 + t1277 + t749 * (-t1279 - t1280 + t1281) + y__1 * (-0.8e1 / 0.3e1 * t1284 * t329 - 13 * t224 * t131 + 16 * t305 * t1041) - t1295 - t1296 + t748 * t1281 - 16 * x__1 * (t1 * t1041 / 6 - u__2 * t163) * u__1 + 10 * t1306) * c + 48 * lambda__1 * ell * (t1262 + t1277 + t749 * (-t1279 + t1312 - t1280) - 0.16e2 / 0.3e1 * y__1 * (t1 * t742 / 2 + 0.13e2 / 0.16e2 * t1317 - t34 * t742) * c - t1295 + t748 * t1312 - t1296 - 0.16e2 / 0.3e1 * t757 * c * (t1284 / 2 - t232) + 0.10e2 / 0.3e1 * t1306) + t2 * (t749 * (24 * lambda__2 * t488 + 36 * t1293) + 36 * t57 * t781 + 24 * t488 * t1070) + y__2 * (t749 * (v__2 * t1348 + 12 * t1317) - 64 * t1146 * t479 + v__2 * (t748 * t1348 - 64 * t31 * t35) + 12 * t224 * t781) + t749 * (24 * x__2 * t1367 - 12 * t57 * t488 + 24 * t1370) + y__1 * (-64 * t1 * v__1 * t232 - 52 * x__2 * t270 + 64 * v__1 * t504) - 12 * t1383 * t488 + 24 * t781 * t1367 + 24 * t748 * t1370 - 64 * t557 * t1366 * u__1 + 40 * t802 * t612;
      out_10_8 = t289 * t286 * t1395;
      out_6_9 = -1;
      t1397 = 2 * y__2;
      out_9_9 = -t1397;
      t1404 = 0.13e2 / 0.16e2 * t637;
      t1408 = 0.3e1 / 0.16e2 * t749 * t51;
      t1409 = t362 * t329;
      t1410 = t60 * t56;
      t1412 = 0.3e1 / 0.16e2 * t748 * t51;
      t1425 = t101 * t750;
      t1426 = t1425 * t42;
      t1438 = t2 * c * (t749 * g / 2 - 0.8e1 / 0.3e1 * t1067 + x__1 * (-0.8e1 / 0.3e1 * u__1 * v__2 + g * x__1 / 2));
      t1439 = 0.3e1 / 0.2e1 * t530;
      t1446 = 0.3e1 / 0.2e1 * t748 * t530;
      t1449 = t34 * t51;
      t1451 = t725 * t1041;
      t1454 = t1067 * t163;
      t1458 = t748 * t34;
      t1459 = t1458 * t51;
      t1517 = -112 * t39 * y__2 * t750 * t13 - 64 * t18 * t78 * (y__2 * (t749 * t65 / 2 + t1404 + t799 - t804) + t1408 - t1409 - t1410 + t1412) - 256 * t98 * (y__2 * (t749 * t90 / 2 + t1404 + t836 - t804) + t1408 - t1409 - t1410 + t1412) * t12 + 24 * t16 * (t1426 + t1438 + y__2 * (t749 * (-t1439 - t74 + t69 - t127) - 0.8e1 / 0.3e1 * y__1 * t383 * c - t1446 + t871 - t874 + t876) + t749 * (-3 * t1449 - t1451) + 16 * t1454 - v__2 * t111 * t146 - 3 * t1459) * c + 48 * lambda__1 * ell * (t1426 + t1438 + y__2 * (t749 * (-t1439 - t74 + t69 - t185) - 0.8e1 / 0.3e1 * y__1 * c * t429 - t1446 + t915 - t874 + t916) + t749 * (-t1449 - t1451) + 0.16e2 / 0.3e1 * t1454 - v__2 * t177 * t146 - t1459) + 24 * t101 * t750 * t57 + 24 * t101 * t960 + t2 * (t749 * (12 * t224 + 72 * t669) - 64 * t362 * t305 + 2 * v__2 * t968 + 12 * g * t1458) + y__2 * (t749 * (-36 * t562 + t244 - t246 - t247) + y__1 * t482 - 36 * t34 * t1383 + t982 - t985 + t987) + t749 * (-12 * t270 - 24 * t726) + 64 * t362 * t498 + 2 * v__2 * t1001 - 12 * g * t166 * t748;
      out_10_9 = t289 * t286 * t1517;
      out_7_10 = t1227;
      out_8_10 = t1397;
      t1522 = c * v__2;
      t1533 = x__1 * t1;
      t1535 = t2 * t759 * c + y__2 * (v__2 * t1095 / 2 + t749 * t1522 / 2) + t749 * c * t63 / 2 + t758 * t68 + t1095 * t63 / 2 + t1533 * t56;
      t1542 = t1425 * t1522;
      t1548 = -8 * t163 + t68;
      t1555 = u__2 * t1548;
      t1557 = t1 * t34;
      t1559 = y__1 * t1557 * t329;
      t1563 = x__1 * t1557 * t56;
      t1575 = t68 - 0.8e1 / 0.3e1 * t163;
      t1578 = t748 * t1575;
      t1604 = -32 * t166 + 24 * t1557;
      t1613 = u__2 * (t1557 - 0.4e1 / 0.3e1 * t166);
      t1623 = -64 * t18 * t78 * t1535 - 256 * t98 * t1535 * t12 + 24 * t16 * (t1542 + t2 * c * (t779 - 16 * t784 + t879) + y__2 * (v__2 * t748 * t1548 + t749 * v__2 * t1548) + t778 * t1555 - 16 * t1559 + t781 * t1555 - 16 * t1563) * c + 48 * lambda__1 * ell * (t1542 + t2 * (t779 - 0.16e2 / 0.3e1 * t784 + t177 * x__1) * c + y__2 * (t749 * v__2 * t1575 + v__2 * t1578) + t749 * t1575 * t63 - 0.16e2 / 0.3e1 * t1559 + t1578 * t63 - 0.16e2 / 0.3e1 * t1563) + 24 * t217 * t750 * t34 + t2 * (24 * t232 * t778 + 24 * t34 * t972 - 64 * y__1 * t498) + y__2 * (v__2 * t748 * t1604 + t749 * v__2 * t1604) + 24 * t778 * t1613 - 64 * y__1 * t1 * t498 + 24 * t781 * t1613 - 64 * t1533 * t264;
      out_10_10 = t289 * t286 * t1623;

      % Store outputs
      out_JF_x = zeros(10, 10);
      out_JF_x(3, 1) = out_3_1;
      out_JF_x(10, 1) = out_10_1;
      out_JF_x(4, 2) = out_4_2;
      out_JF_x(10, 2) = out_10_2;
      out_JF_x(1, 3) = out_1_3;
      out_JF_x(10, 3) = out_10_3;
      out_JF_x(2, 4) = out_2_4;
      out_JF_x(10, 4) = out_10_4;
      out_JF_x(3, 5) = out_3_5;
      out_JF_x(4, 5) = out_4_5;
      out_JF_x(9, 5) = out_9_5;
      out_JF_x(10, 5) = out_10_5;
      out_JF_x(7, 6) = out_7_6;
      out_JF_x(9, 6) = out_9_6;
      out_JF_x(10, 6) = out_10_6;
      out_JF_x(8, 7) = out_8_7;
      out_JF_x(9, 7) = out_9_7;
      out_JF_x(10, 7) = out_10_7;
      out_JF_x(5, 8) = out_5_8;
      out_JF_x(9, 8) = out_9_8;
      out_JF_x(10, 8) = out_10_8;
      out_JF_x(6, 9) = out_6_9;
      out_JF_x(9, 9) = out_9_9;
      out_JF_x(10, 9) = out_10_9;
      out_JF_x(7, 10) = out_7_10;
      out_JF_x(8, 10) = out_8_10;
      out_JF_x(10, 10) = out_10_10;
    end % JF_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_x_dot = JF_x_dot( this, in_1, in_2, in_3, t )
      % Evaluate the Jacobian of F with respect to x_dot.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);
      x__1_dot = in_2(1);
      y__1_dot = in_2(2);
      u__1_dot = in_2(3);
      v__1_dot = in_2(4);
      lambda__1_dot = in_2(5);
      x__2_dot = in_2(6);
      y__2_dot = in_2(7);
      u__2_dot = in_2(8);
      v__2_dot = in_2(9);
      lambda__2_dot = in_2(10);

      % Evaluate function
      out_1_1 = 1;
      out_2_2 = 1;
      out_3_3 = 1;
      out_4_4 = 1;
      t2 = c * lambda__1 + ell;
      out_9_5 = 2 * t2 * c;
      out_5_6 = 1;
      out_6_7 = 1;
      out_7_8 = 1;
      out_8_9 = 1;
      t4 = x__2 ^ 2;
      t5 = y__2 ^ 2;
      t7 = x__1 ^ 2;
      t8 = y__1 ^ 2;
      out_10_10 = -8 / t2 / c * (t7 + t8) * (t4 + t5);

      % Store outputs
      out_JF_x_dot = zeros(10, 10);
      out_JF_x_dot(1, 1) = out_1_1;
      out_JF_x_dot(2, 2) = out_2_2;
      out_JF_x_dot(3, 3) = out_3_3;
      out_JF_x_dot(4, 4) = out_4_4;
      out_JF_x_dot(9, 5) = out_9_5;
      out_JF_x_dot(5, 6) = out_5_6;
      out_JF_x_dot(6, 7) = out_6_7;
      out_JF_x_dot(7, 8) = out_7_8;
      out_JF_x_dot(8, 9) = out_8_9;
      out_JF_x_dot(10, 10) = out_10_10;
    end % JF_x_dot
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_v = JF_v( this, in_1, in_2, in_3, t )
      % Evaluate the Jacobian of F with respect to v.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);
      x__1_dot = in_2(1);
      y__1_dot = in_2(2);
      u__1_dot = in_2(3);
      v__1_dot = in_2(4);
      lambda__1_dot = in_2(5);
      x__2_dot = in_2(6);
      y__2_dot = in_2(7);
      u__2_dot = in_2(8);
      v__2_dot = in_2(9);
      lambda__2_dot = in_2(10);

      % Evaluate function
      % No body

      % Store outputs
      out_JF_v = zeros(10, 0);
    end % JF_v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_v = v( this, in_1, t )
      % Evaluate the the veils v.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);

      % Evaluate function
      % No body

      % Store outputs
      out_v = zeros(0, 1);
    end % v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jv_x = Jv_x( this, in_1, in_2, t )
      % Evaluate the Jacobian of v with respect to x.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);

      % Evaluate function
      % No body

      % Store outputs
      out_Jv_x = zeros(0, 10);
    end % Jv_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_h = h( this, in_1, in_2, t )
      % Calculate the residual of the invariants h.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);

      % Evaluate function
      t1 = ell ^ 2;
      t2 = x__1 ^ 2;
      t3 = y__1 ^ 2;
      out_1 = t1 - t2 - t3;
      t4 = c ^ 2;
      t5 = lambda__1 ^ 2;
      t7 = c * ell;
      t10 = x__2 ^ 2;
      t11 = y__2 ^ 2;
      out_2 = t5 * t4 + 2 * lambda__1 * t7 + t1 - t10 - t11;
      t12 = u__1 * x__1;
      t14 = v__1 * y__1 + t12;
      out_3 = 2 * t14;
      t21 = u__1 ^ 2;
      t23 = v__1 ^ 2;
      out_4 = 2 * g * y__1 + 4 * lambda__1 * t2 + 4 * lambda__1 * t3 - 2 * t21 - 2 * t23;
      t39 = ell * g;
      t42 = t2 + t3;
      t43 = x__2 * u__2;
      t45 = y__2 * v__2 + t43;
      t49 = 0.1e1 / c;
      t52 = c * lambda__1 + ell;
      out_5 = 0.1e1 / t52 * t49 * (-16 * t5 * t14 * t4 + lambda__1 * (v__1 * (-6 * g * t4 - 16 * y__1 * t7) - 16 * t12 * t7) - 6 * t39 * v__1 * c - 4 * t45 * t42);
      t54 = t4 ^ 2;
      t56 = t5 ^ 2;
      t61 = ell * t4 * c;
      t81 = g ^ 2;
      t82 = t81 * c;
      t83 = t21 * ell;
      t85 = t23 * ell;
      t103 = u__2 ^ 2;
      t106 = v__2 ^ 2;
      t109 = t1 * ell;
      t111 = 0.4e1 / 0.9e1 * lambda__2 * t10 * c + 0.4e1 / 0.9e1 * lambda__2 * t11 * c + 0.2e1 / 0.9e1 * c * y__2 * g - 0.2e1 / 0.9e1 * t103 * c - 0.2e1 / 0.9e1 * t106 * c + 0.16e2 / 0.9e1 * t109;
      t113 = v__1 * t43;
      t115 = y__2 * v__1 * v__2;
      t116 = t1 * g;
      t124 = x__1 * t45;
      t135 = lambda__2 * t10;
      t143 = 0.8e1 / 0.9e1 * t135 + 0.8e1 / 0.9e1 * lambda__2 * t11 + 0.4e1 / 0.9e1 * y__2 * g - 0.4e1 / 0.9e1 * t103 - 0.4e1 / 0.9e1 * t106;
      t179 = t11 * (-8 * t1 * lambda__2 - 4 * t106) + y__2 * (-8 * v__2 * t43 - 4 * t116) + t103 * (4 * t1 - 4 * t10) - 8 * t1 * t135 + 4 * t106 * t1;
      t194 = t52 ^ 2;
      out_6 = 0.1e1 / t194 / t52 * t49 * (-32 * t56 * lambda__1 * t42 * t54 + t56 * (-96 * t3 * t61 - 28 * g * y__1 * t54 - 96 * t2 * t61 + 16 * (t21 + t23) * t54) - 6 * t5 * lambda__1 * (16 * t1 * t3 + 14 * t39 * c * y__1 + 16 * t2 * t1 + (t82 - 8 * t83 - 8 * t85) * c) * t4 - 18 * t5 * (t3 * t111 - 0.4e1 / 0.3e1 * y__1 * (t113 + t115 - 0.7e1 / 0.2e1 * t116) * c + t2 * t111 - 0.4e1 / 0.3e1 * t124 * c * u__1 + (t82 - 0.8e1 / 0.3e1 * t83 - 0.8e1 / 0.3e1 * t85) * t7) * c - 18 * lambda__1 * (t3 * t143 + y__1 * (-0.8e1 / 0.3e1 * t113 - 0.8e1 / 0.3e1 * t115 + 0.14e2 / 0.9e1 * t116) + t2 * t143 - 0.8e1 / 0.3e1 * x__1 * t45 * u__1 + (t82 - 0.8e1 / 0.9e1 * t83 - 0.8e1 / 0.9e1 * t85) * ell) * t7 + t3 * t179 + 24 * y__1 * t45 * v__1 * t1 + t2 * t179 + 24 * t124 * u__1 * t1 - 6 * t81 * t109 * c);

      % Store outputs
      out_h = zeros(6, 1);
      out_h(1) = out_1;
      out_h(2) = out_2;
      out_h(3) = out_3;
      out_h(4) = out_4;
      out_h(5) = out_5;
      out_h(6) = out_6;
    end % h
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jh_x = Jh_x( this, in_1, in_2, t )
      % Calculate the Jacobian of h with respect to x.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);

      % Evaluate function
      t1 = 2 * x__1;
      out_1_1 = -t1;
      out_3_1 = 2 * u__1;
      t2 = x__1 * lambda__1;
      out_4_1 = 8 * t2;
      t3 = c ^ 2;
      t5 = lambda__1 ^ 2;
      t8 = c * ell;
      t12 = x__2 * u__2;
      t14 = y__2 * v__2 + t12;
      t15 = t14 * x__1;
      t18 = 0.1e1 / c;
      t21 = c * lambda__1 + ell;
      t22 = 0.1e1 / t21;
      out_5_1 = t22 * t18 * (-16 * t5 * u__1 * t3 - 16 * u__1 * lambda__1 * t8 - 8 * t15);
      t23 = t3 ^ 2;
      t25 = t5 ^ 2;
      t26 = t25 * lambda__1;
      t30 = ell * t3 * c;
      t34 = ell ^ 2;
      t36 = t5 * lambda__1;
      t40 = x__2 ^ 2;
      t41 = t40 * c;
      t44 = y__2 ^ 2;
      t45 = t44 * c;
      t48 = y__2 * c;
      t51 = u__2 ^ 2;
      t54 = v__2 ^ 2;
      t57 = t34 * ell;
      t59 = 0.4e1 / 0.9e1 * lambda__2 * t41 + 0.4e1 / 0.9e1 * lambda__2 * t45 + 0.2e1 / 0.9e1 * g * t48 - 0.2e1 / 0.9e1 * t51 * c - 0.2e1 / 0.9e1 * t54 * c + 0.16e2 / 0.9e1 * t57;
      t62 = u__1 * c;
      t69 = lambda__2 * t40;
      t77 = 0.8e1 / 0.9e1 * t69 + 0.8e1 / 0.9e1 * lambda__2 * t44 + 0.4e1 / 0.9e1 * y__2 * g - 0.4e1 / 0.9e1 * t51 - 0.4e1 / 0.9e1 * t54;
      t80 = t14 * u__1;
      t89 = -8 * t34 * lambda__2 - 4 * t54;
      t91 = t34 * g;
      t92 = 4 * t91;
      t94 = 8 * v__2 * t12;
      t98 = 4 * t34 - 4 * t40;
      t104 = t44 * t89 + y__2 * (-t92 - t94) + t51 * t98 - 8 * t34 * t69 + 4 * t54 * t34;
      t107 = u__1 * t34;
      t112 = t21 ^ 2;
      t114 = 0.1e1 / t112 / t21;
      out_6_1 = t114 * t18 * (-64 * t26 * x__1 * t23 - 192 * t25 * x__1 * t30 - 192 * t36 * x__1 * t34 * t3 - 18 * t5 * (2 * x__1 * t59 - 0.4e1 / 0.3e1 * t14 * t62) * c - 18 * lambda__1 * (2 * x__1 * t77 - 0.8e1 / 0.3e1 * t80) * t8 + 2 * x__1 * t104 + 24 * t14 * t107);
      t115 = 2 * y__1;
      out_1_2 = -t115;
      out_3_2 = 2 * v__1;
      out_4_2 = 8 * y__1 * lambda__1 + 2 * g;
      t125 = t14 * y__1;
      out_5_2 = t22 * t18 * (-16 * t5 * v__1 * t3 - 16 * v__1 * lambda__1 * t8 - 8 * t125);
      t129 = y__1 * t23;
      t138 = g * t8;
      t148 = v__1 * t12;
      t149 = v__1 * y__2;
      t150 = v__2 * t149;
      t153 = (t148 + t150 - 0.7e1 / 0.2e1 * t91) * c;
      t161 = 0.8e1 / 0.3e1 * t148;
      t162 = 0.8e1 / 0.3e1 * t150;
      t163 = 0.14e2 / 0.9e1 * t91;
      t170 = v__1 * t34;
      out_6_2 = t114 * t18 * (-64 * t26 * t129 + t25 * (-28 * g * t23 - 192 * y__1 * t30) - 6 * t36 * (32 * t34 * y__1 + 14 * t138) * t3 - 18 * t5 * (2 * y__1 * t59 - 0.4e1 / 0.3e1 * t153) * c - 18 * lambda__1 * (2 * y__1 * t77 - t161 - t162 + t163) * t8 + 2 * y__1 * t104 + 24 * t14 * t170);
      out_3_3 = t1;
      out_4_3 = -4 * u__1;
      out_5_3 = t22 * t18 * (-16 * t5 * x__1 * t3 - 16 * t2 * t8);
      t188 = t14 * c;
      t191 = t34 * c;
      t204 = t14 * t34;
      out_6_3 = t114 * t18 * (32 * t25 * u__1 * t23 + 96 * t36 * u__1 * t30 - 18 * t5 * (-0.4e1 / 0.3e1 * x__1 * t188 - 0.16e2 / 0.3e1 * u__1 * t191) * c - 18 * lambda__1 * (-0.8e1 / 0.3e1 * t15 - 0.16e2 / 0.9e1 * t107) * t8 + 24 * x__1 * t204);
      out_3_4 = t115;
      out_4_4 = -4 * v__1;
      t217 = -6 * g * t3 - 16 * y__1 * t8;
      out_5_4 = t22 * t18 * (-16 * t5 * y__1 * t3 + lambda__1 * t217 - 6 * t138);
      out_6_4 = t114 * t18 * (32 * t25 * v__1 * t23 + 96 * t36 * v__1 * t30 - 18 * t5 * (-0.4e1 / 0.3e1 * y__1 * t188 - 0.16e2 / 0.3e1 * v__1 * t191) * c - 18 * lambda__1 * (-0.8e1 / 0.3e1 * t14 * y__1 - 0.16e2 / 0.9e1 * t170) * t8 + 24 * y__1 * t204);
      out_2_5 = 2 * lambda__1 * t3 + 2 * t8;
      t250 = x__1 ^ 2;
      t251 = y__1 ^ 2;
      t252 = t250 + t251;
      out_4_5 = 4 * t252;
      t253 = u__1 * x__1;
      t254 = v__1 * y__1;
      t256 = (t253 + t254) * t3;
      t259 = v__1 * t217;
      t261 = 16 * t253 * t8;
      t269 = v__1 * c;
      t270 = ell * g;
      out_5_5 = t22 * t18 * (-32 * lambda__1 * t256 + t259 - t261) - 0.1e1 / t112 * (-16 * t5 * t256 + lambda__1 * (t259 - t261) - 6 * t270 * t269 - 4 * t14 * t252);
      t278 = t252 * t23;
      t287 = u__1 ^ 2;
      t288 = v__1 ^ 2;
      t292 = -96 * t251 * t30 - 28 * g * t129 - 96 * t250 * t30 + 16 * (t287 + t288) * t23;
      t302 = g ^ 2;
      t303 = t302 * c;
      t304 = t287 * ell;
      t306 = t288 * ell;
      t311 = (16 * t34 * t251 + 14 * t270 * c * y__1 + 16 * t250 * t34 + (t303 - 8 * t304 - 8 * t306) * c) * t3;
      t325 = (t251 * t59 - 0.4e1 / 0.3e1 * y__1 * t153 + t250 * t59 - 0.4e1 / 0.3e1 * t15 * t62 + (t303 - 0.8e1 / 0.3e1 * t304 - 0.8e1 / 0.3e1 * t306) * t8) * c;
      t338 = t251 * t77 + y__1 * (-t161 - t162 + t163) + t250 * t77 - 0.8e1 / 0.3e1 * x__1 * t80 + (t303 - 0.8e1 / 0.9e1 * t304 - 0.8e1 / 0.9e1 * t306) * ell;
      t364 = t112 ^ 2;
      out_6_5 = t114 * t18 * (-160 * t25 * t278 + 4 * t36 * t292 - 18 * t5 * t311 - 36 * lambda__1 * t325 - 18 * t338 * t8) - 3 / t364 * (-6 * t302 * t57 * c - 18 * lambda__1 * t338 * t8 + t250 * t104 + t251 * t104 + 24 * t15 * t107 + 24 * t125 * t170 + t25 * t292 - 32 * t26 * t278 - 6 * t36 * t311 - 18 * t5 * t325);
      out_2_6 = -2 * x__2;
      t370 = t22 * t18;
      out_5_6 = -4 * t370 * u__2 * t252;
      t373 = c * x__2;
      t377 = c * u__2;
      t380 = t250 * lambda__2;
      t383 = u__2 * x__1;
      t413 = -16 * lambda__2 * x__2 * t34 - 8 * u__2 * v__2 * y__2 - 8 * x__2 * t51;
      out_6_6 = t114 * t18 * (-18 * t5 * (0.8e1 / 0.9e1 * t251 * lambda__2 * t373 - 0.4e1 / 0.3e1 * t254 * t377 + 0.8e1 / 0.9e1 * t380 * t373 - 0.4e1 / 0.3e1 * t383 * t62) * c - 18 * lambda__1 * (0.16e2 / 0.9e1 * t251 * lambda__2 * x__2 - 0.8e1 / 0.3e1 * u__2 * v__1 * y__1 + 0.16e2 / 0.9e1 * x__2 * t380 - 0.8e1 / 0.3e1 * u__1 * u__2 * x__1) * t8 + t251 * t413 + 24 * u__2 * y__1 * t170 + t250 * t413 + 24 * t383 * t107);
      out_2_7 = -2 * y__2;
      out_5_7 = -4 * t370 * t252 * v__2;
      t431 = 0.8e1 / 0.9e1 * lambda__2 * t48 + 0.2e1 / 0.9e1 * c * g;
      t433 = v__2 * y__1;
      t437 = v__2 * x__1;
      t447 = 0.16e2 / 0.9e1 * y__2 * lambda__2 + 0.4e1 / 0.9e1 * g;
      t462 = 2 * y__2 * t89 - t92 - t94;
      out_6_7 = t114 * t18 * (-18 * t5 * (t251 * t431 - 0.4e1 / 0.3e1 * t433 * t269 + t250 * t431 - 0.4e1 / 0.3e1 * t437 * t62) * c - 18 * lambda__1 * (t251 * t447 - 0.8e1 / 0.3e1 * v__1 * v__2 * y__1 + t250 * t447 - 0.8e1 / 0.3e1 * u__1 * v__2 * x__1) * t8 + t251 * t462 + 24 * t433 * t170 + t250 * t462 + 24 * t437 * t107);
      out_5_8 = -4 * t370 * x__2 * t252;
      t505 = -8 * x__2 * v__2 * y__2 + 2 * u__2 * t98;
      out_6_8 = t114 * t18 * (-18 * t5 * (-0.4e1 / 0.9e1 * t251 * t377 - 0.4e1 / 0.3e1 * t254 * t373 - 0.4e1 / 0.9e1 * t250 * t377 - 0.4e1 / 0.3e1 * t253 * t373) * c - 18 * lambda__1 * (-0.8e1 / 0.9e1 * u__2 * t251 - 0.8e1 / 0.3e1 * x__2 * v__1 * y__1 - 0.8e1 / 0.9e1 * u__2 * t250 - 0.8e1 / 0.3e1 * u__1 * x__2 * x__1) * t8 + t251 * t505 + 24 * x__2 * y__1 * t170 + t250 * t505 + 24 * x__2 * x__1 * t107);
      out_5_9 = -4 * t370 * y__2 * t252;
      t527 = y__2 * x__1;
      t551 = -8 * y__2 * t12 + 8 * v__2 * t34 - 8 * t44 * v__2;
      out_6_9 = t114 * t18 * (-18 * t5 * (-0.4e1 / 0.9e1 * t251 * c * v__2 - 0.4e1 / 0.3e1 * t254 * t48 - 0.4e1 / 0.9e1 * v__2 * t250 * c - 0.4e1 / 0.3e1 * t527 * t62) * c - 18 * lambda__1 * (-0.8e1 / 0.9e1 * t251 * v__2 - 0.8e1 / 0.3e1 * y__1 * t149 - 0.8e1 / 0.9e1 * t250 * v__2 - 0.8e1 / 0.3e1 * u__1 * y__2 * x__1) * t8 + t251 * t551 + 24 * y__2 * y__1 * t170 + t250 * t551 + 24 * t527 * t107);
      t562 = 0.4e1 / 0.9e1 * t41 + 0.4e1 / 0.9e1 * t45;
      t570 = 0.8e1 / 0.9e1 * t40 + 0.8e1 / 0.9e1 * t44;
      t580 = -8 * t40 * t34 - 8 * t44 * t34;
      out_6_10 = t114 * t18 * (-18 * t5 * (t250 * t562 + t251 * t562) * c - 18 * lambda__1 * (t250 * t570 + t251 * t570) * t8 + t251 * t580 + t250 * t580);

      % Store outputs
      out_Jh_x = zeros(6, 10);
      out_Jh_x(1, 1) = out_1_1;
      out_Jh_x(3, 1) = out_3_1;
      out_Jh_x(4, 1) = out_4_1;
      out_Jh_x(5, 1) = out_5_1;
      out_Jh_x(6, 1) = out_6_1;
      out_Jh_x(1, 2) = out_1_2;
      out_Jh_x(3, 2) = out_3_2;
      out_Jh_x(4, 2) = out_4_2;
      out_Jh_x(5, 2) = out_5_2;
      out_Jh_x(6, 2) = out_6_2;
      out_Jh_x(3, 3) = out_3_3;
      out_Jh_x(4, 3) = out_4_3;
      out_Jh_x(5, 3) = out_5_3;
      out_Jh_x(6, 3) = out_6_3;
      out_Jh_x(3, 4) = out_3_4;
      out_Jh_x(4, 4) = out_4_4;
      out_Jh_x(5, 4) = out_5_4;
      out_Jh_x(6, 4) = out_6_4;
      out_Jh_x(2, 5) = out_2_5;
      out_Jh_x(4, 5) = out_4_5;
      out_Jh_x(5, 5) = out_5_5;
      out_Jh_x(6, 5) = out_6_5;
      out_Jh_x(2, 6) = out_2_6;
      out_Jh_x(5, 6) = out_5_6;
      out_Jh_x(6, 6) = out_6_6;
      out_Jh_x(2, 7) = out_2_7;
      out_Jh_x(5, 7) = out_5_7;
      out_Jh_x(6, 7) = out_6_7;
      out_Jh_x(5, 8) = out_5_8;
      out_Jh_x(6, 8) = out_6_8;
      out_Jh_x(5, 9) = out_5_9;
      out_Jh_x(6, 9) = out_6_9;
      out_Jh_x(6, 10) = out_6_10;
    end % Jh_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jh_v = Jh_v( this, in_1, in_2, t )
      % Calculate the Jacobian of h with respect to v.

      % Extract properties
      g = this.m_g;
      ell = this.m_ell;
      c = this.m_c;

      % Extract inputs
      x__1 = in_1(1);
      y__1 = in_1(2);
      u__1 = in_1(3);
      v__1 = in_1(4);
      lambda__1 = in_1(5);
      x__2 = in_1(6);
      y__2 = in_1(7);
      u__2 = in_1(8);
      v__2 = in_1(9);
      lambda__2 = in_1(10);

      % Evaluate function
      % No body

      % Store outputs
      out_Jh_v = zeros(6, 0);
    end % Jh_v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % NPendulum

% That's All Folks!
