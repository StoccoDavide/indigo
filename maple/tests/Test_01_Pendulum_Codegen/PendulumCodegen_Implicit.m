% +--------------------------------------------------------------------------+
% | 'Indigo' module version 1.0 - BSD 3-Clause License - Copyright (c) 2023  |
% | Current version authors:                                                 |
% |   Davide Stocco and Enrico Bertolazzi.                                   |
% +--------------------------------------------------------------------------+

% Matlab generated code for implicit system: PendulumCodegen_Implicit
% This file has been automatically generated by Indigo.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef PendulumCodegen_Implicit < ImplicitSystem
  %
  % No class description provided.
  %
  properties (SetAccess = protected, Hidden = true)
    % User data
    m_m = 1.0;
    m_l = 1.0;
    m_g = 9.81;
  end
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = PendulumCodegen_Implicit( varargin )
      % Constructor for 'PendulumCodegen_Implicit'' class.

      % Superclass constructor
      this = this@ImplicitSystem('PendulumCodegen_Implicit', 2, 1);
      % User data
      if (nargin == 0)
        % Set default values
      elseif (nargin == 3)
        this.m_m = varargin{1};
        this.m_l = varargin{2};
        this.m_g = varargin{3};
      else
        error('wrong number of input arguments.');
      end
    end
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_F = F( this, in_1, in_2, t )
      % Calculate the residual of the implicit system F(x, x_dot).

      % Extract properties
      m = this.m_m;
      l = this.m_l;
      g = this.m_g;

      % Extract inputs
      theta = in_1(1);
      omega = in_1(2);
      theta_dot = in_2(1);
      omega_dot = in_2(2);

      % Generated function code
      out_1 = theta_dot - omega;
      t3 = sin(theta);
      out_2 = omega_dot - t3 / l * g;

      % Store outputs
      out_F = zeros(2,1);
      out_F(1) = out_1;
      out_F(2) = out_2;
    end % F
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function [out, out_dot] = JF( this, x, x_dot, t )

      % Calulate Jacobians
      out     = this.JF_x(x, t);
      out_dot = this.JF_x_dot(x_dot, t);
    end % JF
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_x = JF_x( this, in_1, t )
      % Calculate the Jacobian of F with respect to x.

      % Extract properties
      m = this.m_m;
      l = this.m_l;
      g = this.m_g;

      % Extract inputs
      theta = in_1(1);
      omega = in_1(2);

      % Generated function code
      out_1_2 = -1;
      t3 = cos(theta);
      out_2_1 = -t3 / l * g;

      % Store outputs
      out_JF_x = zeros(2,2);
      out_JF_x(1,2) = out_1_2;
      out_JF_x(2,1) = out_2_1;
    end % JF_x
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_JF_x_dot = JF_x_dot( this, in_1, t )
      % Calculate the Jacobian of F with respect to x_dot.

      % Extract properties
      m = this.m_m;
      l = this.m_l;
      g = this.m_g;

      % Extract inputs
      theta_dot = in_1(1);
      omega_dot = in_1(2);

      % Generated function code
      out_1_1 = 1;
      out_2_2 = 1;

      % Store outputs
      out_JF_x_dot = zeros(2,2);
      out_JF_x_dot(1,1) = out_1_1;
      out_JF_x_dot(2,2) = out_2_2;
    end % JF_x_dot
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_h = h( this, in_1, t )
      % Calculate the residual of the invariants h.

      % Extract properties
      m = this.m_m;
      l = this.m_l;
      g = this.m_g;

      % Extract inputs
      theta = in_1(1);
      omega = in_1(2);

      % Generated function code
      out_1 = 0;

      % Store outputs
      out_h = zeros(1,1);
      out_h(1) = out_1;
    end % h
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_Jh = Jh( this, in_1, t )
      % Calculate the Jacobian of h with respect to x.

      % Extract properties
      m = this.m_m;
      l = this.m_l;
      g = this.m_g;

      % Extract inputs
      theta = in_1(1);
      omega = in_1(2);

      % Generated function code
      % None

      % Store outputs
      out_Jh = zeros(1,2);
    end % Jh
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % PendulumCodegen_Implicit

% That's All Folks!
