% +--------------------------------------------------------------------------+
% | 'Indigo' module version 1.0 - BSD 3-Clause License - Copyright (c) 2023  |
% | Current version authors:                                                 |
% |   Davide Stocco and Enrico Bertolazzi.                                   |
% +--------------------------------------------------------------------------+

% Matlab generated code for implicit system: PendulumCodegen
% This file has been automatically generated by Indigo.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef PendulumCodegen < ImplicitSystem
  properties (SetAccess = protected, Hidden = true)
    % User data
    m_m = 1.0;
    m_l = 1.0;
    m_g = 9.81;
  end
  methods

    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    function this = PendulumCodegen( varargin )
      % Superclass constructor
      this = this@ImplicitSystem('PendulumCodegen', 5, 1);

      % User data
      if (nargin == 0)
        % Set default values
      elseif (nargin == 3)
        this.m_m = varargin{1};
        this.m_l = varargin{2};
        this.m_g = varargin{3};
      else
        error('wrong number of input arguments.');
      end
    end

    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    function out_F = F( this, in_1, in_2, t )
      % Extract properties
      m = this.m_m;
      l = this.m_l;
      g = this.m_g;
  
      % Extract inputs
      x = in_1(1);
      y = in_1(2);
      u = in_1(3);
      v = in_1(4);
      lambda = in_1(5);
      x_dot = in_2(1);
      y_dot = in_2(2);
      u_dot = in_2(3);
      v_dot = in_2(4);
      lambda_dot = in_2(5);
  
      % Generated function code
      out_1 = x_dot - u;
      out_2 = y_dot - v;
      out_3 = lambda * x + m * u_dot;
      out_4 = m * g + lambda * y + m * v_dot;
      t6 = l ^ 2;
      t7 = x ^ 2;
      t8 = y ^ 2;
      out_5 = -t6 + t7 + t8;
      
      % Store outputs
      out_F = zeros(5,1);
      out_F(1) = out_1;
      out_F(2) = out_2;
      out_F(3) = out_3;
      out_F(4) = out_4;
      out_F(5) = out_5;
    end % F
  
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    function [out, out_dot] = JF( this, x, x_dot, t )
      out     = this.JF_x(x, t);
      out_dot = this.JF_x_dot(x_dot, t);
    end

    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    function out_JF_x = JF_x( this, in_1, t )
      % Extract properties
      m = this.m_m;
      l = this.m_l;
      g = this.m_g;
  
      % Extract inputs
      x = in_1(1);
      y = in_1(2);
      u = in_1(3);
      v = in_1(4);
      lambda = in_1(5);
  
      % Generated function code
      out_1_3 = -1;
      out_2_4 = -1;
      out_3_1 = lambda;
      out_3_5 = x;
      out_4_2 = lambda;
      out_4_5 = y;
      out_5_1 = 2 * x;
      out_5_2 = 2 * y;
      
      % Store outputs
      out_JF_x = zeros(5,5);
      out_JF_x(1,3) = out_1_3;
      out_JF_x(2,4) = out_2_4;
      out_JF_x(3,1) = out_3_1;
      out_JF_x(3,5) = out_3_5;
      out_JF_x(4,2) = out_4_2;
      out_JF_x(4,5) = out_4_5;
      out_JF_x(5,1) = out_5_1;
      out_JF_x(5,2) = out_5_2;
    end % JF_x
  
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    function out_JF_x_dot = JF_x_dot( this, in_1, t )
      % Extract properties
      m = this.m_m;
      l = this.m_l;
      g = this.m_g;
  
      % Extract inputs
      x_dot = in_1(1);
      y_dot = in_1(2);
      u_dot = in_1(3);
      v_dot = in_1(4);
      lambda_dot = in_1(5);
  
      % Generated function code
      out_1_1 = 1;
      out_2_2 = 1;
      out_3_3 = m;
      out_4_4 = m;
      
      % Store outputs
      out_JF_x_dot = zeros(5,5);
      out_JF_x_dot(1,1) = out_1_1;
      out_JF_x_dot(2,2) = out_2_2;
      out_JF_x_dot(3,3) = out_3_3;
      out_JF_x_dot(4,4) = out_4_4;
    end % JF_x_dot
  
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    function out_h = h( this, in_1, t )
      % Extract properties
      m = this.m_m;
      l = this.m_l;
      g = this.m_g;
  
      % Extract inputs
      x = in_1(1);
      y = in_1(2);
      u = in_1(3);
      v = in_1(4);
      lambda = in_1(5);
  
      % Generated function code
      out_1 = 0;
      
      % Store outputs
      out_h = zeros(1,1);
      out_h(1) = out_1;
    end % h
  
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    function out_Jh = Jh( this, in_1, t )
      % Extract properties
      m = this.m_m;
      l = this.m_l;
      g = this.m_g;
  
      % Extract inputs
      x = in_1(1);
      y = in_1(2);
      u = in_1(3);
      v = in_1(4);
      lambda = in_1(5);
  
      % Generated function code
      
      % Store outputs
      out_Jh = zeros(1,5);
    end % Jh
  
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  end
end % PendulumCodegen

% That's All Folks!
