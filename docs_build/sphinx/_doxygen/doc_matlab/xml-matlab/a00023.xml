<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="a00023" kind="file" language="C++">
    <compoundname>show_colors.m</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00023_1a0f96702c9a77aeb61fe8039ecafc43b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function show_colors</definition>
        <argsstring>()</argsstring>
        <name>show_colors</name>
        <briefdescription>
<para>Creates a figure window showing all the available colors with their names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="+Indigo/+Utils/show_colors.m" line="4" column="11" declfile="+Indigo/+Utils/show_colors.m" declline="4" declcolumn="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">%</highlight></codeline>
<codeline lineno="2"><highlight class="normal">%&gt;<sp/>Creates<sp/>a<sp/>figure<sp/>window<sp/>showing<sp/>all<sp/>the<sp/>available<sp/>colors<sp/>with<sp/>their<sp/>names.</highlight></codeline>
<codeline lineno="3"><highlight class="normal">%</highlight></codeline>
<codeline lineno="4" refid="a00023_1a0f96702c9a77aeb61fe8039ecafc43b1" refkind="member"><highlight class="normal">function<sp/><ref refid="a00023_1a0f96702c9a77aeb61fe8039ecafc43b1" kindref="member">show_colors</ref>()</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/>[~,<sp/>name]<sp/>=<sp/>Indigo.Utils.get_colors();</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>grp<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;White&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Gray&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Red&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Pink&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Orange&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Yellow&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Brown&apos;</highlight><highlight class="normal">,<sp/>...</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Green&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Blue&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Purple&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Grey&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>J<sp/><sp/>=<sp/>[1,<sp/>3,<sp/>6,<sp/>8,<sp/>9,<sp/>10,<sp/>11];</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>fl<sp/>=<sp/>lower(grp);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>nl<sp/>=<sp/>lower(name);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>n<sp/><sp/>=<sp/>zeros(length(grp),<sp/>1);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1:length(grp)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>n(i)<sp/>=<sp/>strmatch(fl{i},<sp/>nl,<sp/></highlight><highlight class="stringliteral">&apos;exact&apos;</highlight><highlight class="normal">);<sp/>%#ok&lt;MATCH3&gt;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>clf</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>p<sp/><sp/><sp/>=<sp/>get(0,<sp/></highlight><highlight class="stringliteral">&apos;screensize&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>wh<sp/><sp/>=<sp/>0.6*p(3:4);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>xy0<sp/>=<sp/>p(1:2)<sp/>+<sp/>0.5*p(3:4)<sp/>-<sp/>wh/2;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>set(gcf,<sp/></highlight><highlight class="stringliteral">&apos;position&apos;</highlight><highlight class="normal">,<sp/>[xy0<sp/>wh]);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>axes(</highlight><highlight class="stringliteral">&apos;position&apos;</highlight><highlight class="normal">,<sp/>[0<sp/>0<sp/>1<sp/>1],<sp/></highlight><highlight class="stringliteral">&apos;visible&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;off&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>hold<sp/>on</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>N<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1:length(J)-1</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>=<sp/>max(N,<sp/>n(J(i+1))<sp/>-<sp/>n(J(i))<sp/>+<sp/>(J(i+1)<sp/>-<sp/>J(i))*1.3);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>1/N;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>1/(length(J)-1);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>d<sp/>=<sp/>w/30;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>1:length(J)-1</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>1<sp/>-<sp/>h;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>J(col):J(col+1)-1</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>text(x+w/2,<sp/>y+h/10<sp/>,<sp/>[grp{i}<sp/></highlight><highlight class="stringliteral">&apos;<sp/>colors&apos;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set(t,<sp/></highlight><highlight class="stringliteral">&apos;fontw&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;bold&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;vert&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;bot&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;horiz&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;cent&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fontsize&apos;</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>y<sp/>-<sp/>h;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>n(i):n(i+1)-1</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>Indigo.Utils.<ref refid="a00017_1aeccba89cc850e3b22b4bcf20506e7e5a" kindref="member">generate_rgb</ref>(name{k});</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bright<sp/>=<sp/>(c(1)<sp/>+<sp/>2*c(2)<sp/>+<sp/>c(3))<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bright<sp/>&lt;<sp/>0.5)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txtcolor<sp/>=<sp/></highlight><highlight class="charliteral">&apos;w&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txtcolor<sp/>=<sp/></highlight><highlight class="charliteral">&apos;k&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rectangle(</highlight><highlight class="stringliteral">&apos;position&apos;</highlight><highlight class="normal">,<sp/>[x+d,<sp/>y,<sp/>w-2*d,<sp/>h],<sp/></highlight><highlight class="stringliteral">&apos;facecolor&apos;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>text(x+w/2,<sp/>y+h/2,<sp/>name{k},<sp/></highlight><highlight class="stringliteral">&apos;color&apos;</highlight><highlight class="normal">,<sp/>txtcolor);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set(t,<sp/></highlight><highlight class="stringliteral">&apos;vert&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;mid&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;horiz&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;cent&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fontsize&apos;</highlight><highlight class="normal">,<sp/>9);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>y<sp/>-<sp/>h;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>y<sp/>-<sp/>0.3*h;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>x<sp/>+<sp/>w;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="53"><highlight class="normal">end</highlight></codeline>
    </programlisting>
    <location file="+Indigo/+Utils/show_colors.m"/>
  </compounddef>
</doxygen>
