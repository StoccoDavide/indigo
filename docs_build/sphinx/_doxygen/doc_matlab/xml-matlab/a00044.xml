<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="a00044" kind="file" language="C++">
    <compoundname>solve.m</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">%&gt;<sp/>Solve<sp/>the<sp/>system<sp/>and<sp/>calculate<sp/>the<sp/>approximate<sp/>solution<sp/>over<sp/>the<sp/>mesh<sp/>of</highlight></codeline>
<codeline lineno="2"><highlight class="normal">%&gt;<sp/>time<sp/>points.</highlight></codeline>
<codeline lineno="3"><highlight class="normal">%&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="normal">%&gt;<sp/>\param<sp/>t<sp/><sp/><sp/>Time<sp/>mesh<sp/>points<sp/>\f$<sp/>\mathbf{t}<sp/>=<sp/>\left[<sp/>t_0,<sp/>t_1,<sp/>\ldots,<sp/>t_n</highlight></codeline>
<codeline lineno="5"><highlight class="normal">%&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\right]^T<sp/>\f$.</highlight></codeline>
<codeline lineno="6"><highlight class="normal">%&gt;<sp/>\param<sp/>x_0<sp/>Initial<sp/>states<sp/>value<sp/>\f$<sp/>\mathbf{x}(t_0)<sp/>\f$.</highlight></codeline>
<codeline lineno="7"><highlight class="normal">%&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">%&gt;<sp/>\</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>A<sp/>matrix<sp/>\f$<sp/>\left[(\mathrm{size}(\mathbf{x})<sp/>\times<sp/>\mathrm{size}</highlight></codeline>
<codeline lineno="9"><highlight class="normal">%&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(\mathbf{t})\right]<sp/>\f$<sp/>containing<sp/>the<sp/>approximated<sp/>solution</highlight></codeline>
<codeline lineno="10"><highlight class="normal">%&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\f$<sp/>\mathbf{x}(t)<sp/>\f$<sp/>and<sp/>\f$<sp/>\mathbf{x}^\prime(t)<sp/>\f$<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="11"><highlight class="normal">%&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system.<sp/>Additionally,<sp/>the<sp/>veils<sp/>\f$<sp/>\mathbf{v}(t)<sp/>\f$<sp/>and</highlight></codeline>
<codeline lineno="12"><highlight class="normal">%&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invariants<sp/>\f$<sp/>\mathbf{h}(\mathbf{x},<sp/>\mathbf{v},<sp/>t)<sp/>\f$<sp/>are</highlight></codeline>
<codeline lineno="13"><highlight class="normal">%&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>also<sp/>returned.</highlight></codeline>
<codeline lineno="14"><highlight class="normal">%</highlight></codeline>
<codeline lineno="15"><highlight class="normal">function<sp/>[x_out,<sp/>t,<sp/>v_out,<sp/>h_out]<sp/>=<sp/>solve(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>t,<sp/>x_0<sp/>)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>CMD<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Indigo.RungeKutta.solve(...):<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>%<sp/>Check<sp/>initial<sp/>conditions</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>num_eqns<sp/>=<sp/>this.m_sys.get_num_eqns();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>num_veil<sp/>=<sp/>this.m_sys.get_num_veil();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>num_invs<sp/>=<sp/>this.m_sys.get_num_invs();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>assert(num_eqns<sp/>==<sp/>length(x_0),<sp/>...</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>[CMD,<sp/></highlight><highlight class="stringliteral">&apos;in<sp/>%s<sp/>solver,<sp/>length(x_0)<sp/>is<sp/>%d,<sp/>expected<sp/>%d.&apos;</highlight><highlight class="normal">],<sp/>...</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>this.m_name,<sp/>length(x_0),<sp/>num_eqns);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>%<sp/>Instantiate<sp/>output</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>x_out<sp/>=<sp/>zeros(num_eqns,<sp/>length(t));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>v_out<sp/>=<sp/>zeros(num_veil,<sp/>length(t));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>h_out<sp/>=<sp/>zeros(num_invs,<sp/>length(t));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>%<sp/>Store<sp/>first<sp/>step</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>x_out(:,1)<sp/>=<sp/>x_0(:);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>v_out(:,1)<sp/>=<sp/>this.m_sys.v(x_out(:,1),<sp/>t(1));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>y_out(:,1)<sp/>=<sp/>this.m_sys.y(x_out(:,1),<sp/>v_out(:,1),<sp/>t(1));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>h_out(:,1)<sp/>=<sp/>this.m_sys.h(x_out(:,1),<sp/>y_out(:,1),<sp/>v_out(:,1),<sp/>t(1));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>%<sp/>Instantiate<sp/>temporary<sp/>variables</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>s<sp/><sp/><sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>Current<sp/>step</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>tol<sp/>=<sp/>sqrt(eps);<sp/>%<sp/>Tolerance</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>%<sp/>Update<sp/>the<sp/>current<sp/>step</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>x_s<sp/><sp/><sp/><sp/><sp/>=<sp/>x_out(:,1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>t_s<sp/><sp/><sp/><sp/><sp/>=<sp/>t(1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>d_t_s<sp/><sp/><sp/>=<sp/>t(2)<sp/>-<sp/>t(1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>d_t_tmp<sp/>=<sp/>d_t_s;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>%<sp/>Start<sp/>progress<sp/>bar</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.m_progress_bar)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>Indigo.Utils.progress_bar(</highlight><highlight class="stringliteral">&apos;_start&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>Print<sp/>percentage<sp/>of<sp/>solution<sp/>completion</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.m_progress_bar)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Indigo.Utils.progress_bar(ceil(100*t_s/t(end)))</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>Integrate<sp/>system</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>[x_s,<sp/>d_t_star,<sp/>~]<sp/>=<sp/>this.advance(x_s,<sp/>t_s,<sp/>d_t_s);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>Update<sp/>the<sp/>current<sp/>step</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>t_s<sp/>=<sp/>t_s<sp/>+<sp/>d_t_s;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>Saturate<sp/>the<sp/>suggested<sp/>timestep</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh_point_bool<sp/>=<sp/>abs(t_s<sp/>-<sp/>t(s+1))<sp/>&lt;<sp/>tol;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>saturation_bool<sp/>=<sp/>t_s<sp/>+<sp/>d_t_star<sp/>&gt;<sp/>t(s+1)<sp/>+<sp/>tol;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.m_adaptive_step<sp/>&amp;&amp;<sp/>~mesh_point_bool<sp/>&amp;&amp;<sp/>saturation_bool)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_t_tmp<sp/>=<sp/>d_t_star;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_t_s<sp/><sp/><sp/>=<sp/>t(s+1)<sp/>-<sp/>t_s;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_t_s<sp/>=<sp/>d_t_star;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>Store<sp/>solution<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>step<sp/>is<sp/>a<sp/>mesh<sp/>point</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(~this.m_adaptive_step<sp/>||<sp/>mesh_point_bool)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>Update<sp/>temporaries</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/><sp/><sp/><sp/><sp/>=<sp/>s+1;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_t_s<sp/>=<sp/>d_t_tmp;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>Update<sp/>outputs</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x_out(:,s)<sp/>=<sp/>x_s;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_out(:,s)<sp/>=<sp/>this.m_sys.v(x_out(:,s),<sp/>t(s));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y_out(:,s)<sp/>=<sp/>this.m_sys.y(x_out(:,s),<sp/>v_out(:,s),<sp/>t(s));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h_out(:,s)<sp/>=<sp/>this.m_sys.h(x_out(:,s),<sp/>y_out(:,s),<sp/>v_out(:,s),<sp/>t(s));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>Check<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>current<sp/>step<sp/>is<sp/>the<sp/>last<sp/>one</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(t_s<sp/>-<sp/>t(end))<sp/>&lt;<sp/>tol)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>%<sp/>End<sp/>progress<sp/>bar</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.m_progress_bar)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>Indigo.Utils.progress_bar(100);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.m_projection)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bar_str<sp/>=<sp/>sprintf(</highlight><highlight class="stringliteral">&apos;Projected-%s<sp/>completed!<sp/>(%d<sp/>steps)&apos;</highlight><highlight class="normal">,<sp/>this.m_name,<sp/>s);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bar_str<sp/>=<sp/>sprintf(</highlight><highlight class="stringliteral">&apos;%s<sp/>completed!<sp/>(%d<sp/>steps)&apos;</highlight><highlight class="normal">,<sp/>this.m_name,<sp/>s);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>Indigo.Utils.progress_bar(bar_str);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="105"><highlight class="normal">end</highlight></codeline>
    </programlisting>
    <location file="+Indigo/@RungeKutta/solve.m"/>
  </compounddef>
</doxygen>
