<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="a00035" kind="file" language="C++">
    <compoundname>advance.m</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">%&gt;<sp/>Advance<sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">a<sp/></highlight><highlight class="keyword">generic</highlight><highlight class="normal"><sp/>integration<sp/>method<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/>system<sp/>of<sp/>the<sp/>form</highlight></codeline>
<codeline lineno="2"><highlight class="normal">%&gt;<sp/>\f$<sp/>\mathbf{F}(\mathbf{x},<sp/>\mathbf{x}</highlight><highlight class="stringliteral">&apos;,<sp/>\mathbf{v},<sp/>t)<sp/>=<sp/>\mathbf{0}<sp/>\f$.</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">%&gt;<sp/>The<sp/>step<sp/>is<sp/>based<sp/>on<sp/>the<sp/>following<sp/>formula:</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">%&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">%&gt;<sp/>\f[</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">%&gt;<sp/>\mathbf{x}_{k+1}(t_{k}+\Delta<sp/>t)<sp/>=<sp/>\mathbf{x}_k(t_{k})<sp/>+</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">%&gt;<sp/>\mathcal{S}(\mathbf{x}_k(t_k),<sp/>\mathbf{x}&apos;</highlight><highlight class="normal">_k(t_k),<sp/>t_k,<sp/>\Delta<sp/>t)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">%&gt;<sp/>\f]</highlight></codeline>
<codeline lineno="9"><highlight class="normal">%&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">%&gt;<sp/>where<sp/>\f$<sp/>\mathcal{S}<sp/>\f$<sp/>is<sp/>the<sp/></highlight><highlight class="keyword">generic</highlight><highlight class="normal"><sp/>advancing<sp/>step<sp/>of<sp/>the<sp/>solver.</highlight></codeline>
<codeline lineno="11"><highlight class="normal">%&gt;<sp/>In<sp/>the<sp/>advvancing<sp/>step,<sp/>the<sp/>system<sp/>solution<sp/>is<sp/>also<sp/>projected<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="normal">%&gt;<sp/>manifold<sp/>\f$<sp/>\mathcal{h}(\mathbf{x},<sp/>\mathbf{v},<sp/>t)<sp/>\f$.<sp/>Substepping<sp/>is</highlight></codeline>
<codeline lineno="13"><highlight class="normal">%&gt;<sp/>also<sp/>used<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>solution<sp/>is<sp/>accurate.</highlight></codeline>
<codeline lineno="14"><highlight class="normal">%&gt;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">%&gt;<sp/>\param<sp/>x_k<sp/>States<sp/>value<sp/>at<sp/>\f$<sp/>k<sp/>\f$-th<sp/>time<sp/>step<sp/>\f$<sp/>\mathbf{x}(t_k)<sp/>\f$.</highlight></codeline>
<codeline lineno="16"><highlight class="normal">%&gt;<sp/>\param<sp/>t_k<sp/>Time<sp/>step<sp/>\f$<sp/>t_k<sp/>\f$.</highlight></codeline>
<codeline lineno="17"><highlight class="normal">%&gt;<sp/>\param<sp/>d_t<sp/>Advancing<sp/>time<sp/>step<sp/>\f$<sp/>\Delta<sp/>t\f$.</highlight></codeline>
<codeline lineno="18"><highlight class="normal">%&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">%&gt;<sp/>\</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>The<sp/>approximation<sp/>of<sp/>\f$<sp/>\mathbf{x_{k+1}}(t_{k}+\Delta<sp/>t)<sp/>\f$,</highlight></codeline>
<codeline lineno="20"><highlight class="normal">%&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\f$<sp/>\mathbf{x}</highlight><highlight class="stringliteral">&apos;_{k+1}(t_{k}+\Delta<sp/>t)<sp/>\f$<sp/>and<sp/>the<sp/>suggested<sp/>time</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral">%&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>for<sp/>the<sp/>next<sp/>advancing<sp/>step<sp/>\f$<sp/>\Delta<sp/>t_{k+1}<sp/>\f$.</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">%</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">function<sp/>[x_new,<sp/>d_t_star,<sp/>ierr]<sp/>=<sp/>advance(<sp/>this,<sp/>x_k,<sp/>t_k,<sp/>d_t<sp/>)</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/>CMD<sp/>=<sp/>&apos;</highlight><highlight class="normal">Indigo.RungeKutta.advance(...):<sp/></highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/>%<sp/>Check<sp/>initial<sp/>conditions</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/>num_eqns<sp/>=<sp/>this.m_sys.get_num_eqns();</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/>assert(num_eqns<sp/>==<sp/>length(x_k),<sp/>...</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>[CMD,<sp/>&apos;</highlight><highlight class="normal">in<sp/>%s<sp/>solver,<sp/>length(x_0)<sp/>is<sp/>%d,<sp/>expected<sp/>%d.</highlight><highlight class="stringliteral">&apos;],<sp/>...</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.m_name,<sp/>length(x_k),<sp/>num_eqns);</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/>%<sp/>Check<sp/>step<sp/>size</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/>assert(d_t<sp/>&gt;<sp/>0,<sp/>...</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>[CMD,<sp/>&apos;</highlight><highlight class="normal">in<sp/>%s<sp/>solver,<sp/>d_t<sp/>is<sp/>%f,<sp/>expected<sp/>&gt;<sp/>0.</highlight><highlight class="stringliteral">&apos;],<sp/>...</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.m_name,<sp/>d_t);</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/>%<sp/>Integrate<sp/>system</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/>[x_new,<sp/>d_t_star,<sp/>ierr]<sp/>=<sp/>this.step(<sp/>x_k,<sp/>t_k,<sp/>d_t<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/>%<sp/>If<sp/>the<sp/>advance<sp/>failed,<sp/>try<sp/>again<sp/>with<sp/>substepping</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/>if<sp/>(ierr<sp/>~=<sp/>0)</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>x_tmp<sp/><sp/><sp/>=<sp/>x_k;</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t_tmp<sp/><sp/><sp/>=<sp/>t_k;</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>d_t_tmp<sp/>=<sp/>0.5<sp/>*<sp/>d_t;</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>max_k<sp/>=<sp/>this.m_max_substeps<sp/>*<sp/>this.m_max_substeps;</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>while<sp/>(k<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>Integrate<sp/>system</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>[x_tmp,<sp/>d_t_star_tmp,<sp/>ierr]<sp/>=<sp/>this.step(x_tmp,<sp/>t_tmp,<sp/>d_t_tmp);</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>Calculate<sp/>the<sp/>next<sp/>time<sp/>step<sp/>with<sp/>substepping<sp/>logic</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ierr<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>Accept<sp/>the<sp/>step</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_t_tmp<sp/>=<sp/>d_t_star_tmp;</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>If<sp/>substepping<sp/>is<sp/>enabled,<sp/>double<sp/>the<sp/>step<sp/>size</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(k<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>k<sp/>&lt;<sp/>max_k)</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>k<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>If<sp/>the<sp/>substepping<sp/>index<sp/>is<sp/>even,<sp/>double<sp/>the<sp/>step<sp/>size</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rem(k,<sp/>2)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_t_tmp<sp/>=<sp/>2.0<sp/>*<sp/>d_t_tmp;</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(this.m_verbose)</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warning([CMD,<sp/>&apos;</highlight><highlight class="normal">in<sp/>%s<sp/>solver,<sp/>at<sp/>t<sp/>=<sp/>%g,<sp/>integration<sp/></highlight><highlight class="stringliteral">&apos;,<sp/>...</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;</highlight><highlight class="normal">succedded<sp/>disable<sp/>one<sp/>substepping<sp/>layer.</highlight><highlight class="stringliteral">&apos;],<sp/>...</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.m_name,<sp/>t_tmp);</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>Check<sp/>the<sp/>infinity<sp/>norm<sp/>of<sp/>the<sp/>solution</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(isfinite(norm(x_tmp,<sp/>inf)),<sp/>...</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[CMD,<sp/>&apos;</highlight><highlight class="normal">in<sp/>%s<sp/>solver,<sp/>at<sp/>t<sp/>=<sp/>%g,<sp/>||x||_inf<sp/>=<sp/>inf,<sp/>computation<sp/></highlight><highlight class="stringliteral">&apos;,<sp/>...</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;</highlight><highlight class="normal">interrupted.\n</highlight><highlight class="stringliteral">&apos;],<sp/>...</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.m_name,<sp/>t_tmp);</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>If<sp/>the<sp/>substepping<sp/>index<sp/>is<sp/>too<sp/>high,<sp/>abort<sp/>the<sp/>integration</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>k<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(k<sp/>&lt;<sp/>max_k,<sp/>...</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[CMD,<sp/>&apos;</highlight><highlight class="normal">in<sp/>%s<sp/>solver,<sp/>at<sp/>t<sp/>=<sp/>%g,<sp/>integration<sp/>failed<sp/></highlight><highlight class="stringliteral">&apos;,<sp/>...</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;</highlight><highlight class="normal">(error<sp/>code<sp/>%d)<sp/>with<sp/>d_t<sp/>=<sp/>%g,<sp/>aborting.</highlight><highlight class="stringliteral">&apos;],<sp/>...</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.m_name,<sp/>t_tmp,<sp/>ierr,<sp/>d_t);</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>Otherwise,<sp/>try<sp/>again<sp/>with<sp/>a<sp/>smaller<sp/>step</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(this.m_verbose)</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warning([CMD,<sp/>&apos;</highlight><highlight class="normal">in<sp/>%s<sp/>solver,<sp/>at<sp/>t<sp/>=<sp/>%g,<sp/>integration<sp/>failed<sp/></highlight><highlight class="stringliteral">&apos;,<sp/>...</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;</highlight><highlight class="normal">(error<sp/>code<sp/>%d),<sp/>adding<sp/>substepping<sp/>layer.</highlight><highlight class="stringliteral">&apos;],<sp/>...</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.m_name,<sp/>t_tmp,<sp/>ierr);</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_t_tmp<sp/>=<sp/>0.5<sp/>*<sp/>d_t_tmp;</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>Store<sp/>time<sp/>solution</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t_tmp<sp/>=<sp/>t_tmp<sp/>+<sp/>d_t_tmp;</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>%<sp/>Store<sp/>output<sp/>states<sp/>substepping<sp/>solutions</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>x_new<sp/><sp/><sp/><sp/>=<sp/>x_tmp;</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>d_t_star<sp/>=<sp/>d_t_tmp;</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/>end</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/>%<sp/>Project<sp/>intermediate<sp/>solution<sp/>on<sp/>the<sp/>invariants</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/>if<sp/>(this.m_projection)</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>x_new<sp/>=<sp/>this.project(x_new,<sp/>t_k+d_t);</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/>end</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral">end</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral">%</highlight></codeline>
    </programlisting>
    <location file="+Indigo/@RungeKutta/advance.m"/>
  </compounddef>
</doxygen>
